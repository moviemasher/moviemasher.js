{"version":3,"file":"static/js/982.032b4307.chunk.js","mappings":"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","sources":["../node_modules/@moviemasher/moviemasher.js/umd/moviemasher.js"],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.MovieMasher = {}));\n})(this, (function (exports) { 'use strict';\n\n  const ErrorName = {\n      Environment: 'error.environment',\n      DecodeProbe: 'decode.probe',\n      Unknown: 'error.unknown',\n      Internal: 'error.internal',\n      Type: 'error.type',\n      Reference: 'error.reference',\n      Range: 'error.range',\n      Syntax: 'error.syntax',\n      Url: 'error.url',\n      Evaluation: 'error.evaluation',\n      ClientDisabledDelete: 'client.disabled.delete',\n      ClientDisabledGet: 'client.disabled.get',\n      ClientDisabledList: 'client.disabled.list',\n      ClientDisabledSave: 'client.disabled.save',\n      ImportType: 'import.type',\n      ImportDuration: 'import.duration',\n      ImportSize: 'import.size',\n      ImportFile: 'import.file',\n      ServerAuthentication: 'server.authentication',\n      ServerAuthorization: 'server.authorization',\n      FilterId: 'filter.id',\n      MediaId: 'media.id',\n      Unimplemented: 'error.unimplemented',\n      Frame: 'error.frame',\n      OutputDuration: 'output.duration',\n      OutputDimensions: 'output.dimensions',\n  };\n  const ErrorNames = Object.values(ErrorName);\n  const StandardErrorName = {\n      Error: ErrorName.Unknown,\n      EvalError: ErrorName.Evaluation,\n      InternalError: ErrorName.Internal,\n      RangeError: ErrorName.Range,\n      ReferenceError: ErrorName.Reference,\n      SyntaxError: ErrorName.Syntax,\n      TypeError: ErrorName.Type,\n      URIError: ErrorName.Url,\n  };\n\n  const isErrorName = (value) => ((typeof value === 'string') && ErrorNames.includes(value));\n  const errorMessage = (name, context) => {\n      if (typeof context === 'string')\n          return context;\n      return name;\n  };\n  const errorObject = (message, name = ErrorName.Internal, cause) => {\n      const error = new Error(message);\n      Object.assign(error, { name, cause });\n      return error;\n  };\n  const errorObjectCaught = (error) => {\n      if (isErrorName(error))\n          return errorName(error);\n      if (typeof error === 'string')\n          return errorObject(error);\n      const { message: errorMessage = '', name = ErrorName.Internal } = error;\n      const message = errorMessage || String(name);\n      return errorObject(message, name, error);\n  };\n  const errorName = (name, context) => ({ name, message: errorMessage(name, context) });\n  const error = (code, context) => ({ error: errorName(code, context) });\n  const errorCaught = (error) => ({ error: errorObjectCaught(error) });\n  const errorPromise = (name, context) => (Promise.resolve(error(name, context)));\n  const errorExpected = (value, expected, prop) => {\n      const type = typeof value;\n      const isDefined = type !== 'undefined';\n      const isObject = type === 'object';\n      const name = prop || (isDefined ? type : 'value');\n      const words = [name, 'is'];\n      words.push(isObject ? value.constructor.name : type);\n      if (isDefined)\n          words.push(isObject ? JSON.stringify(value) : `'${value}'`);\n      words.push('instead of', expected);\n      return errorObject(words.join(' '), ErrorName.Type);\n  };\n  const errorThrow = (value, type, property) => {\n      const object = type ? errorExpected(value, type, property) : errorObjectCaught(value);\n      const { message, name, cause } = object;\n      const error = errorObject(message, name, cause);\n      console.trace(error.toString());\n      throw error;\n  };\n\n  const isObject = (value) => typeof value === 'object';\n  function assertObject(value, name) {\n      if (!isObject(value))\n          errorThrow(value, 'Object', name);\n  }\n  const isString = (value) => (typeof value === 'string');\n  function assertString(value, name) {\n      if (!isString(value))\n          errorThrow(value, 'String', name);\n  }\n  const isUndefined = (value) => typeof value === 'undefined';\n  const isNumberOrNaN = (value) => typeof value === 'number';\n  function assertNumber(value, name) {\n      if (!isNumberOrNaN(value))\n          errorThrow(value, 'Number', name);\n  }\n  const isBoolean = (value) => typeof value === 'boolean';\n  function assertBoolean(value, name) {\n      if (!isBoolean(value))\n          errorThrow(value, \"Boolean\", name);\n  }\n  const isMethod = (value) => typeof value === 'function';\n  function assertMethod(value, name) {\n      if (!isMethod(value))\n          errorThrow(value, 'Method', name);\n  }\n  const isDefined = (value) => !isUndefined(value);\n  function assertDefined(value, name) {\n      if (!isDefined(value))\n          errorThrow(value, 'Defined', name);\n  }\n  const isNan = (value) => isNumberOrNaN(value) && Number.isNaN(value);\n  const isNumber = (value) => isNumberOrNaN(value) && !Number.isNaN(value);\n  const isInteger = (value) => Number.isInteger(value);\n  function assertInteger(value, name) {\n      if (!isInteger(value))\n          errorThrow(value, 'Integer', name);\n  }\n  const isFloat = (value) => isNumber(value) && !isInteger(value);\n  const isPositive = (value) => isNumber(value) && value >= 0;\n  function assertPositive(value, name) {\n      if (!isPositive(value))\n          errorThrow(value, '>= 0', name);\n  }\n  const isBelowOne = (value) => isNumber(value) && value < 1;\n  const isAboveZero = (value) => isNumber(value) && value > 0;\n  function assertAboveZero(value, name) {\n      if (!isAboveZero(value))\n          errorThrow(value, '> zero', name);\n  }\n  const isArray = (value) => (isDefined(Array.isArray) ? Array.isArray(value) : value instanceof Array);\n  function assertArray(value, name) {\n      if (!isArray(value))\n          errorThrow(value, 'Array', name);\n  }\n  const length = (value) => !!value.length;\n  const isPopulatedString = (value) => isString(value) && length(String(value));\n  function assertPopulatedString(value, name = 'value') {\n      if (!isPopulatedString(value))\n          errorThrow(value, 'populated string', name);\n  }\n  const isPopulatedArray = (value) => (isArray(value) && length(value));\n  function assertPopulatedArray(value, name = 'value') {\n      if (!isPopulatedArray(value))\n          errorThrow(value, 'populated array', name);\n  }\n  const isPopulatedObject = (value) => (isObject(value) && length(Object.keys(value)));\n  function assertPopulatedObject(value, name = 'value') {\n      if (!isPopulatedObject(value))\n          errorThrow(value, 'populated array', name);\n  }\n  const isNumeric = (value) => ((isNumber(value) || isPopulatedString(value)) && !isNan(Number(value)));\n  function assertTrue(value, name = 'value') {\n      if (!value)\n          errorThrow(value, 'true', name);\n  }\n  const isRgb = (value) => {\n      return isObject(value) && \"r\" in value && \"g\" in value && \"b\" in value;\n  };\n  function assertRgb(value, name) {\n      if (!isRgb(value))\n          errorThrow(value, 'Rgb', name);\n  }\n  const isTime = (value) => {\n      return isObject(value) && \"isRange\" in value;\n  };\n  function assertTime(value, name) {\n      if (!isTime(value))\n          errorThrow(value, \"Time\", name);\n  }\n  const isTimeRange = (value) => {\n      return isTime(value) && value.isRange;\n  };\n  function assertTimeRange(value, name) {\n      if (!isTimeRange(value))\n          errorThrow(value, \"TimeRange\", name);\n  }\n  const isValue = (value) => {\n      return isNumber(value) || isString(value);\n  };\n  const isTrueValue = (value) => {\n      if (!isValue(value))\n          return false;\n      if (isNumeric(value))\n          return !!Number(value);\n      return isPopulatedString(value);\n  };\n  function assertValue(value, name) {\n      if (!isValue(value))\n          errorThrow(value, \"Value\", name);\n  }\n  const isValueObject = (value) => {\n      return isObject(value) && Object.values(value).every(value => isValue(value));\n  };\n  function assertValueObject(value, name) {\n      if (!isValueObject(value))\n          errorThrow(value, \"ValueRecord\", name);\n  }\n  const isJsonRecord = (value) => (isObject(value) && !(\"error\" in value));\n  const isJsonRecords = (value) => (isArray(value));\n  const isDefiniteError = (value) => {\n      return isObject(value) && \"error\" in value && isObject(value.error);\n  };\n\n  const AudioType = 'audio';\n  const EffectType = 'effect';\n  const FontType = 'font';\n  const ImageType = 'image';\n  const MashType = 'mash';\n  const SequenceType = 'sequence';\n  const VideoType = 'video';\n  const AudioStreamType = 'audiostream';\n  const VideoStreamType = 'videostream';\n  const JsonType = 'json';\n  const RecordType = 'record';\n  const RecordsType = 'records';\n  const MediaTypes = [AudioType, EffectType, FontType, ImageType, MashType, SequenceType, VideoType];\n  const isMediaType = (value) => {\n      return MediaTypes.includes(value);\n  };\n  function assertMediaType(value, name) {\n      if (!isMediaType(value))\n          errorThrow(value, 'MediaType', name);\n  }\n  const TranscodingTypes = [FontType, ImageType, VideoType, SequenceType];\n  const isTranscodingType = (type) => {\n      return TranscodingTypes.includes(type);\n  };\n  function assertTranscodingType(value, name) {\n      if (!isTranscodingType(value))\n          errorThrow(value, \"TranscodingType\", name);\n  }\n  const CookedTypes = [EffectType, MashType];\n  const isCookedType = (type) => {\n      return isString(type) && CookedTypes.includes(type);\n  };\n  const RawTypes = [AudioType, ImageType, VideoType];\n  const isRawType = (type) => {\n      return isString(type) && RawTypes.includes(type);\n  };\n  const LoadTypes = [...RawTypes, FontType, JsonType];\n  const isLoadType = (type) => {\n      return LoadTypes.includes(type);\n  };\n  function assertLoadType(value, name) {\n      if (!isLoadType(value))\n          errorThrow(value, \"LoadType\", name);\n  }\n  const SizingMediaTypes = [FontType, ImageType, VideoType, SequenceType];\n  const isSizingMediaType = (type) => {\n      return SizingMediaTypes.includes(type);\n  };\n  const TimingMediaTypes = [AudioType, VideoType, SequenceType];\n  const isTimingMediaType = (type) => {\n      return TimingMediaTypes.includes(type);\n  };\n  const ContainerTypes = [FontType, ImageType, SequenceType];\n  const isContainerType = (type) => {\n      return ContainerTypes.includes(type);\n  };\n  function assertContainerType(value, name) {\n      if (!isContainerType(value))\n          errorThrow(value, 'ContainerType', name);\n  }\n  const ContentTypes = [ImageType, VideoType, SequenceType, AudioType];\n  const isContentType = (type) => {\n      return ContentTypes.includes(type);\n  };\n  function assertContentType(value, name) {\n      if (!isContentType(value))\n          errorThrow(value, 'ContentType', name);\n  }\n  const EditTypes = [ImageType, VideoType, SequenceType, AudioType];\n  const isEditType = (type) => {\n      return EditTypes.includes(type);\n  };\n  function assertEditType(value, name) {\n      if (!isEditType(value))\n          errorThrow(value, 'EditType', name);\n  }\n  exports.DroppingPosition = void 0;\n  (function (DroppingPosition) {\n      DroppingPosition[\"At\"] = \"at\";\n      DroppingPosition[\"After\"] = \"after\";\n      DroppingPosition[\"Before\"] = \"before\";\n      DroppingPosition[\"None\"] = \"none\";\n  })(exports.DroppingPosition || (exports.DroppingPosition = {}));\n  exports.ActionType = void 0;\n  (function (ActionType) {\n      ActionType[\"AddClipToTrack\"] = \"addClipToTrack\";\n      ActionType[\"AddTrack\"] = \"addTrack\";\n      ActionType[\"Change\"] = \"change\";\n      ActionType[\"ChangeFrame\"] = \"changeFrame\";\n      ActionType[\"ChangeMultiple\"] = \"changeMultiple\";\n      ActionType[\"Move\"] = \"move\";\n      ActionType[\"MoveClip\"] = \"moveClip\";\n      ActionType[\"RemoveClip\"] = \"removeClip\";\n  })(exports.ActionType || (exports.ActionType = {}));\n  exports.AVType = void 0;\n  (function (AVType) {\n      AVType[\"Audio\"] = \"audio\";\n      AVType[\"Both\"] = \"both\";\n      AVType[\"Video\"] = \"video\";\n  })(exports.AVType || (exports.AVType = {}));\n  exports.SelectType = void 0;\n  (function (SelectType) {\n      SelectType[\"Clip\"] = \"clip\";\n      SelectType[\"Container\"] = \"container\";\n      SelectType[\"Content\"] = \"content\";\n      SelectType[\"Mash\"] = \"mash\";\n      SelectType[\"None\"] = \"none\";\n      SelectType[\"Track\"] = \"track\";\n  })(exports.SelectType || (exports.SelectType = {}));\n  const SelectTypes = Object.values(exports.SelectType);\n  const isSelectType = (value) => {\n      return SelectTypes.includes(value);\n  };\n  function assertSelectType(value, name) {\n      if (!isSelectType(value))\n          errorThrow(value, 'SelectType', name);\n  }\n  const ClipSelectTypes = [exports.SelectType.Content, exports.SelectType.Container];\n  const isClipSelectType = (type) => {\n      return isSelectType(type) && ClipSelectTypes.includes(type);\n  };\n  exports.OutputFormat = void 0;\n  (function (OutputFormat) {\n      OutputFormat[\"AudioConcat\"] = \"wav\";\n      OutputFormat[\"Flv\"] = \"flv\";\n      OutputFormat[\"Hls\"] = \"hls\";\n      OutputFormat[\"Jpeg\"] = \"jpeg\";\n      OutputFormat[\"Mdash\"] = \"mdash\";\n      OutputFormat[\"Mp3\"] = \"mp3\";\n      OutputFormat[\"Mp4\"] = \"mp4\";\n      OutputFormat[\"Png\"] = \"image2\";\n      OutputFormat[\"Rtmp\"] = \"rtmp\";\n      OutputFormat[\"VideoConcat\"] = \"yuv4mpegpipe\";\n  })(exports.OutputFormat || (exports.OutputFormat = {}));\n  const EncodingTypes = [AudioType, ImageType, VideoType, FontType];\n  exports.FillType = void 0;\n  (function (FillType) {\n      FillType[\"Color\"] = \"color\";\n      FillType[\"Fill\"] = \"fill\";\n  })(exports.FillType || (exports.FillType = {}));\n  const FillTypes = Object.values(exports.FillType);\n  const isFillType = (type) => {\n      return FillTypes.includes(type);\n  };\n  exports.GraphFileType = void 0;\n  (function (GraphFileType) {\n      GraphFileType[\"Svg\"] = \"svg\";\n      GraphFileType[\"SvgSequence\"] = \"svgsequence\";\n      GraphFileType[\"Txt\"] = \"txt\";\n      // Object = 'object'\n  })(exports.GraphFileType || (exports.GraphFileType = {}));\n  const GraphFileTypes = Object.values(exports.GraphFileType);\n  const isGraphFileType = (type) => {\n      return isPopulatedString(type) && GraphFileTypes.includes(type);\n  };\n  exports.DataType = void 0;\n  (function (DataType) {\n      DataType[\"Boolean\"] = \"boolean\";\n      DataType[\"ContainerId\"] = \"containerid\";\n      DataType[\"ContentId\"] = \"contentid\";\n      DataType[\"DefinitionId\"] = \"definitionid\";\n      DataType[\"FontId\"] = \"fontid\";\n      DataType[\"Frame\"] = \"frame\";\n      DataType[\"Icon\"] = \"icon\";\n      DataType[\"Number\"] = \"number\";\n      DataType[\"Percent\"] = \"percent\";\n      DataType[\"Rgb\"] = \"rgb\";\n      DataType[\"String\"] = \"string\";\n      DataType[\"Option\"] = \"option\";\n  })(exports.DataType || (exports.DataType = {}));\n  const DataTypes = Object.values(exports.DataType);\n  const isDataType = (type) => {\n      return DataTypes.includes(type);\n  };\n  function assertDataType(value, name) {\n      if (!isDataType(value))\n          errorThrow(value, \"DataType\", name);\n  }\n  exports.Orientation = void 0;\n  (function (Orientation) {\n      Orientation[\"H\"] = \"H\";\n      Orientation[\"V\"] = \"V\";\n  })(exports.Orientation || (exports.Orientation = {}));\n  const Orientations = Object.values(exports.Orientation);\n  const isOrientation = (value) => {\n      return isPopulatedString(value) && Orientations.includes(value);\n  };\n  exports.Direction = void 0;\n  (function (Direction) {\n      Direction[\"E\"] = \"E\";\n      Direction[\"N\"] = \"N\";\n      Direction[\"S\"] = \"S\";\n      Direction[\"W\"] = \"W\";\n  })(exports.Direction || (exports.Direction = {}));\n  const Directions = Object.values(exports.Direction);\n  const isDirection = (value) => {\n      return Directions.includes(value);\n  };\n  function assertDirection(value, name) {\n      if (!isDirection(value))\n          errorThrow(value, \"Direction\", name);\n  }\n  exports.Anchor = void 0;\n  (function (Anchor) {\n      Anchor[\"E\"] = \"E\";\n      Anchor[\"N\"] = \"N\";\n      Anchor[\"NE\"] = \"NE\";\n      Anchor[\"NW\"] = \"NW\";\n      Anchor[\"S\"] = \"S\";\n      Anchor[\"SE\"] = \"SE\";\n      Anchor[\"SW\"] = \"SW\";\n      Anchor[\"W\"] = \"W\";\n  })(exports.Anchor || (exports.Anchor = {}));\n  const Anchors = Object.values(exports.Anchor);\n  exports.TriggerType = void 0;\n  (function (TriggerType) {\n      TriggerType[\"Init\"] = \"init\";\n      TriggerType[\"Stop\"] = \"stop\";\n      TriggerType[\"Start\"] = \"start\";\n  })(exports.TriggerType || (exports.TriggerType = {}));\n  const TriggerTypes = Object.values(exports.TriggerType);\n  const isTriggerType = (type) => {\n      return TriggerTypes.includes(type);\n  };\n  exports.TransformType = void 0;\n  (function (TransformType) {\n      TransformType[\"Scale\"] = \"scale\";\n      TransformType[\"Translate\"] = \"translate\";\n  })(exports.TransformType || (exports.TransformType = {}));\n  exports.EventType = void 0;\n  (function (EventType) {\n      EventType[\"Action\"] = \"action\";\n      EventType[\"Active\"] = \"active\";\n      EventType[\"Added\"] = \"added\";\n      EventType[\"Cast\"] = \"cast\";\n      EventType[\"Draw\"] = \"draw\";\n      EventType[\"Duration\"] = \"durationchange\";\n      EventType[\"Ended\"] = \"ended\";\n      EventType[\"Frame\"] = \"frame\";\n      EventType[\"Fps\"] = \"ratechange\";\n      EventType[\"Loaded\"] = \"loadeddata\";\n      EventType[\"Pause\"] = \"pause\";\n      EventType[\"Play\"] = \"play\";\n      EventType[\"Playing\"] = \"playing\";\n      EventType[\"Render\"] = \"render\";\n      EventType[\"Resize\"] = \"resize\";\n      EventType[\"Save\"] = \"save\";\n      EventType[\"Seeked\"] = \"seeked\";\n      EventType[\"Seeking\"] = \"seeking\";\n      EventType[\"Selection\"] = \"selection\";\n      EventType[\"Time\"] = \"timeupdate\";\n      EventType[\"Track\"] = \"track\";\n      EventType[\"Volume\"] = \"volumechange\";\n      EventType[\"Waiting\"] = \"waiting\";\n  })(exports.EventType || (exports.EventType = {}));\n  const EventTypes = Object.values(exports.EventType);\n  const isEventType = (type) => {\n      return EventTypes.includes(type);\n  };\n  exports.MoveType = void 0;\n  (function (MoveType) {\n      MoveType[\"Audio\"] = \"audio\";\n      MoveType[\"Effect\"] = \"effect\";\n      MoveType[\"Video\"] = \"video\";\n  })(exports.MoveType || (exports.MoveType = {}));\n  exports.MasherAction = void 0;\n  (function (MasherAction) {\n      MasherAction[\"Redo\"] = \"redo\";\n      MasherAction[\"Remove\"] = \"remove\";\n      MasherAction[\"Render\"] = \"render\";\n      MasherAction[\"Save\"] = \"save\";\n      MasherAction[\"Undo\"] = \"undo\";\n  })(exports.MasherAction || (exports.MasherAction = {}));\n  exports.ServerType = void 0;\n  (function (ServerType) {\n      ServerType[\"Api\"] = \"api\";\n      ServerType[\"Data\"] = \"data\";\n      ServerType[\"File\"] = \"file\";\n      ServerType[\"Rendering\"] = \"rendering\";\n      ServerType[\"Web\"] = \"web\";\n  })(exports.ServerType || (exports.ServerType = {}));\n  const ServerTypes = Object.values(exports.ServerType);\n  exports.Duration = void 0;\n  (function (Duration) {\n      Duration[Duration[\"Unknown\"] = -1] = \"Unknown\";\n      Duration[Duration[\"Unlimited\"] = -2] = \"Unlimited\";\n      Duration[Duration[\"None\"] = 0] = \"None\";\n  })(exports.Duration || (exports.Duration = {}));\n  exports.Timing = void 0;\n  (function (Timing) {\n      Timing[\"Custom\"] = \"custom\";\n      Timing[\"Content\"] = \"content\";\n      Timing[\"Container\"] = \"container\";\n  })(exports.Timing || (exports.Timing = {}));\n  const Timings = Object.values(exports.Timing);\n  exports.Sizing = void 0;\n  (function (Sizing) {\n      Sizing[\"Preview\"] = \"preview\";\n      Sizing[\"Content\"] = \"content\";\n      Sizing[\"Container\"] = \"container\";\n  })(exports.Sizing || (exports.Sizing = {}));\n  const Sizings = Object.values(exports.Sizing);\n  exports.Clicking = void 0;\n  (function (Clicking) {\n      Clicking[\"Show\"] = \"show\";\n      Clicking[\"Hide\"] = \"hide\";\n      Clicking[\"Play\"] = \"play\";\n  })(exports.Clicking || (exports.Clicking = {}));\n  const Clickings = Object.values(exports.Clicking);\n\n  const ApiVersion = \"5.1.2\";\n\n  const EndpointsApi = {\n      servers: '',\n      callbacks: '',\n  };\n  const EndpointsEncode = {\n      start: '',\n      status: '',\n  };\n  const EndpointsRendering = { ...EndpointsEncode, upload: '' };\n  const EndpointsCrud = {\n      delete: '',\n      get: '',\n      put: '',\n      retrieve: '',\n  };\n  const EndpointsData = {\n      cast: { ...EndpointsCrud, default: '' },\n      mash: { ...EndpointsCrud, default: '' },\n      stream: { ...EndpointsCrud },\n      definition: { ...EndpointsCrud },\n  };\n  const EndpointsFile = {\n      store: '',\n  };\n  const Endpoints = {\n      [exports.ServerType.Api]: EndpointsApi,\n      [exports.ServerType.Data]: EndpointsData,\n      [exports.ServerType.File]: EndpointsFile,\n      [exports.ServerType.Rendering]: EndpointsRendering,\n  };\n  // populate Endpoints with key paths...\n  Object.entries(Endpoints).forEach(([serverType, server]) => {\n      if (isObject(server))\n          Object.entries(server).forEach(([key1, value1]) => {\n              if (isString(value1))\n                  server[key1] = `/${serverType}/${key1}`;\n              else\n                  Object.entries(value1).forEach(([key2, value2]) => {\n                      if (!value2)\n                          value1[key2] = `/${serverType}/${key1}/${key2}`;\n                  });\n          });\n  });\n\n  exports.Component = void 0;\n  (function (Component) {\n      Component[\"Browser\"] = \"browser\";\n      Component[\"Player\"] = \"player\";\n      Component[\"Inspector\"] = \"inspector\";\n      Component[\"Timeline\"] = \"timeline\";\n  })(exports.Component || (exports.Component = {}));\n  const isOutput = (value) => {\n      return isObject(value); //&& isRequest(value.request)\n  };\n\n  const isIdentified = (value) => {\n      return isObject(value) && \"id\" in value && isPopulatedString(value.id);\n  };\n  function assertIdentified(value, name) {\n      if (!isIdentified(value))\n          errorThrow(value, 'Identified', name);\n  }\n\n  const OrderAscending = 'acending';\n  const OrderDecending = 'decending';\n  const ExtJpeg = 'jpg';\n  const JsonExtension = 'json';\n  const TextExtension = 'txt';\n  const CssExtension = 'css';\n  const Mp4Extension = 'mp4';\n  const PngExtension = 'png';\n  const CssContentType = 'text/css';\n  const EmptyMethod = () => { };\n  // xmlns\n  const NamespaceSvg = 'http://www.w3.org/2000/svg';\n  // xmlns:xhtml\n  const NamespaceXhtml = 'http://www.w3.org/1999/xhtml';\n  // xmlns:xlink\n  const NamespaceLink = 'http://www.w3.org/1999/xlink';\n  const IdPrefix = 'com.moviemasher.';\n  const IdSuffix = '.default';\n  const ClassDisabled = 'disabled';\n  const ClassItem = 'item';\n  const ClassButton = 'button';\n  const ClassCollapsed = 'collapsed';\n  const ClassSelected = 'selected';\n  const ClassDropping = 'dropping';\n  const ClassDroppingBefore = 'dropping-before';\n  const ClassDroppingAfter = 'dropping-after';\n\n  const arrayLast = (array) => array[array.length - 1];\n  const arraySet = (array, items) => {\n      array.splice(0, array.length, ...items);\n      return array;\n  };\n  const arrayReversed = (array) => {\n      return [...array].reverse();\n  };\n  const arrayUnique = (array) => {\n      return [...new Set(array)];\n  };\n\n  let urlBaseValue = '';\n  const urlBase = () => {\n      if (!urlBaseInitialized())\n          return errorThrow(ErrorName.Url);\n      return urlBaseValue;\n  };\n  const urlBaseInitialize = (base) => {\n      if (isPopulatedString(base))\n          return urlBaseValue = base;\n      const { document } = globalThis;\n      return urlBaseValue = document?.baseURI || 'http://localhost/';\n  };\n  const urlBaseInitialized = () => Boolean(urlBaseValue);\n  /**\n   *\n   * @param endpoint - relative Endpoint\n   * @returns endpoint resolved relative to base URL\n   */\n  const urlEndpoint = (endpoint = {}) => {\n      const url = new URL(urlBase());\n      const { protocol, hostname, port, pathname } = url;\n      const result = {\n          protocol, hostname, pathname: urlResolve(pathname, endpoint.pathname)\n      };\n      if (isNumeric(port))\n          result.port = Number(port);\n      return result;\n  };\n  const urlIsObject = (url) => url.startsWith('object:/');\n  const urlIsHttp = (url) => url.startsWith('http');\n  const urlIsBlob = (url) => Boolean(url?.startsWith('blob'));\n  const urlHasProtocol = (url) => url.includes(':');\n  const urlCombine = (url, path) => {\n      const urlStripped = url.endsWith('/') ? url.slice(0, -1) : url;\n      const pathStripped = path.startsWith('/') ? path.slice(1) : path;\n      return urlStripped + '/' + pathStripped;\n  };\n  const urlResolve = (url, path) => {\n      if (!path)\n          return url;\n      const [first, second] = path;\n      if (first === '/')\n          return path;\n      if (first !== '.' || second === '/')\n          return urlCombine(url, path);\n      const urlStripped = url.endsWith('/') ? url.slice(0, -1) : url;\n      const urlBits = urlStripped.split('/');\n      path.split('/').forEach(component => {\n          if (component === '..')\n              urlBits.pop();\n          else\n              urlBits.push(component);\n      });\n      return urlBits.join('/');\n  };\n  const urlFromEndpoint = (endpoint) => {\n      const mergedEndpoint = urlEndpoint(endpoint);\n      const { port, pathname, hostname, protocol, search } = mergedEndpoint;\n      // if (!protocol) return ''\n      assertPopulatedString(hostname);\n      assertPopulatedString(protocol);\n      const bits = [];\n      bits.push(protocol, '//', hostname);\n      if (isNumeric(port))\n          bits.push(':', String(port));\n      const url = bits.join('');\n      if (!pathname)\n          return url;\n      const combined = urlCombine(url, pathname);\n      if (!search)\n          return combined;\n      return [combined, search].join('');\n  };\n  const urlForEndpoint = (endpoint, suffix = '') => {\n      if (suffix && urlHasProtocol(suffix))\n          return suffix;\n      const base = urlFromEndpoint(endpoint);\n      const slashed = base.endsWith('/') ? base : base + '/';\n      if (!urlHasProtocol(slashed))\n          return slashed + suffix;\n      const url = new URL(suffix, slashed);\n      const { href } = url;\n      return href;\n  };\n  const urlProtocol = (string) => {\n      const colonIndex = string.indexOf(':');\n      if (!isAboveZero(colonIndex))\n          return '';\n      return string.slice(0, colonIndex + 1);\n  };\n  const urlOptionsObject = (options) => {\n      if (!isPopulatedString(options))\n          return;\n      // console.log(\"parseOptions\", type, options)\n      const pairs = options.split(';');\n      const entries = pairs.map(pair => {\n          const [key, string] = pair.split('=');\n          const value = isNumeric(string) ? Number(string) : string;\n          return [key, value];\n      });\n      return Object.fromEntries(entries);\n  };\n  const urlOptions = (options) => {\n      if (!options)\n          return '';\n      return Object.entries(options).map(entry => entry.join('=')).join(';');\n  };\n  const urlPrependProtocol = (protocol, url, options) => {\n      const withColon = protocol.endsWith(':') ? protocol : `${protocol}:`;\n      if (url.startsWith(withColon) && !options)\n          return url;\n      return `${withColon}${urlOptions(options)}/${url}`;\n  };\n  const urlExtension = (extension) => ((extension[0] === '.') ? extension.slice(1) : extension);\n  const urlFilename = (name, extension) => (`${name}.${urlExtension(extension)}`);\n  const urlFromCss = (string) => {\n      const exp = /url\\(([^)]+)\\)(?!.*\\1)/g;\n      const matches = string.matchAll(exp);\n      const matchesArray = [...matches];\n      const url = arrayLast(arrayLast(matchesArray));\n      // console.log(this.constructor.name, \"lastCssUrl\", string, url)\n      return url;\n  };\n\n  const isEndpoint = (value) => {\n      return isObject(value);\n  };\n  function assertEndpoint(value, name) {\n      if (!isEndpoint(value))\n          errorThrow(value, 'Endpoint', name);\n  }\n  const endpointUrl = (endpoint) => {\n      const absolute = endpointAbsolute(endpoint);\n      const { protocol, hostname, pathname, port, search } = absolute;\n      const bits = [protocol];\n      if (!urlIsBlob(protocol))\n          bits.push('//');\n      bits.push(hostname);\n      if (isNumeric(port))\n          bits.push(`:${port}`);\n      if (pathname)\n          bits.push(pathname);\n      if (search)\n          bits.push(search);\n      return bits.join('');\n  };\n  const endpointFromAbsolute = (urlString) => {\n      const url = new URL(urlString);\n      // console.trace('endpointFromAbsolute', urlString, url)\n      const { protocol, hostname, pathname, port, search } = url;\n      const result = { protocol, hostname, pathname, search };\n      if (isNumeric(port))\n          result.port = Number(port);\n      return result;\n  };\n  const endpointFromUrl = (urlString) => {\n      if (urlHasProtocol(urlString))\n          return endpointFromAbsolute(urlString);\n      const [pathname, search] = urlString.split('?');\n      const result = { pathname };\n      if (search)\n          result.search = `?${search}`;\n      return result;\n  };\n  const endpointIsAbsolute = (endpoint) => {\n      const { hostname, protocol } = endpoint;\n      return urlIsBlob(protocol) || isPopulatedString(hostname);\n  };\n  /**\n   *\n   * @param endpoint - relative or absolute Endpoint\n   * @returns endpoint if absolute, otherwise endpoint relative to base URL\n   */\n  const endpointAbsolute = (endpoint) => {\n      if (endpointIsAbsolute(endpoint))\n          return endpoint;\n      return urlEndpoint(endpoint);\n  };\n\n  const isRequest = (value) => {\n      return isObject(value) && ((\"endpoint\" in value && isEndpoint(value.endpoint) ||\n          (\"response\" in value && isObject(value.response))));\n  };\n  function assertRequest(value, name) {\n      if (!isRequest(value))\n          errorThrow(value, 'Request', name);\n  }\n\n  const isRequestableObject = (value) => {\n      return isIdentified(value);\n  };\n  const isRequestable = (value) => {\n      return isObject(value) && \"request\" in value && isRequest(value.request);\n  };\n\n  const colorRgbRegex = /^rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)$/;\n  const colorRgbaRegex = /^rgba\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3}),(\\d*(?:\\.\\d+)?)\\)$/;\n  const colorHexRegex = /^#([A-Fa-f0-9]{3,4}){1,2}$/;\n  const colorStrip = (color) => color.toLowerCase().replace(/[\\s]/g, '');\n  const colorStyle = () => {\n      if (typeof Option !== 'function')\n          return { color: '' };\n      console.log(\"colorStyle Option\", Option);\n      return new Option().style;\n  };\n  const colorValidRgba = (value) => colorRgbaRegex.test(value);\n  const colorValidRgb = (value) => colorRgbRegex.test(value);\n  const getChunksFromString = (st, chunkSize) => st.match(new RegExp(`.{${chunkSize}}`, \"g\"));\n  const hex256 = (hexStr) => parseInt(hexStr.repeat(2 / hexStr.length), 16);\n  const colorAlpha = (value) => {\n      if (!isPositive(value))\n          return 1.0;\n      return Math.max(0, Math.min(1.0, value / 255));\n  };\n  const colorHexToRgba = (hex) => {\n      if (!colorValidHex(hex))\n          return colorRgba;\n      const chunkSize = Math.floor((hex.length - 1) / 3);\n      const hexArr = getChunksFromString(hex.slice(1), chunkSize);\n      if (!hexArr)\n          return colorRgba;\n      const [r, g, b, a] = hexArr.map(hex256);\n      return { r, g, b, a: colorAlpha(a) };\n  };\n  const colorHexToRgb = (hex) => {\n      if (!colorValidHex(hex))\n          return colorRgb;\n      const chunkSize = Math.floor((hex.length - 1) / 3);\n      const hexArr = getChunksFromString(hex.slice(1), chunkSize);\n      if (!hexArr)\n          return colorRgb;\n      const [r, g, b] = hexArr.map(hex256);\n      return { r, g, b };\n  };\n  const colorRgbaToRgba = (value) => {\n      const color = colorStrip(value);\n      const rgbaMatch = color.match(colorRgbaRegex);\n      if (!rgbaMatch)\n          return colorRgba;\n      return {\n          r: Number(rgbaMatch[1]),\n          g: Number(rgbaMatch[2]),\n          b: Number(rgbaMatch[3]),\n          a: Number(rgbaMatch[4]),\n      };\n  };\n  const colorRgb = { r: 0, g: 0, b: 0 };\n  const colorRgba = { ...colorRgb, a: 1.0 };\n  const colorRgbKeys = 'rgb'.split('');\n  const colorRgbaKeys = [...colorRgbKeys, 'a'];\n  const colorTransparent = '#00000000';\n  const colorBlack = '#000000';\n  const colorWhite = '#FFFFFF';\n  const colorWhiteTransparent = '#FFFFFF00';\n  const colorBlackTransparent = '#00000000';\n  const colorWhiteOpaque = '#FFFFFFFF';\n  const colorBlackOpaque = '#000000FF';\n  const colorGreen = '#00FF00';\n  const colorYellow = '#FFFF00';\n  const colorRed = '#FF0000';\n  const colorBlue = '#0000FF';\n  const colorRgbToHex = (rgb) => {\n      let r = rgb.r.toString(16);\n      let g = rgb.g.toString(16);\n      let b = rgb.b.toString(16);\n      if (r.length < 2)\n          r = `0${r}`;\n      if (g.length < 2)\n          g = `0${g}`;\n      if (b.length < 2)\n          b = `0${b}`;\n      return `#${r}${g}${b}`;\n  };\n  const colorRgbaToHex = (object) => {\n      let r = object.r.toString(16);\n      let g = object.g.toString(16);\n      let b = object.b.toString(16);\n      let a = Math.round(255 * Number(object.a)).toString(16);\n      if (r.length < 2)\n          r = `0${r}`;\n      if (g.length < 2)\n          g = `0${g}`;\n      if (b.length < 2)\n          b = `0${b}`;\n      if (a.length < 2)\n          a = `0${a}`;\n      return `#${r}${g}${b}${a}`;\n  };\n  const colorValid = (color) => {\n      const stripped = colorStrip(color);\n      if (colorValidHex(stripped) || colorValidRgba(stripped) || colorValidRgb(stripped))\n          return true;\n      const style = colorStyle();\n      style.color = color;\n      const transformed = style.color;\n      if (transformed === color)\n          return false;\n      const styleStripped = colorStrip(transformed);\n      if (!styleStripped)\n          return false;\n      if (colorValidRgba(stripped) || colorValidRgb(stripped))\n          return true;\n      return styleStripped === stripped;\n  };\n  const colorValidHex = (value) => colorHexRegex.test(value);\n  const colorToRgb = (value) => {\n      const color = colorStrip(value);\n      if (colorValidHex(color))\n          return colorHexToRgb(color);\n      const rgbMatch = color.match(colorRgbRegex);\n      if (!rgbMatch)\n          return colorRgb;\n      return {\n          r: Number(rgbMatch[1]),\n          g: Number(rgbMatch[2]),\n          b: Number(rgbMatch[3]),\n      };\n  };\n  const colorToRgba = (value) => {\n      if (!colorValid(value))\n          return colorRgba;\n      const color = colorStrip(value);\n      if (colorValidHex(color))\n          return colorHexToRgba(color);\n      if (colorValidRgba(color))\n          return colorRgbaToRgba(color);\n      if (colorValidRgb(color))\n          return { a: 1.0, ...colorToRgb(color) };\n      return colorRgba;\n  };\n  const colorFromRgb = (rgb) => {\n      const { r, g, b } = rgb;\n      return `rgb(${r},${g},${b})`;\n  };\n  const colorRgbDifference = (rgb) => {\n      const { r, g, b } = rgb;\n      return {\n          ...rgb,\n          r: 255 - r,\n          g: 255 - g,\n          b: 255 - b,\n      };\n  };\n  function colorMixRbga(fromRgba, toRgba, amountToMix = 1.0) {\n      return Object.fromEntries(colorRgbaKeys.map(key => {\n          return [key, Math.round((fromRgba[key] * amountToMix) + (toRgba[key] * (1 - amountToMix)))];\n      }));\n  }\n  function colorMixRbg(fromRgb, toRgb, amountToMix = 1.0) {\n      return Object.fromEntries(colorRgbKeys.map(key => {\n          return [key, Math.round((fromRgb[key] * (1 - amountToMix)) + (toRgb[key] * amountToMix))];\n      }));\n  }\n\n  const PropertyTypesNumeric = [\n      exports.DataType.Frame,\n      exports.DataType.Percent,\n      exports.DataType.Number,\n  ];\n  const propertyTypeRepresentedAsNumber = (dataType) => {\n      return isDataType(dataType) && PropertyTypesNumeric.includes(dataType);\n  };\n  const propertyTypeIsString = (dataType) => {\n      if (dataType === exports.DataType.Boolean)\n          return false;\n      if (propertyTypeRepresentedAsNumber(dataType))\n          return false;\n      return true;\n  };\n  const propertyTypeDefault = (dataType) => {\n      if (isMediaType(dataType))\n          return `${IdPrefix}${dataType}${IdSuffix}`;\n      switch (dataType) {\n          case exports.DataType.Boolean: return false;\n          case exports.DataType.Rgb: return colorBlack;\n      }\n      return propertyTypeRepresentedAsNumber(dataType) ? 0 : '';\n  };\n  const propertyTypeValidBoolean = (value) => {\n      if (isBoolean(value))\n          return true;\n      if (isNumber(value))\n          return value === 0 || value === 1;\n      return ['true', 'false', ''].includes(value);\n  };\n  const propertyTypeValid = (value, dataType) => {\n      if (isMediaType(dataType))\n          return isPopulatedString(value);\n      switch (dataType) {\n          case exports.DataType.Boolean: return propertyTypeValidBoolean(value);\n          case exports.DataType.Rgb: return colorValid(String(value));\n          case exports.DataType.Frame:\n          case exports.DataType.Percent:\n          case exports.DataType.Number: return isNumeric(value);\n          case exports.DataType.String: return true;\n          case exports.DataType.ContainerId:\n          case exports.DataType.ContentId:\n          case exports.DataType.FontId:\n          case exports.DataType.DefinitionId:\n          default: return isPopulatedString(value);\n      }\n      return false;\n  };\n  const propertyTypeCoerce = (value, dataType) => {\n      if (dataType === exports.DataType.Boolean) {\n          if (isBoolean(value))\n              return value;\n          if (isNumeric(value))\n              return !!Number(value);\n          return value === 'true';\n      }\n      if (propertyTypeRepresentedAsNumber(dataType))\n          return isNumeric(value) ? Number(value) : 0;\n      return String(value);\n  };\n\n  const PropertyTweenSuffix = 'End';\n  class PropertiedClass {\n      constructor(..._args) { }\n      addProperties(object, ...properties) {\n          this.properties.push(...properties);\n          properties.forEach(property => {\n              this.propertyTweenSetOrDefault(object, property);\n              // console.log(this.constructor.name, \"property\", property.name, this[property.name])\n          });\n      }\n      properties = [];\n      propertiesInitialize(object) {\n          assertObject(object, 'propertiesInitialize(object)');\n          this.properties.forEach(property => this.propertyTweenSetOrDefault(object, property));\n      }\n      propertyFind(name) {\n          return this.properties.find(property => property.name === name);\n      }\n      propertyName(name) {\n          if (!name.endsWith(PropertyTweenSuffix))\n              return name;\n          return name.slice(0, -PropertyTweenSuffix.length);\n      }\n      propertySetOrDefault(object, property, name, defaultValue) {\n          const value = object[name];\n          const definedValue = isUndefined(value) ? defaultValue : value;\n          // if (name === 'contentId' || name === 'containerId') \n          // console.log(this.constructor.name, \"propertySetOrDefault\", name, definedValue, object)\n          this.setValue(definedValue, name, property);\n      }\n      propertyTweenSetOrDefault(object, property) {\n          const { name, defaultValue, tweenable } = property;\n          this.propertySetOrDefault(object, property, name, defaultValue);\n          if (tweenable)\n              this.propertySetOrDefault(object, property, `${name}${PropertyTweenSuffix}`);\n      }\n      setValue(value, name, property) {\n          if (isUndefined(value)) {\n              delete this[name];\n              return;\n          }\n          const propertyName = this.propertyName(name);\n          const found = property || this.propertyFind(propertyName);\n          assertTrue(found, `${this.constructor.name}.${propertyName} in ${this.properties.map(p => p.name).join(', ')}`);\n          const type = found.type;\n          if (!propertyTypeValid(value, type)) {\n              if (propertyName !== name) {\n                  // tween end value can be undefined\n                  delete this[name];\n              }\n              return;\n          }\n          const coerced = propertyTypeCoerce(value, type);\n          // console.log(this.constructor.name, \"setValue\", name, coerced)\n          this[name] = coerced;\n      }\n      setValues(object) {\n          Object.entries(object).forEach(([name, value]) => {\n              this.setValue(value, name);\n          });\n      }\n      toJSON() {\n          return Object.fromEntries(this.properties.flatMap(property => {\n              const { name, tweenable } = property;\n              const entries = [[name, this.value(name)]];\n              if (tweenable) {\n                  const key = `${name}${PropertyTweenSuffix}`;\n                  entries.push([key, this.value(key)]);\n              }\n              return entries;\n          }));\n      }\n      value(key) {\n          return this[key];\n      }\n  }\n  const isPropertied = (value) => (value instanceof PropertiedClass);\n\n  class RequestableClass extends PropertiedClass {\n      constructor(object) {\n          super();\n          const { id, type, kind, createdAt, request } = object;\n          this.id = id;\n          if (isPopulatedString(type))\n              this.type = type;\n          if (isPopulatedString(createdAt))\n              this.createdAt = createdAt;\n          if (isPopulatedString(kind))\n              this.kind = kind;\n          assertRequest(request);\n          this.request = request;\n          this.relativeRequest = request;\n      }\n      createdAt = '';\n      id;\n      kind = '';\n      get loadType() {\n          const { type } = this;\n          console.log(this.constructor.name, \"loadType\", type);\n          if (type === SequenceType)\n              return ImageType;\n          assertLoadType(type);\n          return type;\n      }\n      relativeRequest;\n      request;\n      type = '';\n      toJSON() {\n          const { id, type, kind, createdAt, relativeRequest } = this;\n          const { response, ...request } = relativeRequest;\n          return { id, request, type, kind, createdAt };\n      }\n  }\n\n  const isTranscoding = (value) => {\n      return isRequestable(value) && \"type\" in value && isMediaType(value.type);\n  };\n\n  const isMediaInstanceObject = (value) => {\n      return isObject(value) && (\"mediaId\" in value || \"definition\" in value);\n  };\n  const isMediaInstance = (value) => {\n      return isObject(value) && \"definitionIds\" in value;\n  };\n  const isMediaObject = (value) => {\n      return isRequestableObject(value);\n  };\n  const isMedia = (value) => {\n      return isTranscoding(value) && \"type\" in value && isMediaType(value.type);\n  };\n  function assertMedia(value, name) {\n      if (!isMedia(value))\n          errorThrow(value, 'Media', name);\n  }\n\n  const MediaFactoriesUnimplemented = (_) => {\n      return errorThrow(ErrorName.Unimplemented);\n  };\n  const MediaFactories = {\n      [AudioType]: MediaFactoriesUnimplemented,\n      [EffectType]: MediaFactoriesUnimplemented,\n      [FontType]: MediaFactoriesUnimplemented,\n      [ImageType]: MediaFactoriesUnimplemented,\n      [MashType]: MediaFactoriesUnimplemented,\n      [SequenceType]: MediaFactoriesUnimplemented,\n      [VideoType]: MediaFactoriesUnimplemented,\n  };\n\n  const mediaDefinition = (object) => {\n      const { type } = object;\n      assertMediaType(type);\n      return MediaFactories[type](object);\n  };\n\n  const MediaDefaults = {\n      [AudioType]: [],\n      [EffectType]: [],\n      [FontType]: [],\n      [ImageType]: [],\n      [MashType]: [],\n      [SequenceType]: [],\n      [VideoType]: [],\n  };\n\n  const counters = {\n      count: 0\n  };\n  class MediaCollection {\n      constructor() {\n          counters.count++;\n          this.id = counters.count;\n          // console.log(this.constructor.name, this.id, 'constructor')\n      }\n      id = 0;\n      byId = new Map();\n      byIdAdd(media) {\n          const mediaArray = Array.isArray(media) ? media : [media];\n          mediaArray.forEach(media => this.byId.set(media.id, media));\n          // console.log(this.constructor.name, this.id, 'byIdAdd', ...mediaArray.map(m => m.id), ...this.byId.keys())\n      }\n      byType(type) {\n          const list = this.mediaArraysByType.get(type);\n          if (list)\n              return list;\n          const definitions = MediaDefaults[type];\n          this.mediaArraysByType.set(type, definitions);\n          return definitions;\n      }\n      define(...objects) {\n          return objects.map(object => this.fromObject(object));\n      }\n      media(object) {\n          const { type } = object;\n          assertMediaType(type);\n          return mediaDefinition(object);\n      }\n      deleteFromArray(media) {\n          const { type, id } = media;\n          const mediaArray = this.byType(type);\n          const index = mediaArray.findIndex(media => id === media.id);\n          // console.log(this.constructor.name, this.id, \"definitionDelete\", type, id, index)\n          if (index < 0)\n              return;\n          mediaArray.splice(index, 1);\n      }\n      mediaArraysByType = new Map();\n      mediaTypeFromId(id) {\n          const type = id.split('.').slice(-2).shift();\n          return isMediaType(type) ? type : undefined;\n      }\n      fromId(id) {\n          if (this.installed(id))\n              return this.byId.get(id);\n          const mediaType = this.mediaTypeFromId(id);\n          assertMediaType(mediaType, `in MediaCollection.fromId('${id}')`);\n          const found = this.byType(mediaType).find(media => media.id === id);\n          assertMedia(found, id);\n          return found;\n      }\n      fromObject(object) {\n          const { id, type } = object;\n          assertPopulatedString(id);\n          if (this.installed(id) || this.predefined(id))\n              return this.fromId(id);\n          const mediaType = type || this.mediaTypeFromId(id);\n          assertMediaType(mediaType, 'type');\n          object.type = mediaType;\n          return this.install(this.media(object));\n      }\n      get ids() { return [...this.byId.keys()]; }\n      install(media) {\n          const { type, id } = media;\n          // console.log(this.constructor.name, this.id, \"install\", media.label)\n          if (this.installed(id)) {\n              // console.log(this.constructor.name, this.id, \"install REINSTALL\", type, id)\n              this.uninstall(media);\n              return this.updateDefinition(this.fromId(id), media);\n          }\n          // console.log(this.constructor.name, this.id, \"install\", type, id)\n          this.byIdAdd(media);\n          this.byType(type).push(media);\n          return media;\n      }\n      installed(id) {\n          const has = this.byId.has(id);\n          if (!has)\n              console.trace(this.constructor.name, this.id, 'installed FALSE', id, ...this.byId.keys());\n          return has;\n      }\n      predefined(id) {\n          if (id.startsWith(IdPrefix))\n              return true;\n          const mediaType = this.mediaTypeFromId(id);\n          if (!mediaType)\n              return false;\n          const array = this.byType(mediaType);\n          return array.some(media => media.id === id);\n      }\n      undefineAll() {\n          // console.log(this.constructor.name, this.id, \"undefineAll\")\n          // TODO: be more graceful - tell definitions they are being destroyed...\n          this.byId = new Map();\n          this.mediaArraysByType = new Map();\n      }\n      updateDefinition(oldDefinition, newDefinition) {\n          // console.log(this.constructor.name, this.id, \"updateDefinition\", oldDefinition.type, oldDefinition.id, \"->\", newDefinition.type, newDefinition.id)\n          this.uninstall(oldDefinition);\n          this.install(newDefinition);\n          return newDefinition;\n      }\n      updateDefinitionId(oldId, newId) {\n          // console.log(this.constructor.name, this.id, \"updateDefinitionId\", oldId, \"->\", newId)\n          const media = this.byId.get(oldId);\n          assertMedia(media, 'media');\n          this.byId.delete(oldId);\n          this.byId.set(newId, media);\n      }\n      uninstall(media) {\n          this.deleteFromArray(media);\n          const { id } = media;\n          this.byId.delete(id);\n          return media;\n      }\n  }\n\n  const isTyped = (value) => {\n      return isObject(value) &&\n          \"type\" in value &&\n          isPopulatedString(value.type);\n  };\n  function assertTyped(value, name) {\n      if (!isTyped(value))\n          errorThrow(value, 'Typed', name);\n  }\n\n  const isClientVideo = (value) => {\n      return isObject(value) && value instanceof HTMLVideoElement;\n  };\n  function assertClientVideo(value, name) {\n      if (!isClientVideo(value))\n          errorThrow(value, \"ClientVideo\", name);\n  }\n  const isClientImage = (value) => {\n      return isObject(value) && value instanceof HTMLImageElement;\n  };\n  function assertClientImage(value, name) {\n      if (!isClientImage(value))\n          errorThrow(value, \"ClientImage\", name);\n  }\n  const isClientAudio = (value) => {\n      return isObject(value) && value instanceof AudioBuffer;\n  };\n  function assertClientAudio(value, name) {\n      if (!isClientAudio(value))\n          errorThrow(value, \"ClientAudio\", name);\n  }\n  const isClientFont = (value) => {\n      return isObject(value) && \"family\" in value;\n  };\n  function assertClientFont(value, name) {\n      if (!isClientFont(value))\n          errorThrow(value, \"ClientFont\", name);\n  }\n  const isLoaderType = (value) => {\n      return isLoadType(value) || isGraphFileType(value);\n  };\n  function assertLoaderType(value, name) {\n      if (!isLoaderType(value))\n          errorThrow(value, \"LoaderType\", name);\n  }\n  const isClientMedia = (value) => (isClientAudio(value) ||\n      isClientFont(value) ||\n      isClientImage(value) ||\n      isClientVideo(value) ||\n      isJsonRecord(value));\n  function assertClientMedia(value, name) {\n      if (!isClientMedia(value))\n          errorThrow(value, 'ClientMedia', name);\n  }\n\n  const isRawMedia = (value) => {\n      return isClientImage(value) || isClientVideo(value) || isClientAudio(value);\n  };\n\n  const AudibleSampleRate = 44100;\n  const AudibleChannels = 2;\n  class AudibleContext {\n      addSource(id, source) {\n          // console.log(\"addSource\", id)\n          this.sourcesById.set(id, source);\n      }\n      _context;\n      get context() {\n          if (!this._context) {\n              const Klass = AudioContext || window.webkitAudioContext;\n              assertMethod(Klass);\n              this._context = new Klass();\n          }\n          return this._context;\n      }\n      createBuffer(seconds) {\n          const length = AudibleSampleRate * seconds;\n          return this.context.createBuffer(AudibleChannels, length, AudibleSampleRate);\n      }\n      createBufferSource(buffer) {\n          // console.trace(this.constructor.name, \"createBufferSource\")\n          const sourceNode = this.context.createBufferSource();\n          if (buffer)\n              sourceNode.buffer = buffer;\n          return sourceNode;\n      }\n      createGain() { return this.context.createGain(); }\n      get currentTime() { return this.context.currentTime; }\n      decode(buffer) {\n          return new Promise((resolve, reject) => (this.context.decodeAudioData(buffer, audioData => resolve(audioData), error => reject(error))));\n      }\n      deleteSource(id) {\n          // console.log(\"deleteSource\", id)\n          const source = this.getSource(id);\n          if (!source)\n              return;\n          this.sourcesById.delete(id);\n          const { gainSource, gainNode } = source;\n          gainNode.disconnect(this.destination);\n          gainSource.disconnect(gainNode);\n          gainSource.stop();\n      }\n      get destination() { return this.context.destination; }\n      getSource(id) {\n          return this.sourcesById.get(id);\n      }\n      hasSource(id) { return this.sourcesById.has(id); }\n      sourcesById = new Map();\n      startAt(id, source, start, duration, offset, loops = false) {\n          const gainNode = this.createGain();\n          source.loop = loops;\n          source.connect(gainNode);\n          gainNode.connect(this.destination);\n          source.start(this.currentTime + start, offset, duration);\n          this.addSource(id, { gainSource: source, gainNode });\n      }\n  }\n  const AudibleContextInstance = new AudibleContext();\n\n  const createContextAudible = () => { return new AudibleContext(); };\n  const ContextFactory = {\n      audible: createContextAudible,\n  };\n\n  exports.Frame = void 0;\n  (function (Frame) {\n      Frame[Frame[\"First\"] = 0] = \"First\";\n      Frame[Frame[\"Last\"] = -1] = \"Last\";\n  })(exports.Frame || (exports.Frame = {}));\n  const isMashAndMediaObject = (value) => {\n      return isObject(value) && \"media\" in value && isArray(value.media);\n  };\n  const isMashMedia = (value) => {\n      return isObject(value) && \"composition\" in value;\n  };\n  function assertMashMedia(value, name) {\n      if (!isMashMedia(value))\n          errorThrow(value, \"MashMedia\", name);\n  }\n\n  class Action {\n      constructor(object) {\n          const { redoSelection, type, undoSelection } = object;\n          this.redoSelection = redoSelection;\n          this.type = type;\n          this.undoSelection = undoSelection;\n      }\n      done = false;\n      get mash() {\n          const { mash } = this.redoSelection;\n          if (isMashMedia(mash))\n              return mash;\n          const { mash: undoMash } = this.undoSelection;\n          assertMashMedia(undoMash);\n          return undoMash;\n      }\n      redo() {\n          this.redoAction();\n          this.done = true;\n      }\n      redoAction() {\n          return errorThrow(ErrorName.Unimplemented);\n      }\n      redoSelection;\n      get selection() {\n          if (this.done)\n              return this.redoSelection;\n          return this.undoSelection;\n      }\n      type;\n      undo() {\n          this.undoAction();\n          this.done = false;\n      }\n      undoAction() {\n          return errorThrow(ErrorName.Unimplemented);\n      }\n      undoSelection;\n  }\n  const isAction = (value) => value instanceof Action;\n  function assertAction(value) {\n      if (!isAction(value))\n          throw new Error('expected Action');\n  }\n  const isActionInit = (value) => isAction(value.action);\n  const isActionEvent = (value) => {\n      return value instanceof CustomEvent && value.detail;\n  };\n\n  /**\n   * @category Action\n   */\n  class AddTrackAction extends Action {\n      constructor(object) {\n          super(object);\n          const { createTracks } = object;\n          this.createTracks = createTracks;\n      }\n      createTracks;\n      redoAction() {\n          for (let i = 0; i < this.createTracks; i += 1) {\n              this.mash.addTrack();\n          }\n      }\n      undoAction() {\n          for (let i = 0; i < this.createTracks; i += 1) {\n              this.mash.removeTrack();\n          }\n      }\n  }\n\n  /**\n   * @category Action\n   */\n  class AddClipToTrackAction extends AddTrackAction {\n      constructor(object) {\n          super(object);\n          const { clips, insertIndex, trackIndex, redoFrame, undoFrame } = object;\n          this.clips = clips;\n          this.insertIndex = insertIndex;\n          this.trackIndex = trackIndex;\n          this.redoFrame = redoFrame;\n          this.undoFrame = undoFrame;\n      }\n      clips;\n      insertIndex;\n      trackIndex;\n      get track() { return this.mash.tracks[this.trackIndex]; }\n      redoAction() {\n          super.redoAction();\n          const { mash, redoFrame, trackIndex, insertIndex, clips } = this;\n          mash.addClipToTrack(clips, trackIndex, insertIndex, redoFrame);\n      }\n      redoFrame;\n      undoAction() {\n          const { mash, clips } = this;\n          mash.removeClipFromTrack(clips);\n          super.undoAction();\n      }\n      undoFrame;\n  }\n\n  const isChangeActionObject = (value) => {\n      return isObject(value) && \"target\" in value && \"property\" in value;\n  };\n  /**\n   * @category Action\n   */\n  class ChangeAction extends Action {\n      constructor(object) {\n          super(object);\n          const { property, redoValue, target, undoValue } = object;\n          this.property = property;\n          this.redoValue = redoValue;\n          this.target = target;\n          this.undoValue = undoValue;\n      }\n      property;\n      redoValue;\n      target;\n      undoValue;\n      get redoValueNumeric() { return Number(this.redoValue); }\n      get undoValueNumeric() { return Number(this.undoValue); }\n      redoAction() {\n          this.target.setValue(this.redoValue, this.property);\n      }\n      undoAction() {\n          this.target.setValue(this.undoValue, this.property);\n      }\n      updateAction(object) {\n          // console.log(this.constructor.name, \"updateAction\", object)\n          const { redoValue } = object;\n          this.redoValue = redoValue;\n          this.redo();\n      }\n  }\n  const isChangeAction = (value) => (value instanceof ChangeAction);\n  function assertChangeAction(value) {\n      if (!isChangeAction(value))\n          throw new Error('expected ChangeAction');\n  }\n\n  /**\n   * @category Action\n   */\n  class ChangeFramesAction extends ChangeAction {\n      constructor(object) {\n          super(object);\n      }\n      redoAction() {\n          this.mash.changeTiming(this.target, this.property, this.redoValueNumeric);\n      }\n      undoAction() {\n          this.mash.changeTiming(this.target, this.property, this.undoValueNumeric);\n      }\n  }\n\n  /**\n   * @category Action\n   */\n  class MoveClipAction extends AddTrackAction {\n      constructor(object) {\n          super(object);\n          const { clip, insertIndex, redoFrame, trackIndex, undoFrame, undoInsertIndex, undoTrackIndex } = object;\n          this.clip = clip;\n          this.insertIndex = insertIndex;\n          this.redoFrame = redoFrame;\n          this.trackIndex = trackIndex;\n          this.undoFrame = undoFrame;\n          this.undoInsertIndex = undoInsertIndex;\n          this.undoTrackIndex = undoTrackIndex;\n      }\n      clip;\n      insertIndex;\n      trackIndex;\n      undoTrackIndex;\n      undoInsertIndex;\n      undoFrame;\n      redoFrame;\n      addClip(trackIndex, insertIndex, frame) {\n          this.mash.addClipToTrack(this.clip, trackIndex, insertIndex, frame);\n      }\n      redoAction() {\n          super.redoAction();\n          this.addClip(this.trackIndex, this.insertIndex, this.redoFrame);\n      }\n      undoAction() {\n          this.addClip(this.undoTrackIndex, this.undoInsertIndex, this.undoFrame);\n          super.undoAction();\n      }\n  }\n\n  /**\n   * @category Action\n   */\n  class RemoveClipAction extends Action {\n      constructor(object) {\n          super(object);\n          const { clip, index, track } = object;\n          this.clip = clip;\n          this.index = index;\n          this.track = track;\n      }\n      track;\n      clip;\n      index;\n      get trackIndex() { return this.track.index; }\n      redoAction() {\n          this.mash.removeClipFromTrack(this.clip);\n      }\n      undoAction() {\n          this.mash.addClipToTrack(this.clip, this.trackIndex, this.index);\n      }\n  }\n\n  /**\n   * @category Action\n   */\n  class ChangeMultipleAction extends ChangeAction {\n      constructor(object) {\n          const { redoValues, undoValues } = object;\n          super(object);\n          this.undoValues = undoValues;\n          this.redoValues = redoValues;\n      }\n      redoAction() {\n          const { target, redoValues } = this;\n          Object.entries(redoValues).forEach(([property, value]) => {\n              target.setValue(value, property);\n          });\n      }\n      redoValues;\n      undoAction() {\n          const { target, undoValues } = this;\n          Object.entries(undoValues).forEach(([property, value]) => {\n              target.setValue(value, property);\n          });\n      }\n      updateAction(object) {\n          const { redoValues } = object;\n          this.redoValues = redoValues;\n          this.redo();\n      }\n      undoValues;\n  }\n\n  /**\n   * @category Action\n   */\n  class MoveAction extends Action {\n      constructor(object) {\n          super(object);\n          const { objects, redoObjects, undoObjects } = object;\n          this.objects = objects;\n          this.redoObjects = redoObjects;\n          this.undoObjects = undoObjects;\n      }\n      objects;\n      redoObjects;\n      redoAction() {\n          this.objects.splice(0, this.objects.length, ...this.redoObjects);\n      }\n      undoAction() {\n          this.objects.splice(0, this.objects.length, ...this.undoObjects);\n      }\n      undoObjects;\n  }\n  const isMoveAction = (value) => (value instanceof MoveAction);\n  function assertMoveAction(value, name) {\n      if (!isMoveAction(value))\n          errorThrow(value, 'MoveAction', name);\n  }\n\n  const actionInstance = (object) => {\n      const { type } = object;\n      switch (type) {\n          case exports.ActionType.AddClipToTrack: return new AddClipToTrackAction(object);\n          case exports.ActionType.AddTrack: return new AddTrackAction(object);\n          case exports.ActionType.Change: return new ChangeAction(object);\n          case exports.ActionType.ChangeFrame: return new ChangeFramesAction(object);\n          case exports.ActionType.ChangeMultiple: return new ChangeMultipleAction(object);\n          case exports.ActionType.MoveClip: return new MoveClipAction(object);\n          case exports.ActionType.Move: return new MoveAction(object);\n          case exports.ActionType.RemoveClip: return new RemoveClipAction(object);\n      }\n  };\n  const ActionFactory = {\n      createFromObject: actionInstance\n  };\n\n  class Actions {\n      editor;\n      constructor(editor) {\n          this.editor = editor;\n      }\n      add(action) {\n          const remove = this.instances.length - (this.index + 1);\n          if (isPositive(remove))\n              this.instances.splice(this.index + 1, remove);\n          this.instances.push(action);\n      }\n      get canRedo() { return this.index < this.instances.length - 1; }\n      get canSave() { return this.canUndo; }\n      get canUndo() { return this.index > -1; }\n      create(object) {\n          const { editor } = this;\n          const { undoSelection, redoSelection, type = exports.ActionType.Change, ...rest } = object;\n          const clone = {\n              ...rest,\n              type,\n              undoSelection: undoSelection || { ...editor.selection.object },\n              redoSelection: redoSelection || { ...editor.selection.object },\n          };\n          if (isChangeActionObject(object) && this.currentActionLast) {\n              const { currentAction } = this;\n              if (isChangeAction(currentAction)) {\n                  const { target, property } = object;\n                  if (currentAction.target === target && currentAction.property === property) {\n                      currentAction.updateAction(object);\n                      editor.handleAction(currentAction);\n                      return;\n                  }\n              }\n          }\n          const action = actionInstance(clone);\n          this.add(action);\n          editor.handleAction(this.redo());\n      }\n      get currentAction() { return this.instances[this.index]; }\n      get currentActionLast() { return this.canUndo && !this.canRedo; }\n      destroy() {\n          this.index = -1;\n          this.instances.splice(0, this.instances.length);\n      }\n      index = -1;\n      instances = [];\n      redo() {\n          this.index += 1;\n          const action = this.currentAction;\n          assertAction(action);\n          action.redo();\n          return action;\n      }\n      reusableChangeAction(target, property) {\n          if (!this.currentActionLast)\n              return;\n          const action = this.currentAction;\n          if (isChangeAction(action) && action.target === target && action.property === property) {\n              return action;\n          }\n      }\n      save() {\n          this.instances.splice(0, this.index + 1);\n          this.index = -1;\n      }\n      get selection() { return this.editor.selection; }\n      undo() {\n          const action = this.currentAction;\n          assertAction(action);\n          this.index -= 1;\n          action.undo();\n          return action;\n      }\n  }\n\n  const isSize = (value) => {\n      return isObject(value) &&\n          \"width\" in value && \"height\" in value &&\n          isNumber(value.width) && isNumber(value.height);\n  };\n  function assertSize(value, name) {\n      if (!isSize(value))\n          errorThrow(value, 'Size', name);\n  }\n  const sizesEqual = (size, sizeEnd) => {\n      if (!isSize(sizeEnd))\n          return false;\n      return size.width === sizeEnd.width && size.height === sizeEnd.height;\n  };\n  const SizeZero = { width: 0, height: 0 };\n  const sizedEven = (number) => {\n      return 2 * Math.max(1, Math.ceil(number / 2));\n  };\n  const sizeEven = (size) => {\n      const { width, height } = size;\n      return {\n          width: sizedEven(width), height: sizedEven(height),\n      };\n  };\n  const sizeRound = (point) => {\n      const { width, height } = point;\n      return { width: Math.round(width), height: Math.round(height) };\n  };\n  const sizeCeil = (size) => {\n      const { width, height } = size;\n      return {\n          width: Math.max(2, Math.ceil(width)),\n          height: Math.max(2, Math.ceil(height)),\n      };\n  };\n  const sizeFloor = (size) => {\n      const { width, height } = size;\n      return {\n          width: Math.max(2, Math.floor(width)),\n          height: Math.max(2, Math.floor(height)),\n      };\n  };\n  const sizeScale = (size, horizontally, vertically) => {\n      const { width, height } = size;\n      return { width: width * horizontally, height: height * vertically };\n  };\n  const sizeCover = (inSize, outSize, contain = false) => {\n      assertSizeAboveZero(inSize, 'sizeCover.inSize');\n      assertSize(outSize, 'sizeCover.outSize');\n      const { width: inWidth, height: inHeight } = inSize;\n      const { width, height } = outSize;\n      const scaleWidth = width / inWidth;\n      const scaleHeight = height / inHeight;\n      const useWidth = contain ? scaleWidth < scaleHeight : scaleWidth > scaleHeight;\n      if (useWidth) {\n          return sizeCeil({ ...outSize, height: inHeight * scaleWidth });\n      }\n      return sizeCeil({ ...outSize, width: inWidth * scaleHeight });\n  };\n  const sizeAboveZero = (size) => {\n      if (!isSize(size))\n          return false;\n      const { width, height } = size;\n      return isAboveZero(width) && isAboveZero(height);\n  };\n  function assertSizeAboveZero(size, name) {\n      if (!sizeAboveZero(size))\n          errorThrow(size, 'SizeAboveZero', name);\n  }\n  const SizeOutput = { width: 1920, height: 1080 };\n  const SizePreview = sizeScale(SizeOutput, 0.25, 0.25);\n  const SizeIcon = sizeScale(SizePreview, 0.5, 0.5);\n  const sizeCopy = (size) => {\n      // assertSize(size)\n      const { width = 0, height = 0 } = size;\n      return { width, height };\n  };\n  const sizeLock = (lockSize, lock) => {\n      const copy = sizeCopy(lockSize);\n      switch (lock) {\n          case exports.Orientation.H:\n              copy.width = copy.height;\n              break;\n          case exports.Orientation.V:\n              copy.height = copy.width;\n              break;\n      }\n      return copy;\n  };\n  const sizeString = (size) => {\n      const { width, height } = size;\n      return `width=${width};height=${height}`;\n  };\n  const sizeLockNegative = (size, lock) => {\n      assertSizeAboveZero(size, 'sizeLockNegative');\n      const locked = sizeCopy(size);\n      if (lock) {\n          if (lock === exports.Orientation.V)\n              locked.height = -1;\n          else\n              locked.width = -1;\n      }\n      return locked;\n  };\n  const sizeFromElement = (element) => {\n      const size = {\n          width: Number(element.getAttribute('width')),\n          height: Number(element.getAttribute('height'))\n      };\n      assertSizeAboveZero(size, 'sizeFromElement');\n      return size;\n  };\n\n  class Emitter extends EventTarget {\n      dispatch(type, detail) {\n          // console.log(this.constructor.name, \"dispatch\", type, detail)\n          this.dispatchEvent(this.event(type, detail));\n      }\n      emit(type, detail) {\n          if (!this.trapped.has(type)) {\n              this.dispatch(type, detail);\n              return;\n          }\n          const listener = this.trapped.get(type);\n          // console.log(this.constructor.name, \"emit trapped\", type, !!listener)\n          if (listener)\n              listener(this.event(type, detail));\n      }\n      enqueue(type, detail = {}) {\n      }\n      event(type, detail) {\n          const init = detail ? { detail } : undefined;\n          return new CustomEvent(type, init);\n      }\n      queue = new Map();\n      trap(type, listener) {\n          if (this.trapped.has(type))\n              return;\n          this.trapped.set(type, listener || null);\n      }\n      trapped = new Map();\n  }\n\n  const roundMethod = (rounding = '') => {\n      switch (rounding) {\n          case 'ceil': return Math.ceil;\n          case 'floor': return Math.floor;\n          default: return Math.round;\n      }\n  };\n  const roundWithMethod = (number, method = '') => {\n      const func = roundMethod(method);\n      return func(number);\n  };\n\n  const timeGreatestCommonDenominator = (fps1, fps2) => {\n      let a = fps1;\n      let b = fps2;\n      let t = 0;\n      while (b !== 0) {\n          t = b;\n          b = a % b;\n          a = t;\n      }\n      return a;\n  };\n  const timeLowestCommonMultiplier = (a, b) => ((a * b) / timeGreatestCommonDenominator(a, b));\n  const timeEqualizeRates = (time1, time2, rounding = '') => {\n      if (time1.fps === time2.fps)\n          return [time1, time2];\n      const gcf = timeLowestCommonMultiplier(time1.fps, time2.fps);\n      return [\n          time1.scale(gcf, rounding),\n          time2.scale(gcf, rounding)\n      ];\n  };\n  class TimeClass {\n      constructor(frame = 0, fps = 1) {\n          assertPositive(frame);\n          assertInteger(frame);\n          assertAboveZero(fps);\n          this.frame = frame;\n          this.fps = fps;\n      }\n      add(time) {\n          const [time1, time2] = timeEqualizeRates(this, time);\n          return new TimeClass(time1.frame + time2.frame, time1.fps);\n      }\n      addFrame(frames) {\n          const time = this.copy;\n          time.frame += frames;\n          return time;\n      }\n      closest(timeRange) {\n          const frame = timeRange.frame + Math.round(timeRange.frames / 2);\n          const halfTime = new TimeClass(frame, timeRange.fps);\n          const [midTime, editorTime] = timeEqualizeRates(halfTime, this);\n          const shouldBeOnLast = midTime.frame < editorTime.frame;\n          return shouldBeOnLast ? timeRange.lastTime : timeRange.startTime;\n      }\n      get copy() { return new TimeClass(this.frame, this.fps); }\n      get description() { return `${this.frame}@${this.fps}`; }\n      divide(number, rounding = '') {\n          assertAboveZero(number);\n          if (number === 1.0)\n              return this;\n          return this.withFrame(roundWithMethod(this.frame / number, rounding));\n      }\n      equalsTime(time) {\n          const [time1, time2] = timeEqualizeRates(this, time);\n          return time1.frame === time2.frame;\n      }\n      fps;\n      frame;\n      durationFrames(duration, fps = 0) {\n          const rate = fps || this.fps;\n          const frames = [];\n          const framesMax = Math.floor(rate * duration) - 2;\n          const startFrame = Math.min(framesMax, this.scale(rate, \"floor\").frame);\n          if (this.isRange) {\n              const scaledFrame = this.timeRange.endTime.scale(rate, \"ceil\").frame;\n              const endFrame = Math.min(framesMax + 1, scaledFrame);\n              for (let frame = startFrame; frame < endFrame; frame += 1) {\n                  frames.push(frame);\n              }\n          }\n          else\n              frames.push(startFrame);\n          return frames;\n      }\n      isRange = false;\n      get lengthSeconds() { return 0; }\n      min(time) {\n          const [time1, time2] = timeEqualizeRates(this, time);\n          return new TimeClass(Math.min(time1.frame, time2.frame), time1.fps);\n      }\n      scale(fps, rounding = '') {\n          if (this.fps === fps)\n              return this;\n          const frame = (Number(this.frame) / Number(this.fps)) * Number(fps);\n          return new TimeClass(roundWithMethod(frame, rounding), fps);\n      }\n      scaleToFps(fps) { return this.scaleToTime(new TimeClass(0, fps)); }\n      scaleToTime(time) {\n          return timeEqualizeRates(this, time)[0];\n      }\n      get seconds() { return Number(this.frame) / Number(this.fps); }\n      get startTime() { return this; }\n      subtract(time) {\n          const [time1, time2] = timeEqualizeRates(this, time);\n          let subtracted = time2.frame;\n          if (subtracted > time1.frame) {\n              subtracted -= subtracted - time1.frame;\n          }\n          return new TimeClass(time1.frame - subtracted, time1.fps);\n      }\n      subtractFrames(frames) {\n          const time = this.copy;\n          time.frame -= frames;\n          return time;\n      }\n      get timeRange() { return errorThrow(ErrorName.Internal); }\n      toString() { return `[${this.description}]`; }\n      withFrame(frame) {\n          const time = this.copy;\n          time.frame = frame;\n          return time;\n      }\n  }\n\n  class TimeRangeClass extends TimeClass {\n      frames;\n      constructor(frame = 0, fps = 1, frames = 1) {\n          super(frame, fps);\n          assertPositive(frames);\n          assertInteger(frames);\n          this.frames = frames;\n      }\n      addFrames(frames) {\n          const time = this.copy;\n          time.frames += frames;\n          return time;\n      }\n      get copy() {\n          return new TimeRangeClass(this.frame, this.fps, this.frames);\n      }\n      get description() { return `${this.frame}-${this.frames}@${this.fps}`; }\n      get end() { return this.frame + this.frames; }\n      get endTime() { return new TimeClass(this.end, this.fps); }\n      equalsTimeRange(timeRange) {\n          const [range1, range2] = timeEqualizeRates(this, timeRange);\n          return range1.frame === range2.frame && range1.frames === range2.frames;\n      }\n      get frameTimes() {\n          const { frames, frame, fps } = this;\n          return Array.from({ length: frames }, (_, i) => new TimeClass(frame, fps));\n      }\n      includes(frame) {\n          return frame >= this.frame && frame <= this.end;\n      }\n      includesTime(time) {\n          const [thisTime, scaledTime] = timeEqualizeRates(this, time);\n          const thisRange = thisTime;\n          const { frame, end } = thisRange;\n          const other = scaledTime.frame;\n          return other >= frame && other < end;\n      }\n      intersection(time) {\n          const range = time.isRange ? time.timeRange : new TimeRangeClass(time.frame, time.fps);\n          const [range1, range2] = timeEqualizeRates(range, this);\n          const { frame: frame1, end: end1, fps } = range1;\n          const { frame: frame2, end: end2 } = range2;\n          const frameMax = Math.max(frame1, frame2);\n          const endMin = Math.min(end1, end2);\n          return new TimeRangeClass(frameMax, fps, endMin - frameMax);\n      }\n      intersects(time) {\n          if (!time.isRange)\n              return this.includesTime(time);\n          const [range1, range2] = timeEqualizeRates(time, this);\n          if (range1.frame >= range2.end)\n              return false;\n          return range1.end > range2.frame;\n      }\n      isRange = true;\n      get last() { return this.frame + this.frames - 1; }\n      get lastTime() { return new TimeClass(this.last, this.fps); }\n      get lengthSeconds() { return Number(this.frames) / Number(this.fps); }\n      get position() { return Number(this.frame) / Number(this.frames); }\n      positionTime(position, rounding = '') {\n          const frame = roundWithMethod((this.frames - this.frame) * position, rounding);\n          return new TimeClass(this.frame + frame, this.fps);\n      }\n      get startTime() { return new TimeClass(this.frame, this.fps); }\n      scale(fps = 1, rounding = \"\") {\n          if (this.fps === fps)\n              return this.copy;\n          const value = Number(this.frames) / (Number(this.fps) / Number(fps));\n          const time = super.scale(fps, rounding);\n          const frames = Math.max(1, roundWithMethod(value, rounding));\n          return new TimeRangeClass(time.frame, time.fps, frames);\n      }\n      get timeRange() { return this; }\n      get times() {\n          const array = [this.startTime];\n          if (this.frames > 1)\n              array.push(this.endTime);\n          return array;\n      }\n      minEndTime(endTime) {\n          const [range, time] = timeEqualizeRates(this, endTime);\n          range.frames = Math.min(range.frames, time.frame);\n          return range;\n      }\n      withFrame(frame) {\n          const range = this.copy;\n          range.frame = frame;\n          return range;\n      }\n      withFrames(frames) {\n          const range = this.copy;\n          range.frames = frames;\n          return range;\n      }\n  }\n\n  const timeRangeFromArgs = (frame = 0, fps = 1, frames = 1) => {\n      return new TimeRangeClass(frame, fps, frames);\n  };\n  const timeRangeFromSeconds = (start = 0, duration = 1) => {\n      return timeRangeFromArgs(start, 1, duration);\n  };\n  const timeRangeFromTime = (time, frames = 1) => {\n      return timeRangeFromArgs(time.frame, time.fps, frames);\n  };\n  const timeRangeFromTimes = (startTime, endTime) => {\n      if (!endTime)\n          return timeRangeFromTime(startTime);\n      const [time1, time2] = timeEqualizeRates(startTime, endTime);\n      if (time2.frame <= time1.frame)\n          return errorThrow(ErrorName.Frame);\n      const frames = time2.frame - time1.frame;\n      return timeRangeFromArgs(time1.frame, time1.fps, frames);\n  };\n  const timeFromArgs = (frame = 0, fps = 1) => {\n      return new TimeClass(frame, fps);\n  };\n  const timeFromSeconds = (seconds = 0, fps = 1, rounding = '') => {\n      assertPositive(seconds);\n      assertInteger(fps);\n      assertAboveZero(fps);\n      const rounded = roundWithMethod(seconds * fps, rounding);\n      return timeFromArgs(rounded, fps);\n  };\n\n  const isTweenable = (value) => {\n      return isMediaInstance(value) && isMedia(value.definition);\n  };\n  function assertTweenable(value) {\n      if (!isTweenable(value))\n          throw new Error('expected Tweenable');\n  }\n  const isTweenableDefinition = (value) => {\n      return isMedia(value);\n  };\n  function assertTweenableDefinition(value) {\n      if (!isTweenableDefinition(value))\n          throw new Error('expected TweenableDefinition');\n  }\n\n  const isEffect = (value) => {\n      return isTweenable(value) && value.type === EffectType;\n  };\n  function assertEffect(value) {\n      if (!isEffect(value))\n          throw new Error(\"expected Effect\");\n  }\n  const isEffectMedia = (value) => {\n      return isMedia(value) && value.type === EffectType;\n  };\n\n  const isTrack = (value) => {\n      return isObject(value) && \"frameForClipNearFrame\" in value;\n  };\n  function assertTrack(value, name) {\n      if (!isTrack(value))\n          errorThrow(value, 'Track', name);\n  }\n\n  const DefaultEditorArgs = {\n      buffer: 10,\n      fps: 30,\n      loop: true,\n      volume: 0.75,\n      precision: 3,\n      autoplay: false,\n  };\n  const DefaultMash = {\n      label: \"Mash\",\n      quantize: 10,\n      color: colorBlack,\n      gain: 0.75,\n      buffer: 10,\n  };\n  const DefaultCast = {\n      label: \"Cast\",\n      quantize: 10,\n      color: colorBlack,\n      gain: 0.75,\n      buffer: 10,\n  };\n  const Default = {\n      duration: 3,\n      label: \"Unlabeled\",\n      editor: DefaultEditorArgs,\n      video: DefaultMash,\n      effect: { label: 'Effect' },\n      audio: { label: 'Audio' },\n      image: { label: 'Image' },\n      audiostream: { label: 'Audio Stream' },\n      sequence: { label: 'Sequence' },\n      videostream: DefaultCast,\n      mash: DefaultMash,\n      font: { label: 'Text', string: 'Example Text' },\n      definition: {\n          image: { duration: 2 },\n          textcontainer: { duration: 3 },\n          shape: { duration: 3 },\n          visible: { duration: 3 },\n          video: { fps: 0 },\n          videosequence: { pattern: '%.jpg', fps: 10, increment: 1, begin: 1, padding: 0 },\n          videostream: { duration: 10 },\n      },\n  };\n\n  const isClipObject = (value) => {\n      return isObject(value);\n  };\n  const isClip = (value) => {\n      return isObject(value) && \"contentId\" in value;\n  };\n  function assertClip(value, name) {\n      if (!isClip(value))\n          errorThrow(value, \"Clip\", name);\n  }\n  // export interface ClipDefinition extends Definition {\n  //   instanceFromObject(object?: ClipObject): Clip\n  //   audible: boolean\n  //   // duration: number\n  //   streamable : boolean\n  //   visible: boolean\n  // }\n\n  class EditorSelectionClass {\n      get [exports.SelectType.None]() { return undefined; }\n      get [exports.SelectType.Clip]() {\n          const { clip } = this._object;\n          if (isClip(clip))\n              return clip;\n      }\n      get [exports.SelectType.Mash]() {\n          const { mash } = this._object;\n          if (isMashMedia(mash))\n              return mash;\n      }\n      get [exports.SelectType.Track]() {\n          const { clip, track } = this._object;\n          if (isTrack(track))\n              return track;\n          if (isClip(clip))\n              return clip.track;\n      }\n      get [exports.SelectType.Container]() {\n          const { clip } = this._object;\n          if (isClip(clip))\n              return clip.container;\n      }\n      get [exports.SelectType.Content]() {\n          const { clip } = this._object;\n          if (isClip(clip))\n              return clip.content;\n      }\n      _editor;\n      get editor() { return this._editor; }\n      set editor(value) { this._editor = value; }\n      _focus = exports.SelectType.Mash;\n      get focus() { return this._focus; }\n      set focus(value) { this._focus = value; }\n      get(selectType) {\n          return this[selectType];\n      }\n      unset(selectType) {\n          // console.log(this.constructor.name, \"unset\", selectType)\n          const selectable = this.object[selectType];\n          if (!selectable)\n              return;\n          const selectables = selectable.selectables();\n          assertTrue(selectables[0] === selectable);\n          selectables.shift();\n          this.object = this.selectionFromSelectables(selectables);\n      }\n      set(selectable) {\n          const { selectType } = selectable;\n          this.object = { [selectType]: selectable };\n      }\n      _object = {};\n      get object() {\n          return Object.fromEntries(SelectTypes.map(selectType => ([selectType, this.get(selectType)])));\n      }\n      set object(selection) {\n          const populated = this.selectionPopulated(selection);\n          const { object: originalObject } = this;\n          this.clear();\n          Object.assign(this._object, populated);\n          const { object: newObject } = this;\n          // if (SelectTypes.every(type => originalObject[type] === newObject[type])) return\n          const { mash: oldMash, clip: oldClip } = originalObject;\n          const { mash, clip } = newObject;\n          if (clip !== oldClip) {\n              if (isClip(clip) && isPositive(clip.trackNumber))\n                  clip.track.mash.clearPreview();\n              if (isClip(oldClip) && isPositive(oldClip.trackNumber))\n                  oldClip.track.mash.clearPreview();\n          }\n          Object.assign(this._object, populated);\n          this.editor.eventTarget.emit(exports.EventType.Selection);\n          if (mash !== oldMash) {\n              this.editor.eventTarget.emit(exports.EventType.Loaded);\n              this.editor.eventTarget.emit(exports.EventType.Track);\n              this.editor.eventTarget.emit(exports.EventType.Duration);\n          }\n      }\n      clear() {\n          SelectTypes.forEach(selectType => { delete this._object[selectType]; });\n      }\n      selectionFromSelectables(selectables) {\n          return Object.fromEntries(selectables.map(selectable => ([selectable.selectType, selectable])));\n      }\n      selectionPopulated(selection) {\n          const { mash: mashOld, object } = this;\n          const { clip, track, mash } = selection;\n          const target = clip || track || mash || mashOld;\n          assertTrue(target, 'target');\n          return this.selectionFromSelectables(target.selectables());\n      }\n      get selectTypes() {\n          const selectTypes = [];\n          const { mash, object } = this;\n          const { clip, track } = object;\n          if (!mash)\n              return selectTypes;\n          selectTypes.push(exports.SelectType.Mash);\n          if (!track)\n              return selectTypes;\n          selectTypes.push(exports.SelectType.Track);\n          if (!isClip(clip))\n              return selectTypes;\n          selectTypes.push(exports.SelectType.Clip);\n          selectTypes.push(exports.SelectType.Content);\n          if (isPopulatedString(clip.containerId)) {\n              selectTypes.push(exports.SelectType.Container);\n          }\n          return selectTypes;\n      }\n      selectedItems(types = SelectTypes) {\n          const { selectTypes, object: selection } = this;\n          const filteredTypes = selectTypes.filter(type => types.includes(type));\n          const { clip } = selection;\n          // console.log(this.constructor.name, \"selectedItems\", this.object)\n          return filteredTypes.flatMap(type => {\n              let target = selection[type];\n              if (isClipSelectType(type) && isClip(clip))\n                  target = clip[type];\n              assertTrue(target, type);\n              return target.selectedItems(this.editor.actions);\n          });\n      }\n  }\n\n  const editorSelectionInstance = () => {\n      return new EditorSelectionClass();\n  };\n\n  const sortByFrame = (a, b) => (a.frame - b.frame);\n  const sortByIndex = (a, b) => (a.index - b.index);\n  const sortByTrack = (a, b) => (a.trackNumber - b.trackNumber);\n  const sortByLabel = (a, b) => {\n      if (a.label < b.label)\n          return -1;\n      if (a.label > b.label)\n          return 1;\n      return 0;\n  };\n\n  exports.DataGroup = void 0;\n  (function (DataGroup) {\n      // Clicking = 'clicking',\n      DataGroup[\"Color\"] = \"color\";\n      // Controls = 'controls',\n      DataGroup[\"Effects\"] = \"effects\";\n      DataGroup[\"Opacity\"] = \"opacity\";\n      DataGroup[\"Point\"] = \"point\";\n      DataGroup[\"Size\"] = \"size\";\n      DataGroup[\"Timing\"] = \"timing\";\n  })(exports.DataGroup || (exports.DataGroup = {}));\n  const DataGroups = Object.values(exports.DataGroup);\n  const isDataGroup = (value) => {\n      return DataGroups.includes(value);\n  };\n  function assertDataGroup(value, name) {\n      if (!isDataGroup(value))\n          errorThrow(value, \"DataGroup\", name);\n  }\n  const isProperty = (value) => {\n      return isObject(value) && \"type\" in value && isDataType(value.type);\n  };\n  function assertProperty(value, name) {\n      if (!isProperty(value))\n          errorThrow(value, 'Property', name);\n  }\n  const propertyType = (type, value) => {\n      if (isUndefined(type)) {\n          if (isBoolean(value))\n              return exports.DataType.Boolean;\n          if (isNumber(value))\n              return exports.DataType.Number;\n          return exports.DataType.String;\n      }\n      assertDataType(type);\n      return type;\n  };\n  const propertyValue = (type, value) => {\n      if (isUndefined(value))\n          return propertyTypeDefault(type);\n      return value;\n  };\n  const propertyInstance = (object) => {\n      const { type, name, defaultValue, ...rest } = object;\n      const dataType = propertyType(type, defaultValue);\n      const dataValue = propertyValue(dataType, defaultValue);\n      const dataName = isPopulatedString(name) ? name : dataType;\n      const property = {\n          type: dataType, defaultValue: dataValue, name: dataName, ...rest\n      };\n      switch (type) {\n          case exports.DataType.Percent: {\n              if (isUndefined(property.max))\n                  property.max = 1.0;\n              if (isUndefined(property.min))\n                  property.min = 0.0;\n              if (isUndefined(property.step))\n                  property.step = 0.01;\n              break;\n          }\n      }\n      return property;\n  };\n\n  const IdTemporaryPrefix = 'temporary';\n  const IdCountsByPrefix = {};\n  const idGenerateString = () => {\n      const components = [IdTemporaryPrefix];\n      components.push(Date.now().toString(36));\n      components.push(Math.random().toString(36).slice(2));\n      return components.join('-');\n  };\n  const idGenerate = (prefix) => {\n      const components = [];\n      components.push(prefix);\n      IdCountsByPrefix[prefix] ||= 0;\n      components.push(String(IdCountsByPrefix[prefix]++));\n      return components.join('-');\n  };\n  const idTemporary = () => idGenerate(IdTemporaryPrefix);\n  const idIsTemporary = (id) => id.startsWith(IdTemporaryPrefix);\n\n  const DefaultContainerId = `${IdPrefix}container.image${IdSuffix}`;\n  const TextContainerId = `${IdPrefix}container.image.text`;\n  const isContainerObject = (value) => {\n      return isObject(value) && \"opacity\" in value;\n  };\n  function assertContainerObject(value) {\n      if (!isContainerObject(value))\n          errorThrow(value, 'ContainerObject');\n  }\n  const isContainerDefinition = (value) => {\n      return isTweenableDefinition(value) && isContainerType(value.type);\n  };\n  const isContainer = (value) => {\n      return isTweenable(value) && isContainerType(value.type);\n  };\n  function assertContainer(value) {\n      if (!isContainer(value))\n          throw new Error('expected Container');\n  }\n\n  const DefaultContentId = `${IdPrefix}content.image${IdSuffix}`;\n  const isContent = (value) => {\n      return isTweenable(value) && isContentType(value.type);\n  };\n  function assertContent(value, name) {\n      if (!isContent(value))\n          errorThrow(value, 'Content', name);\n  }\n  const isContentDefinition = (value) => {\n      return isTweenableDefinition(value) && isContentType(value.type);\n  };\n\n  function ContentDefinitionMixin(Base) {\n      return class extends Base {\n          loadPromise(args) {\n              return Promise.resolve();\n          }\n          type = ImageType;\n      };\n  }\n\n  const isPoint = (value) => {\n      return isObject(value) &&\n          \"x\" in value && \"y\" in value &&\n          isNumber(value.x) && isNumber(value.y);\n  };\n  function assertPoint(value, name) {\n      if (!isPoint(value))\n          errorThrow(value, 'Point', name);\n  }\n  const pointsEqual = (point, pointEnd) => {\n      if (!isPoint(pointEnd))\n          return false;\n      return point.x === pointEnd.x && point.y === pointEnd.y;\n  };\n  const PointZero = { x: 0, y: 0 };\n  const pointCopy = (point) => {\n      // assertPoint(point)\n      const { x, y } = point;\n      return { x, y };\n  };\n  const pointRound = (point) => {\n      const { x, y } = point;\n      return { x: Math.round(x), y: Math.round(y) };\n  };\n  const pointString = (point) => {\n      const { x, y } = point;\n      return `x=${x};y=${y}`;\n  };\n  const pointValueString = (point) => {\n      const { x, y } = point;\n      return `${x},${y}`;\n  };\n  const pointNegate = (point) => {\n      const { x, y } = point;\n      return { x: -x, y: -y };\n  };\n\n  const isRect = (value) => {\n      return isSize(value) && isPoint(value);\n  };\n  function assertRect(value, name) {\n      if (!isRect(value))\n          errorThrow(value, 'Rect', name);\n  }\n  const rectsEqual = (rect, rectEnd) => {\n      if (!isRect(rectEnd))\n          return false;\n      return pointsEqual(rect, rectEnd) && sizesEqual(rect, rectEnd);\n  };\n  const RectZero = { ...PointZero, ...SizeZero };\n  const rectFromSize = (size, point) => {\n      const definedPoint = point || PointZero;\n      const { width, height } = size;\n      return {\n          x: definedPoint.x, y: definedPoint.y, width, height,\n      };\n  };\n  const rectsFromSizes = (sizes, points) => {\n      const definedPoints = points || [PointZero, PointZero];\n      const [size, sizeEnd] = sizes;\n      const [point, pointEnd] = definedPoints;\n      return [rectFromSize(size, point), rectFromSize(sizeEnd, pointEnd)];\n  };\n  const rectCopy = (rect) => {\n      return { ...pointCopy(rect), ...sizeCopy(rect) };\n  };\n  const rectRound = (rect) => {\n      return { ...sizeRound(rect), ...pointRound(rect) };\n  };\n  const centerPoint = (size, inSize) => {\n      return {\n          x: Math.round((size.width - inSize.width) / 2),\n          y: Math.round((size.height - inSize.height) / 2)\n      };\n  };\n  const rectString = (dimensions) => {\n      const bits = [];\n      if (isSize(dimensions))\n          bits.push(sizeString(dimensions));\n      if (isPoint(dimensions))\n          bits.push(pointString(dimensions));\n      return bits.join(';');\n  };\n\n  const tweenPad = (outputDistance, scaledDistance, scale, offE = false, offW = false) => {\n      assertPositive(scale);\n      assertPositive(scaledDistance);\n      const baseDistance = outputDistance - scaledDistance;\n      const east = offE ? scaledDistance : 0;\n      const west = offW ? scaledDistance : 0;\n      const distance = baseDistance + east + west;\n      const scaled = distance * scale;\n      const x = scaled - east;\n      return x;\n  };\n  const tweenNumberStep = (number, numberEnd, frame, frames) => {\n      const unit = (numberEnd - number) / frames;\n      return number + (unit * frame);\n  };\n  const tweenColorStep = (value, valueEnd, frame, frames) => {\n      assertString(value);\n      assertString(valueEnd);\n      const offset = frame / frames;\n      assertTrue(colorValidHex(value), 'hex color');\n      if (value.length === 7 || value.length === 4) {\n          const result = colorRgbToHex(colorMixRbg(colorToRgb(value), colorToRgb(valueEnd), offset));\n          return result;\n      }\n      return colorRgbaToHex(colorMixRbga(colorToRgba(value), colorToRgba(valueEnd), offset));\n  };\n  const tweenRectStep = (rect, rectEnd, frame, frames) => {\n      return {\n          x: tweenNumberStep(rect.x, rectEnd.x, frame, frames),\n          y: tweenNumberStep(rect.y, rectEnd.y, frame, frames),\n          width: tweenNumberStep(rect.width, rectEnd.width, frame, frames),\n          height: tweenNumberStep(rect.height, rectEnd.height, frame, frames),\n      };\n  };\n  const tweenColors = (color, colorEnd, frames) => {\n      assertPopulatedString(color);\n      const colors = [color];\n      if (isPopulatedString(colorEnd) && frames > 1) {\n          for (let frame = 1; frame < frames; frame++) {\n              colors.push(tweenColorStep(color, colorEnd, frame, frames));\n          }\n      }\n      return colors;\n  };\n  const tweenRects = (rect, rectEnd, frames) => {\n      const rects = [rect];\n      if (rectEnd && frames > 1) {\n          for (let frame = 1; frame < frames; frame++) {\n              rects.push(tweenRectStep(rect, rectEnd, frame, frames));\n          }\n      }\n      return rects;\n  };\n  const tweenMaxSize = (size, sizeEnd) => {\n      const { width, height } = size;\n      if (!isSize(sizeEnd) || sizesEqual(size, sizeEnd))\n          return { width, height };\n      return {\n          width: Math.max(width, sizeEnd.width),\n          height: Math.max(height, sizeEnd.height),\n      };\n  };\n  const tweenMinSize = (size, sizeEnd) => {\n      const { width, height } = size;\n      if (!isSize(sizeEnd) || sizesEqual(size, sizeEnd))\n          return { width, height };\n      return {\n          width: Math.min(width, sizeEnd.width),\n          height: Math.min(height, sizeEnd.height),\n      };\n  };\n  const tweenOption = (optionStart, optionEnd, pos, round) => {\n      assertNumber(optionStart);\n      const start = round ? Math.round(optionStart) : optionStart;\n      if (!isNumber(optionEnd))\n          return start;\n      const end = round ? Math.round(optionEnd) : optionEnd;\n      if (start === end)\n          return start;\n      // const nCased = pos.includes('n') ? 'n' : 'N'\n      return `(${start}+(${end - start}*${pos}))`; // `(${start}+(${nCased} * 10))` //\n  };\n  const tweenableRects = (rect, rectEnd) => {\n      if (!isRect(rectEnd))\n          return false;\n      if (rect.x !== rectEnd.x)\n          return true;\n      if (rect.y !== rectEnd.y)\n          return true;\n      if (rect.width !== rectEnd.width)\n          return true;\n      if (rect.height !== rectEnd.height)\n          return true;\n      return false;\n  };\n  const tweenPosition = (videoRate, duration, frame = 'n') => (`(${frame}/${videoRate * duration})`);\n  const tweenNumberObject = (object) => {\n      if (!isObject(object))\n          return {};\n      const entries = Object.entries(object).filter(([_, value]) => isNumber(value));\n      return Object.fromEntries(entries);\n  };\n  const tweenOverRect = (rect, rectEnd) => {\n      return { ...rect, ...tweenNumberObject(rectEnd) };\n  };\n  const tweenOverPoint = (point, pointEnd) => {\n      return { ...point, ...tweenNumberObject(pointEnd) };\n  };\n  const tweenOverSize = (point, pointEnd) => {\n      if (!isDefined(pointEnd))\n          return point;\n      return { ...point, ...tweenNumberObject(pointEnd) };\n  };\n  const tweenScaleSizeToRect = (size, rect, offDirections = {}) => {\n      assertSize(size);\n      assertRect(rect);\n      const { width: outWidth, height: outHeight } = size;\n      const { x, y, width, height } = rect;\n      assertPositive(x);\n      assertPositive(y);\n      assertPositive(width);\n      assertPositive(height);\n      const scaledSize = sizeScale(size, width, height);\n      const evenSize = sizeCeil(scaledSize);\n      const result = {\n          ...evenSize,\n          x: Math.round(tweenPad(outWidth, evenSize.width, x, offDirections.E, offDirections.W)),\n          y: Math.round(tweenPad(outHeight, evenSize.height, y, offDirections.N, offDirections.S))\n      };\n      return result;\n  };\n  const tweenCoverSizes = (inSize, outSize, scales) => {\n      const outSizes = isArray(outSize) ? outSize : [outSize, outSize];\n      const [rect, rectEnd] = outSizes;\n      const unscaledSize = sizeCover(inSize, rect);\n      const unscaledSizeEnd = sizeCover(inSize, rectEnd);\n      const [scale, scaleEnd] = scales;\n      const { width, height } = scale;\n      const { width: widthEnd, height: heightEnd } = scaleEnd;\n      const scaledSize = sizeScale(unscaledSize, width, height);\n      const scaledSizeEnd = sizeScale(unscaledSizeEnd, widthEnd, heightEnd);\n      const coverSize = sizeCeil(scaledSize);\n      const coverSizeEnd = sizeCeil(scaledSizeEnd);\n      const coverRects = [coverSize, coverSizeEnd];\n      return coverRects;\n  };\n  const tweenCoverPoints = (scaledSizes, outSize, scales) => {\n      const outSizes = isArray(outSize) ? outSize : [outSize, outSize];\n      const [coverSize, coverSizeEnd] = scaledSizes;\n      const [rect, rectEnd] = outSizes;\n      const [scale, scaleEnd] = scales;\n      const { x, y } = scale;\n      const { x: xEnd, y: yEnd } = scaleEnd;\n      const point = {\n          x: x * (coverSize.width - rect.width),\n          y: y * (coverSize.height - rect.height),\n      };\n      const pointEnd = {\n          x: xEnd * (coverSizeEnd.width - rectEnd.width),\n          y: yEnd * (coverSizeEnd.height - rectEnd.height),\n      };\n      return [point, pointEnd];\n  };\n  const tweenRectLock = (rect, lock) => ({\n      ...rect, ...sizeLock(rect, lock)\n  });\n  const tweenRectsLock = (rects, lock) => {\n      return rects.map(rect => tweenRectLock(rect, lock));\n  };\n  const tweenScaleSizeRatioLock = (scale, outputSize, inRatio, lock) => {\n      if (!lock)\n          return scale;\n      const { width: outWidth, height: outHeight } = outputSize;\n      const forcedScale = { ...scale };\n      switch (lock) {\n          case exports.Orientation.H:\n              forcedScale.width = ((outHeight * forcedScale.height) * inRatio) / outWidth;\n              break;\n          case exports.Orientation.V:\n              forcedScale.height = ((outWidth * forcedScale.width) / inRatio) / outHeight;\n              break;\n      }\n      return forcedScale;\n  };\n  const tweeningPoints = (tweenable) => {\n      assertTweenable(tweenable);\n      const { clip } = tweenable;\n      const { track } = clip;\n      const { mash } = track;\n      const { quantize } = mash;\n      const timeRange = clip.timeRange(quantize);\n      const tweenPoints = tweenable.tweenPoints(timeRange, timeRange);\n      return !pointsEqual(...tweenPoints);\n  };\n  const tweenMinMax = (value, min, max) => {\n      return Math.min(max, Math.max(min, value));\n  };\n  const tweenInputTime = (timeRange, onEdge, nearStart, endDefined, endSelected) => {\n      if (!endDefined)\n          return;\n      if (!onEdge)\n          return nearStart ? timeRange.startTime : timeRange.lastTime;\n      if (endSelected) {\n          if (nearStart)\n              return timeRange.lastTime;\n      }\n      else if (!nearStart)\n          return timeRange.startTime;\n  };\n\n  const commandFilesInputIndex = (commandFiles, id, visible) => {\n      const inputCommandFiles = commandFiles.filter(commandFile => commandFile.input);\n      const inputIndex = inputCommandFiles.findIndex(commandFile => commandFile.inputId === id);\n      if (!isPositive(inputIndex))\n          console.log(\"commandFilesInputIndex\", id, inputCommandFiles);\n      assertPositive(inputIndex, 'commandFilesInputIndex');\n      return inputIndex;\n  };\n  const commandFilesInput = (commandFiles, id, visible) => {\n      const isVisible = !!visible;\n      const aOrV = isVisible ? 'v' : 'a';\n      return [commandFilesInputIndex(commandFiles, id), aOrV].join(':');\n  };\n\n  class MediaInstanceBase extends PropertiedClass {\n      constructor(...args) {\n          super(...args);\n          const [object] = args;\n          assertPopulatedObject(object);\n          const { definition } = object;\n          if (definition)\n              this.definition = definition;\n          // assertMedia(definition)\n          this.properties.push(...this.definition.properties);\n          this.propertiesInitialize(object);\n      }\n      definition;\n      get mediaId() { return this.definition.id; }\n      definitionIds() { return [this.mediaId]; }\n      _id;\n      get id() { return this._id ||= idGenerateString(); }\n      _label = '';\n      get label() { return this._label; }\n      set label(value) { this._label = value; }\n      serverPromise(args) {\n          return this.definition.serverPromise(args);\n      }\n      toJSON() {\n          const { mediaId, type, label } = this;\n          return { ...super.toJSON(), type, label, mediaId };\n      }\n      get type() { return this.definition.type; }\n      unload() { this.definition.unload(); }\n  }\n\n  class Parameter {\n      constructor({ name, value, dataType, values }) {\n          if (!name)\n              return errorThrow(ErrorName.Internal);\n          this.values = values;\n          this.name = name;\n          if (isUndefined(value)) {\n              if (this.values?.length)\n                  this.value = this.values[0];\n              else\n                  return errorThrow(ErrorName.Internal);\n          }\n          else\n              this.value = value;\n          if (dataType && DataTypes.map(String).includes(dataType)) {\n              this.dataType = dataType;\n          }\n          else {\n              let numeric = false;\n              if (Array.isArray(this.value)) {\n                  numeric = this.value.every(condition => isNumeric(condition.value));\n              }\n              else\n                  numeric = isNumeric(this.value);\n              if (numeric)\n                  this.dataType = exports.DataType.Number;\n          }\n      }\n      dataType = exports.DataType.String;\n      name = '';\n      toJSON() {\n          return { name: this.name, value: this.value };\n      }\n      value = '';\n      values;\n  }\n\n  const Filters = {};\n  const isFilterDefinition = (value) => {\n      return isObject(value) && \"instanceFromObject\" in value;\n  };\n  function assertFilterDefinition(value, name) {\n      if (!isFilterDefinition(value))\n          errorThrow(value, 'FilterDefinition', name);\n  }\n\n  class FilterClass extends PropertiedClass {\n      constructor(object) {\n          super();\n          const { definition, parameters } = object;\n          assertFilterDefinition(definition);\n          this.definition = definition;\n          if (parameters?.length)\n              this.parameters.push(...parameters.map(parameter => {\n                  const { name, dataType } = parameter;\n                  if (!dataType) {\n                      // try to determine type from same parameter in definition\n                      const existing = this.definition.parameters.find(p => p.name === name);\n                      if (existing)\n                          parameter.dataType = existing.dataType;\n                  }\n                  // console.log(this.constructor.name, \"constructor\", parameter)\n                  return new Parameter(parameter);\n              }));\n          this.properties.push(...this.definition.properties);\n          this.propertiesInitialize(object);\n      }\n      commandFiles(args) {\n          return this.definition.commandFiles({ ...args, filter: this });\n      }\n      commandFilters(args) {\n          return this.definition.commandFilters({ ...args, filter: this });\n      }\n      parameters = [];\n      _parametersDefined;\n      get parametersDefined() {\n          if (this._parametersDefined)\n              return this._parametersDefined;\n          const parameters = [...this.parameters];\n          parameters.push(...this.definition.parameters.filter(parameter => !parameters.find(p => p.name === parameter.name)));\n          return this._parametersDefined = parameters;\n      }\n      filterSvgs(args = {}) {\n          return this.definition.filterDefinitionSvgs({ ...args, filter: this });\n      }\n      filterSvgFilter() {\n          const valueObject = this.scalarObject();\n          return this.definition.filterDefinitionSvgFilter(valueObject);\n      }\n      _label = '';\n      get label() { return this._label; }\n      set label(value) { this._label = value; }\n      scalarObject(tweening = false) {\n          const object = {};\n          const { parametersDefined } = this;\n          parametersDefined.forEach(parameter => {\n              const { name, value } = parameter;\n              if (isPopulatedString(value)) {\n                  const property = this.properties.find(property => value === property.name);\n                  if (property)\n                      return;\n              }\n              if (isNumber(value) || isString(value))\n                  object[name] = value;\n          });\n          this.properties.forEach(property => {\n              const { tweenable, name } = property;\n              if (isDefined(object[name]))\n                  return;\n              object[name] = this.value(name);\n              if (!(tweening && tweenable))\n                  return;\n              const key = `${name}${PropertyTweenSuffix}`;\n              object[key] = this.value(key);\n          });\n          // console.log(this.constructor.name, \"scalerObject\", object, parametersDefined.map(p => p.name))\n          return object;\n      }\n      toString() {\n          return `[Filter ${this.label}]`;\n      }\n  }\n\n  class FilterDefinitionClass {\n      constructor(object) {\n          const { id } = object;\n          assertPopulatedString(id, 'id');\n          this.id = id;\n      }\n      id;\n      commandFiles(args) {\n          return [];\n      }\n      commandFilters(args) {\n          const { filter, duration, filterInput } = args;\n          assertPopulatedString(filterInput);\n          const commandFilters = [];\n          const options = filter.scalarObject(!!duration);\n          assertValueObject(options);\n          const { ffmpegFilter } = this;\n          const commandFilter = {\n              inputs: [filterInput], ffmpegFilter, options, outputs: [idGenerate(ffmpegFilter)]\n          };\n          commandFilters.push(commandFilter);\n          return commandFilters;\n      }\n      commandFilter(options = {}) {\n          const { ffmpegFilter } = this;\n          const commandFilter = {\n              ffmpegFilter, options, inputs: [], outputs: [idGenerate(ffmpegFilter)]\n          };\n          return commandFilter;\n      }\n      _ffmpegFilter;\n      get ffmpegFilter() {\n          return this._ffmpegFilter ||= this.id.split('.').pop() || this.id;\n      }\n      filterDefinitionSvgs(args) {\n          return errorThrow(ErrorName.Unimplemented);\n      }\n      instanceArgs(object = {}) {\n          const defaults = Object.fromEntries(this.properties.map(property => ([property.name, property.defaultValue])));\n          return { ...defaults, ...object, definition: this };\n      }\n      instanceFromObject(object = {}) {\n          return new FilterClass(this.instanceArgs(object));\n      }\n      properties = [];\n      parameters = [];\n      populateParametersFromProperties() {\n          this.parameters = this.properties.map(property => {\n              const { name } = property;\n              return new Parameter({ name, value: name, dataType: exports.DataType.String });\n          });\n      }\n      filterDefinitionSvgFilter(valueObject) {\n          return errorThrow(ErrorName.Unimplemented);\n      }\n      toJSON() {\n          const { id } = this;\n          return { id };\n      }\n      toString() { return this.id; }\n  }\n\n  let _svgElement;\n  let svgImageEmitsLoadEvent = false;\n  const svgElement = () => _svgElement ||= svgSvgElement();\n  const svgElementInitialize = (value) => { _svgElement = value; };\n  const svgId = (id) => {\n      return `#${id}`;\n  };\n  const svgUrl = (id) => {\n      return `url(${svgId(id)})`;\n  };\n  const svgGroupElement = (dimensions, id = '') => {\n      const element = globalThis.document.createElementNS(NamespaceSvg, 'g');\n      svgSet(element, id);\n      svgSetDimensions(element, dimensions);\n      return element;\n  };\n  const svgSetDimensions = (element, dimensions) => {\n      if (isSize(dimensions)) {\n          const { width, height } = dimensions;\n          if (isPositive(width))\n              svgSet(element, String(width), 'width');\n          if (isPositive(height))\n              svgSet(element, String(height), 'height');\n      }\n      if (isPoint(dimensions)) {\n          const { x, y } = dimensions;\n          svgSet(element, String(x), 'x');\n          svgSet(element, String(y), 'y');\n      }\n  };\n  const svgSetTransformPoint = (element, point) => {\n      assertPoint(point);\n      const { x, y } = point;\n      if (!(x || y))\n          return;\n      svgSetTransform(element, `translate(${x}, ${y})`);\n  };\n  const svgRectPoints = (dimensions) => {\n      const { width, height, x = 0, y = 0 } = dimensions;\n      const startEndPoint = { x, y };\n      const points = [];\n      points.push(startEndPoint);\n      points.push({ x: x + width, y });\n      points.push({ x: x + width, y: y + height });\n      points.push({ x, y: y + height });\n      points.push(startEndPoint);\n      return points;\n  };\n  const svgPolygonElement = (dimensions, className, fill = '', id) => {\n      const element = globalThis.document.createElementNS(NamespaceSvg, 'polygon');\n      const rectPoints = svgRectPoints(dimensions);\n      const points = rectPoints.map(point => [point.x, point.y].join(',')).join(' ');\n      svgSet(element, points, 'points');\n      svgSet(element, fill, 'fill');\n      svgAddClass(element, className);\n      svgSet(element, id);\n      return element;\n  };\n  const svgSetBox = (element, boxSize) => {\n      assertSizeAboveZero(boxSize, 'svgSetBox');\n      const justSize = sizeCopy(boxSize);\n      const { width, height } = justSize;\n      svgSetDimensions(element, justSize);\n      const viewBox = `0 0 ${width} ${height}`;\n      svgSet(element, viewBox, 'viewBox');\n  };\n  const svgSvgElement = (size, svgItems) => {\n      const element = globalThis.document.createElementNS(NamespaceSvg, 'svg');\n      svgSet(element, '1.1', 'version');\n      svgSet(element, NamespaceSvg, 'xmlns');\n      svgAppend(element, svgItems);\n      if (!sizeAboveZero(size))\n          return element;\n      svgSetBox(element, size);\n      return element;\n  };\n  const svgSetDimensionsLock = (element, dimensions, lock) => {\n      assertSizeAboveZero(dimensions);\n      if (!lock)\n          svgSet(element, 'none', 'preserveAspectRatio');\n      const rect = {\n          ...sizeLockNegative(dimensions, lock),\n          ...pointCopy(dimensions)\n      };\n      svgSetDimensions(element, rect);\n  };\n  const svgImageElement = () => {\n      const element = globalThis.document.createElementNS(NamespaceSvg, \"image\");\n      svgSet(element, 'none', 'preserveAspectRatio');\n      return element;\n  };\n  const svgPathElement = (path, fill = 'currentColor') => {\n      const element = globalThis.document.createElementNS(NamespaceSvg, 'path');\n      svgSet(element, path, 'd');\n      svgSet(element, fill, 'fill');\n      return element;\n  };\n  const svgMaskElement = (size, contentItem, luminance) => {\n      const maskId = idGenerateString();\n      const maskElement = globalThis.document.createElementNS(NamespaceSvg, 'mask');\n      svgSet(maskElement, maskId);\n      if (sizeAboveZero(size)) {\n          // svgSetDimensions(maskElement, size)\n          const color = luminance ? 'black' : 'none';\n          svgAppend(maskElement, svgPolygonElement(size, '', color));\n      }\n      if (contentItem) {\n          svgSet(contentItem, svgUrl(maskId), 'mask');\n          if (luminance)\n              svgSet(contentItem, 'luminance', 'mask-mode');\n      }\n      return maskElement;\n  };\n  const svgFilter = (values, dimensions) => {\n      const { filter, ...rest } = values;\n      assertPopulatedString(filter);\n      const element = globalThis.document.createElementNS(NamespaceSvg, filter);\n      svgSetDimensions(element, dimensions);\n      Object.entries(rest).forEach(([key, value]) => {\n          svgSet(element, String(value), key);\n      });\n      return element;\n  };\n  const svgAppend = (element, items) => {\n      if (!items)\n          return;\n      const kids = isArray(items) ? items : [items];\n      kids.forEach(kid => element.appendChild(kid));\n  };\n  const svgPatternElement = (dimensions, id, items) => {\n      const element = globalThis.document.createElementNS(NamespaceSvg, 'pattern');\n      svgSet(element, id);\n      svgSetBox(element, dimensions);\n      svgSet(element, 'userSpaceOnUse', 'patternUnits');\n      svgAppend(element, items);\n      return element;\n  };\n  const svgDefsElement = (svgItems) => {\n      const element = globalThis.document.createElementNS(NamespaceSvg, 'defs');\n      svgAppend(element, svgItems);\n      return element;\n  };\n  const svgFeImageElement = (id, result) => {\n      const element = globalThis.document.createElementNS(NamespaceSvg, 'feImage');\n      if (isPopulatedString(id))\n          svgSet(element, svgId(id), 'href');\n      svgSet(element, result, 'result');\n      return element;\n  };\n  const svgFilterElement = (filters, filtered, rect, units = 'userSpaceOnUse') => {\n      const filterElement = globalThis.document.createElementNS(NamespaceSvg, 'filter');\n      if (units)\n          svgSet(filterElement, units, 'filterUnits');\n      svgSet(filterElement, 'sRGB', 'color-interpolation-filters');\n      svgAppend(filterElement, filters);\n      if (filtered) {\n          const filterId = idGenerateString();\n          svgSet(filterElement, filterId);\n          if (filtered) {\n              const array = isArray(filtered) ? filtered : [filtered];\n              array.forEach(filtered => {\n                  svgSet(filtered, svgUrl(filterId), 'filter');\n                  svgAddClass(filtered, 'filtered');\n              });\n          }\n      }\n      svgSetDimensions(filterElement, rect);\n      return filterElement;\n  };\n  const svgDifferenceDefs = (overlayId, filtered) => {\n      const filterObject = { filter: 'feBlend' };\n      const resultId = idGenerateString();\n      const differenceFilter = svgFilter({ ...filterObject, mode: 'difference' });\n      svgSet(differenceFilter, resultId, 'in');\n      svgSet(differenceFilter, 'SourceGraphic', 'in2');\n      const image = svgFeImageElement(overlayId, resultId);\n      const filter = svgFilterElement([image, differenceFilter], filtered, PointZero);\n      svgSet(filter, '100%', 'width');\n      svgSet(filter, '100%', 'height');\n      return filter;\n  };\n  const svgSet = (element, value, name = 'id') => {\n      if (isPopulatedString(value))\n          element.setAttribute(name, value);\n  };\n  const svgAddClass = (element, className) => {\n      if (!className)\n          return;\n      const array = isArray(className) ? className : className.split(' ');\n      element.classList.add(...array);\n  };\n  const svgUseElement = (href, className, id) => {\n      const element = globalThis.document.createElementNS(NamespaceSvg, 'use');\n      if (isPopulatedString(href))\n          svgSet(element, svgId(href), 'href');\n      svgSet(element, id);\n      svgAddClass(element, className);\n      return element;\n  };\n  const svgSetTransform = (element, transform, origin = 'top left') => {\n      svgSet(element, transform, 'transform');\n      svgSet(element, origin, 'transform-origin');\n  };\n  const svgTransform = (dimensions, rect) => {\n      assertSizeAboveZero(dimensions, 'svgTransform.dimensions');\n      assertSizeAboveZero(rect, 'svgTransform.rect');\n      const { width: inWidth, height: inHeight } = dimensions;\n      const { width: outWidth, height: outHeight, x: outX, y: outY } = rect;\n      const scaleWidth = outWidth / inWidth;\n      const scaleHeight = outHeight / inHeight;\n      const words = [];\n      if (!(outX === 0 && outY === 0))\n          words.push(`translate(${outX},${outY})`);\n      if (!(scaleWidth === 1 && scaleHeight === 1)) {\n          words.push(`scale(${scaleWidth},${scaleHeight})`);\n      }\n      if (isPoint(dimensions)) {\n          const { x: inX, y: inY } = (dimensions);\n          if (!(inX === 0 && inY === 0))\n              words.push(`translate(${inX},${inY})`);\n      }\n      return words.join(' ');\n  };\n  const svgSetTransformRects = (element, dimensions, rect) => {\n      svgSetTransform(element, svgTransform(dimensions, rect));\n  };\n  const svgFunc = (type, values) => {\n      const element = globalThis.document.createElementNS(NamespaceSvg, type);\n      svgSet(element, values, 'tableValues');\n      svgSet(element, 'discrete', 'type');\n      return element;\n  };\n  const svgSetChildren = (element, svgItems) => {\n      if (!element.hasChildNodes())\n          return svgAppend(element, svgItems);\n      const { childNodes } = element;\n      const nodes = [];\n      childNodes.forEach(node => {\n          if (!svgItems.includes(node))\n              nodes.push(node);\n      });\n      nodes.forEach(node => { element.removeChild(node); });\n      svgItems.forEach(node => element.appendChild(node));\n  };\n  const svgImagePromise = (url) => {\n      return new Promise((resolve, reject) => {\n          const element = svgImageElement();\n          const completed = () => {\n              element.removeEventListener('error', failed);\n              element.removeEventListener('load', passed);\n              if (_svgElement && !svgImageEmitsLoadEvent) {\n                  _svgElement.appendChild(element);\n              }\n          };\n          const failed = (error) => {\n              completed();\n              reject(error);\n          };\n          const passed = () => {\n              completed();\n              resolve(element);\n          };\n          element.addEventListener('error', failed, { once: true });\n          element.addEventListener('load', passed, { once: true });\n          if (_svgElement && !svgImageEmitsLoadEvent) {\n              _svgElement.appendChild(element);\n          }\n          svgSet(element, url, 'href');\n      });\n  };\n  const svgText = (string, family, size, transform) => {\n      const svgItem = globalThis.document.createElementNS(NamespaceSvg, 'text');\n      svgItem.setAttribute('font-family', family);\n      svgItem.setAttribute('font-size', String(size));\n      svgItem.append(string);\n      svgSetTransform(svgItem, transform);\n      return svgItem;\n  };\n  const svgImagePromiseWithOptions = (url, options) => {\n      return svgImagePromise(url).then(item => {\n          const { lock, ...rest } = options;\n          svgSetDimensionsLock(item, rest, lock);\n          return item;\n      });\n  };\n  // test for support for load events from svg images\n  (() => {\n      const { document } = globalThis;\n      if (document) {\n          const canvas = document.createElement('canvas');\n          canvas.width = canvas.height = 1;\n          const context = canvas.getContext('2d');\n          assertTrue(context);\n          context.fillRect(0, 0, 1, 1);\n          svgImagePromise(canvas.toDataURL()).then(() => {\n              svgImageEmitsLoadEvent = true;\n          });\n      }\n  })();\n\n  /**\n   * @category Filter\n   */\n  class ChromaKeyFilter extends FilterDefinitionClass {\n      constructor(object) {\n          super(object);\n          this.properties.push(propertyInstance({\n              custom: true, name: 'color', type: exports.DataType.String,\n              defaultValue: colorGreen\n          }));\n          this.properties.push(propertyInstance({\n              custom: true, name: 'similarity', type: exports.DataType.Percent,\n              defaultValue: 0.9, min: 0.1, step: 0.01, max: 1.0,\n          }));\n          this.properties.push(propertyInstance({\n              custom: true, name: 'blend', type: exports.DataType.Percent,\n              defaultValue: 0.0, step: 0.01, max: 1.0,\n          }));\n          this.populateParametersFromProperties();\n      }\n      filterDefinitionSvgFilter(object) {\n          const { similarity, color, blend } = object;\n          assertNumber(similarity);\n          assertNumber(blend);\n          assertPopulatedString(color);\n          const max = 255.0;\n          const range = max * max * (1.0 - blend);\n          const rgb = colorToRgb(color);\n          // console.log(\"filterDefinitionSvgFilters\", rgb)\n          const r = 1.0 - (similarity * ((rgb.r) / max));\n          const g = 1.0 - (similarity * ((rgb.g) / max));\n          const b = 1.0 - (similarity * ((rgb.b) / max));\n          const values = `1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 ${r} ${g} ${b} -${range} ${range}`;\n          const colorMatrix = {\n              filter: 'feColorMatrix',\n              type: 'matrix',\n              values,\n          };\n          return [svgFilter(colorMatrix)];\n      }\n  }\n  // <filter id='greenScreen' color-interpolation-filters=\"sRGB\">\n  // <feComponentTransfer result='colorToBlack'>\n  //   <feFuncR id='funcR' type='discrete' tableValues='0 1 1  1 1 1'/>\n  //   <feFuncG id='funcG' type='discrete' tableValues='0 1 '/>\n  //   <feFuncB id='funcB' type='discrete' tableValues='0 1'/>\n  // </feComponentTransfer> \n  // <feColorMatrix in='colorToBlack' result='blackAndWhite' type='matrix' \n  //          values='10 11 10 0 0\n  //                  10 10 10 0 0\n  //                  10 10 10 0 0\n  //                  0 0 0 1 0'/> \n  // <feColorMatrix in='blackAndWhite' result='whiteToTransparent' type='matrix' \n  //          values='1 0 0 0 0\n  //                  0 1 0 0 0\n  //                  0 0 1 0 0\n  //                 -1 0 0 1 0'/>  \n  // <feComposite  ='' in='SourceGraphic' in='blackAndWhite' />  \n  // </filter>\n\n  /**\n   * @category Filter\n   */\n  class ColorizeFilter extends FilterDefinitionClass {\n      constructor(object) {\n          super(object);\n          this.properties.push(propertyInstance({\n              tweenable: true, custom: true, name: 'color', type: exports.DataType.String,\n          }));\n          this.populateParametersFromProperties();\n      }\n      _ffmpegFilter = 'geq';\n      commandFilters(args) {\n          const commandFilters = [];\n          const { filter, videoRate, duration, filterInput: input } = args;\n          assertNumber(duration, 'duration');\n          assertNumber(videoRate, 'videoRate');\n          const color = filter.value('color');\n          assertPopulatedString(color, 'color');\n          let filterInput = input;\n          assertPopulatedString(filterInput, 'filterInput');\n          const formatFilter = 'format';\n          const formatId = idGenerate(formatFilter);\n          const formatCommandFilter = {\n              inputs: [filterInput], ffmpegFilter: formatFilter,\n              options: { pix_fmts: 'rgba' }, outputs: [formatId]\n          };\n          commandFilters.push(formatCommandFilter);\n          filterInput = formatId;\n          const colorEnd = filter.value(`color${PropertyTweenSuffix}`) || color;\n          assertPopulatedString(colorEnd);\n          const alpha = color.length > 7;\n          const fromColor = alpha ? colorToRgba(color) : colorToRgb(color);\n          const toColor = alpha ? colorToRgba(colorEnd) : colorToRgb(colorEnd);\n          const keys = alpha ? colorRgbaKeys : colorRgbKeys;\n          const options = {};\n          const position = duration ? tweenPosition(videoRate, duration, 'N') : 0;\n          keys.forEach(key => {\n              const from = fromColor[key];\n              const to = toColor[key];\n              if (from === to)\n                  options[key] = from;\n              else\n                  options[key] = `${from}+(${to - from}*${position})`;\n          });\n          if (!alpha)\n              options.a = 'alpha(X,Y)';\n          const geqFilter = 'geq';\n          const geqFilterId = idGenerate(geqFilter);\n          const geqCommandFilter = {\n              inputs: [filterInput], ffmpegFilter: geqFilter,\n              options, outputs: [geqFilterId]\n          };\n          commandFilters.push(geqCommandFilter);\n          return commandFilters;\n      }\n  }\n\n  const pixelColor = (value) => {\n      const string = String(value);\n      if (string.slice(0, 2) === \"0x\")\n          return `#${string.slice(2)}`;\n      return string;\n  };\n  /**\n   * @category Filter\n   */\n  class ColorFilter extends ColorizeFilter {\n      constructor(object) {\n          super(object);\n          this.properties.push(propertyInstance({\n              tweenable: true, name: 'color', type: exports.DataType.String\n          }));\n          const keys = ['width', 'height'];\n          keys.forEach(name => {\n              this.properties.push(propertyInstance({\n                  tweenable: true, name, type: exports.DataType.Number\n              }));\n          });\n          this.populateParametersFromProperties();\n      }\n      commandFilters(args) {\n          const commandFilters = [];\n          const { filter, videoRate, duration } = args;\n          assertAboveZero(videoRate, 'videoRate');\n          const { ffmpegFilter } = this;\n          let filterInput = idGenerate(ffmpegFilter);\n          const color = filter.value('color');\n          assertPopulatedString(color);\n          const colorEnd = duration ? filter.value(`color${PropertyTweenSuffix}`) : undefined;\n          const tweeningColor = isPopulatedString(colorEnd) && color !== colorEnd;\n          const scalars = filter.scalarObject(!!duration);\n          assertSize(scalars);\n          const { width, height } = scalars;\n          let tweeningSize = false;\n          const startSize = { width, height };\n          const endSize = { width, height };\n          if (duration) {\n              const { [`width${PropertyTweenSuffix}`]: widthEnd = width, [`height${PropertyTweenSuffix}`]: heightEnd = height, } = scalars;\n              assertNumber(widthEnd);\n              assertNumber(heightEnd);\n              tweeningSize = !(width === widthEnd && height === heightEnd);\n              if (tweeningSize) {\n                  endSize.width = widthEnd;\n                  endSize.height = heightEnd;\n              }\n          }\n          const maxSize = tweeningSize ? tweenMaxSize(startSize, endSize) : startSize;\n          const commandFilter = {\n              inputs: [], ffmpegFilter,\n              options: {\n                  color, rate: videoRate, size: Object.values(maxSize).join('x')\n              },\n              outputs: [filterInput]\n          };\n          if (isAboveZero(duration))\n              commandFilter.options.duration = duration;\n          commandFilters.push(commandFilter);\n          // console.log(this.constructor.name, \"commandFilters\", tweeningColor, color, colorEnd, duration)\n          if (tweeningColor) {\n              const fadeFilter = 'fade';\n              const fadeFilterId = idGenerate(fadeFilter);\n              const fadeCommandFilter = {\n                  inputs: [filterInput], ffmpegFilter: fadeFilter,\n                  options: {\n                      type: 'out',\n                      color: colorEnd, duration,\n                  },\n                  outputs: [fadeFilterId]\n              };\n              commandFilters.push(fadeCommandFilter);\n              filterInput = fadeFilterId;\n          }\n          if (tweeningSize) {\n              const scaleFilter = 'scale';\n              const scaleFilterId = idGenerate(scaleFilter);\n              const position = tweenPosition(videoRate, duration);\n              const scaleCommandFilter = {\n                  inputs: [filterInput], ffmpegFilter: scaleFilter,\n                  options: {\n                      eval: 'frame',\n                      width: tweenOption(startSize.width, endSize.width, position),\n                      height: tweenOption(startSize.height, endSize.height, position),\n                  },\n                  outputs: [scaleFilterId]\n              };\n              commandFilters.push(scaleCommandFilter);\n          }\n          return commandFilters;\n      }\n      _ffmpegFilter = 'color';\n      filterDefinitionSvgs(args) {\n          const { filter } = args;\n          const valueObject = filter.scalarObject(false);\n          const { width, height, color } = valueObject;\n          assertPopulatedString(color);\n          const rectElement = globalThis.document.createElementNS(NamespaceSvg, 'rect');\n          rectElement.setAttribute('width', String(width));\n          rectElement.setAttribute('height', String(height));\n          rectElement.setAttribute('fill', pixelColor(color));\n          return [rectElement];\n      }\n  }\n\n  const ColorChannelMixerFilterKeys = colorRgbaKeys.flatMap(c => colorRgbaKeys.map(d => `${c}${d}`));\n  /**\n   * @category Filter\n   */\n  class ColorChannelMixerFilter extends FilterDefinitionClass {\n      constructor(object) {\n          super(object);\n          ColorChannelMixerFilterKeys.forEach(name => {\n              this.properties.push(propertyInstance({\n                  custom: true, name, type: exports.DataType.Number,\n                  defaultValue: name[0] === name[1] ? 1.0 : 0.0,\n                  min: 0.0, max: 1.0\n              }));\n          });\n          this.populateParametersFromProperties();\n      }\n      filterDefinitionSvgFilter(object) {\n          const bits = colorRgbaKeys.flatMap(c => [...colorRgbaKeys.map(d => Number(object[`${c}${d}`])), 0]);\n          const options = {\n              filter: 'feColorMatrix',\n              type: 'matrix',\n              values: bits.join(' '),\n          };\n          return [svgFilter(options)];\n      }\n  }\n  // covert to grayscale -> colorchannelmixer=.3:.4:.3:0:.3:.4:.3:0:.3:.4:.3\n\n  /**\n   * @category Filter\n   */\n  class ConvolutionFilter extends FilterDefinitionClass {\n      constructor(object) {\n          super(object);\n          this.properties.push(propertyInstance({\n              custom: true, name: \"bias\",\n              defaultValue: 0.0, min: 0.0, max: 100.0, step: 0.01\n          }));\n          this.properties.push(propertyInstance({\n              custom: true, name: \"matrix\", defaultValue: \"0 0 0 0 1 0 0 0 0\",\n          }));\n          this.properties.push(propertyInstance({\n              custom: true, name: \"multiplier\",\n              defaultValue: 1.0, min: 0.0, max: 100.0, step: 0.01\n          }));\n          this.populateParametersFromProperties();\n      }\n      commandFilters(args) {\n          const { filterInput, filter, duration } = args;\n          assertPopulatedString(filterInput, 'filterInput');\n          const commandFilters = [];\n          const values = filter.scalarObject(!!duration);\n          assertConvolutionServerFilter(values);\n          const { ffmpegFilter } = this;\n          const commandFilter = {\n              inputs: [filterInput], ffmpegFilter,\n              options: optionsFromObject(parse(values)),\n              outputs: [idGenerate(ffmpegFilter)]\n          };\n          commandFilters.push(commandFilter);\n          return commandFilters;\n      }\n      filterDefinitionSvgFilter(valueObject) {\n          assertConvolutionServerFilter(valueObject);\n          const { matrix, bias, multiplier } = valueObject;\n          const object = {\n              filter: 'feConvolveMatrix',\n              kernelMatrix: String(matrix),\n              bias: String(bias)\n          };\n          if (isAboveZero(multiplier))\n              object.divisor = String(multiplier);\n          // console.log(this.constructor.name, \"filterDefinitionSvgFilter\", object)\n          return [svgFilter(object)];\n      }\n  }\n  const isConvolutionServerFilter = (value) => {\n      return isObject(value) && \"matrix\" in value && \"bias\" in value && \"multiplier\" in value;\n  };\n  function assertConvolutionServerFilter(value) {\n      if (!isConvolutionServerFilter(value))\n          throw new Error(\"expected ConvolutionServerFilter\");\n  }\n  const matrixFromString = (string) => {\n      const definedString = string || \"0 0 0 0 1 0 0 0 0\";\n      return definedString.split(',').map(component => parseInt(component.trim()));\n  };\n  const biasFromString = (string) => {\n      if (!string?.length)\n          return 0.0;\n      return parseFloat(string.trim());\n  };\n  const multiplierFromString = (string) => {\n      if (!string?.length)\n          return 1.0;\n      if (string.includes('/')) {\n          const components = string.split('/').map(component => parseFloat(component.trim()));\n          const [a, b] = components;\n          return a / b;\n      }\n      return parseFloat(string.trim());\n  };\n  const fromCombined = (combined) => {\n      return { combined, r: combined, g: combined, b: combined, a: combined };\n  };\n  const numbersFromCombined = (combined) => {\n      return { combined, r: combined, g: combined, b: combined, a: combined };\n  };\n  const numberFromCombined = (combined) => {\n      return { combined, r: combined, g: combined, b: combined, a: combined };\n  };\n  const convolutionStringObject = (combined) => {\n      return fromCombined(String(combined));\n  };\n  const convolutionMatrixObject = (stringObject) => {\n      const { combined } = stringObject;\n      return numbersFromCombined(matrixFromString(String(combined)));\n  };\n  const convolutionBiasObject = (stringObject) => {\n      const { combined } = stringObject;\n      return numberFromCombined(biasFromString(String(combined)));\n  };\n  const convolutionMultiplierObject = (stringObject) => {\n      const { combined } = stringObject;\n      return numberFromCombined(multiplierFromString(String(combined)));\n  };\n  const parse = (convolutionObject) => {\n      const matrixObject = convolutionStringObject(convolutionObject.matrix);\n      const multiplierObject = convolutionStringObject(convolutionObject.multiplier);\n      const matrix = convolutionMatrixObject(matrixObject);\n      const multiplier = convolutionMultiplierObject(multiplierObject);\n      const bias = matrixObject.combined ? numberFromCombined(0.0) : convolutionBiasObject(convolutionStringObject(convolutionObject.bias));\n      const result = { multiplier, matrix, bias };\n      return result;\n  };\n  const optionsFromObject = (convolutionObject) => {\n      const valueObject = {};\n      colorRgbaKeys.map(c => c).forEach((channel, index) => {\n          const multiplier = convolutionObject.multiplier[channel];\n          const matrix = convolutionObject.matrix[channel];\n          valueObject[`${index}m`] = matrix.join(' ');\n          valueObject[`${index}rdiv`] = multiplier;\n          valueObject[`${index}bias`] = convolutionObject.bias[channel];\n      });\n      return valueObject;\n  };\n\n  /**\n   * @category Filter\n   */\n  class CropFilter extends FilterDefinitionClass {\n      constructor(object) {\n          super(object);\n          this.properties.push(propertyInstance({\n              custom: true, name: 'width', type: exports.DataType.String,\n          }));\n          this.properties.push(propertyInstance({\n              custom: true, name: 'height', type: exports.DataType.String,\n          }));\n          this.properties.push(propertyInstance({\n              tweenable: true, custom: true, name: 'x', type: exports.DataType.Number,\n              defaultValue: 0, min: 0, step: 1\n          }));\n          this.properties.push(propertyInstance({\n              tweenable: true, custom: true, name: 'y', type: exports.DataType.Number,\n              defaultValue: 0, min: 0, step: 1\n          }));\n          this.populateParametersFromProperties();\n      }\n      commandFilters(args) {\n          const { filter, filterInput, duration, videoRate } = args;\n          assertPopulatedString(filterInput);\n          const commandFilters = [];\n          const scalars = filter.scalarObject(!!duration);\n          const options = { exact: 1 };\n          const position = tweenPosition(videoRate, duration);\n          options.x = tweenOption(scalars.x, scalars[`x${PropertyTweenSuffix}`], position, true);\n          options.y = tweenOption(scalars.y, scalars[`y${PropertyTweenSuffix}`], position, true);\n          const { width, height } = scalars;\n          if (isTrueValue(width))\n              options.w = width;\n          if (isTrueValue(height))\n              options.h = height;\n          const { ffmpegFilter } = this;\n          const commandFilter = {\n              inputs: [filterInput], ffmpegFilter,\n              options,\n              outputs: [idGenerate(ffmpegFilter)]\n          };\n          commandFilters.push(commandFilter);\n          return commandFilters;\n      }\n  }\n\n  /**\n   * @category Filter\n   */\n  class OverlayFilter extends FilterDefinitionClass {\n      constructor(object) {\n          super(object);\n          this.properties.push(propertyInstance({\n              tweenable: true, custom: true, name: 'x', type: exports.DataType.Percent, defaultValue: 0.5\n          }));\n          this.properties.push(propertyInstance({\n              tweenable: true, custom: true, name: 'y', type: exports.DataType.Percent, defaultValue: 0.5\n          }));\n          this.properties.push(propertyInstance({\n              custom: true, name: 'format', type: exports.DataType.String, defaultValue: 'yuv420' // yuv420p10\n          }));\n          this.properties.push(propertyInstance({\n              custom: true, name: 'alpha', type: exports.DataType.String, defaultValue: 'straight' // premultiplied\n          }));\n          this.populateParametersFromProperties();\n      }\n      commandFilters(args) {\n          const commandFilters = [];\n          const { filter, filterInput, chainInput, duration, videoRate } = args;\n          assertPopulatedString(filterInput, 'filterInput');\n          assertPopulatedString(chainInput, 'chainInput');\n          const scalars = filter.scalarObject(!!duration);\n          const options = {}; //repeatlast: 0, shortest: 1\n          const { format, alpha } = scalars;\n          if (isPopulatedString(format))\n              options.format = format;\n          if (isPopulatedString(alpha))\n              options.alpha = alpha;\n          const position = tweenPosition(videoRate, duration, '(n-1)'); // overlay bug\n          const x = tweenOption(scalars.x, scalars[`x${PropertyTweenSuffix}`], position, true);\n          const y = tweenOption(scalars.y, scalars[`y${PropertyTweenSuffix}`], position, true);\n          const xZero = x === 0;\n          const yZero = y === 0;\n          // const zero = xZero && yZero\n          if (!xZero)\n              options.x = x;\n          if (!yZero)\n              options.y = y;\n          // const { ffmpegFilter } = this\n          const ffmpegFilter = 'overlay';\n          const commandFilter = {\n              inputs: [chainInput, filterInput], ffmpegFilter, options, outputs: []\n          };\n          commandFilters.push(commandFilter);\n          return commandFilters;\n      }\n  }\n\n  /**\n   * @category Filter\n   */\n  class ScaleFilter extends FilterDefinitionClass {\n      constructor(object) {\n          super(object);\n          this.properties.push(propertyInstance({\n              name: 'width', type: exports.DataType.Percent, defaultValue: 1.0, max: 2.0\n          }));\n          this.properties.push(propertyInstance({\n              name: 'height', type: exports.DataType.Percent, defaultValue: 1.0, max: 2.0\n          }));\n          this.properties.push(propertyInstance({\n              name: `width${PropertyTweenSuffix}`, type: exports.DataType.Percent,\n              defaultValue: 1.0, max: 2.0\n          }));\n          this.properties.push(propertyInstance({\n              name: `height${PropertyTweenSuffix}`, type: exports.DataType.Percent,\n              defaultValue: 1.0, max: 2.0\n          }));\n          this.populateParametersFromProperties();\n      }\n      commandFilters(args) {\n          const commandFilters = [];\n          const { filter, duration, filterInput, videoRate } = args;\n          const values = filter.scalarObject(!!duration);\n          const { width, height, [`width${PropertyTweenSuffix}`]: widthEnd, [`height${PropertyTweenSuffix}`]: heightEnd, } = values;\n          assertPopulatedString(filterInput);\n          // console.log(this.constructor.name, \"commandFilters\", filterInput, width, \"x\", height) //, widthEnd, \"x\", heightEnd)\n          const { ffmpegFilter } = this;\n          const position = tweenPosition(videoRate, duration);\n          const options = {\n              width: tweenOption(width, widthEnd, position, true),\n              height: tweenOption(height, heightEnd, position, true),\n              // sws_flags: 'accurate_rnd',\n          };\n          if (!(isNumber(options.width) && isNumber(options.height)))\n              options.eval = 'frame';\n          const commandFilter = {\n              inputs: [filterInput], ffmpegFilter, options,\n              outputs: [idGenerate(ffmpegFilter)]\n          };\n          commandFilters.push(commandFilter);\n          return commandFilters;\n      }\n  }\n\n  class OpacityFilter extends FilterDefinitionClass {\n      constructor(object) {\n          super(object);\n          this.properties.push(propertyInstance({\n              tweenable: true, custom: true, name: 'opacity',\n              type: exports.DataType.Number, defaultValue: 1.0,\n          }));\n          this.populateParametersFromProperties();\n      }\n      commandFilters(args) {\n          const commandFilters = [];\n          const { filterInput: input, filter, duration, videoRate } = args;\n          const opacity = filter.value('opacity');\n          let filterInput = input;\n          assertNumber(opacity);\n          assertPopulatedString(filterInput, 'filterInput');\n          const options = {\n              lum: 'lum(X,Y)', cb: 'cb(X,Y)', cr: 'cr(X,Y)', a: `alpha(X,Y)*${opacity}`\n          };\n          if (duration) {\n              const opacityEnd = filter.value(`opacity${PropertyTweenSuffix}`);\n              if (isNumber(opacityEnd) && opacity != opacityEnd) {\n                  const position = tweenPosition(videoRate, duration, 'N');\n                  const toValue = opacityEnd - opacity;\n                  options.a = `alpha(X,Y)*(${opacity}+(${toValue}*${position}))`;\n              }\n          }\n          // const formatFilter = 'format'\n          // const formatId = idGenerate(formatFilter)\n          // const formatCommandFilter: CommandFilter = {\n          //   inputs: [filterInput], ffmpegFilter: formatFilter, \n          //   options: { pix_fmts: 'rgba' }, outputs: [formatId]\n          // }\n          // commandFilters.push(formatCommandFilter)\n          // filterInput = formatId\n          const { ffmpegFilter } = this;\n          const commandFilter = {\n              inputs: [filterInput], ffmpegFilter,\n              options, outputs: [idGenerate(ffmpegFilter)]\n          };\n          commandFilters.push(commandFilter);\n          return commandFilters;\n      }\n      _ffmpegFilter = 'geq';\n      filterDefinitionSvgFilter(valueObject) {\n          const { opacity } = valueObject;\n          assertNumber(opacity);\n          const filterElement = globalThis.document.createElementNS(NamespaceSvg, 'feColorMatrix');\n          filterElement.setAttribute('type', 'matrix');\n          const values = `1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 ${opacity} 0`;\n          // console.log(this.constructor.name, \"filterDefinitionSvgFilters\", values)\n          svgSet(filterElement, values, 'values');\n          return [filterElement];\n      }\n  }\n\n  /**\n   * @category Filter\n   */\n  class SetsarFilter extends FilterDefinitionClass {\n      constructor(object) {\n          super(object);\n          this.properties.push(propertyInstance({\n              custom: true, name: 'sar', type: exports.DataType.String, defaultValue: '0'\n          }));\n          this.properties.push(propertyInstance({\n              custom: true, name: 'max', type: exports.DataType.Number, defaultValue: 100\n          }));\n          this.populateParametersFromProperties();\n      }\n  }\n\n  /**\n   * @category Filter\n   */\n  class FpsFilter extends FilterDefinitionClass {\n      constructor(object) {\n          super(object);\n          this.properties.push(propertyInstance({\n              custom: true, name: 'fps', type: exports.DataType.Number\n          }));\n          this.populateParametersFromProperties();\n      }\n  }\n\n  /**\n   * @category Filter\n   */\n  class SetptsFilter extends FilterDefinitionClass {\n      constructor(object) {\n          super(object);\n          this.properties.push(propertyInstance({\n              custom: true, name: 'expr', type: exports.DataType.String, defaultValue: 'PTS-STARTPTS'\n          }));\n          this.populateParametersFromProperties();\n      }\n  }\n\n  /**\n   * @category Filter\n   */\n  class AlphamergeFilter extends FilterDefinitionClass {\n      commandFilters(args) {\n          const commandFilters = [];\n          const { chainInput, filterInput } = args;\n          assertPopulatedString(chainInput, 'chainInput');\n          assertPopulatedString(filterInput, 'filterInput');\n          const { ffmpegFilter } = this;\n          const commandFilter = {\n              inputs: [chainInput, filterInput], ffmpegFilter,\n              options: {}, outputs: [idGenerate(ffmpegFilter)]\n          };\n          commandFilters.push(commandFilter);\n          return commandFilters;\n      }\n  }\n\n  /**\n   * @category Filter\n   */\n  class TrimFilter extends FilterDefinitionClass {\n      constructor(object) {\n          super(object);\n          this.properties.push(propertyInstance({\n              custom: true, name: 'start', type: exports.DataType.Number, defaultValue: 0\n          }));\n          this.populateParametersFromProperties();\n      }\n  }\n\n  /**\n   * @category Filter\n   */\n  class TextFilter extends ColorizeFilter {\n      constructor(object) {\n          super(object);\n          this.properties.push(propertyInstance({\n              custom: true, type: exports.DataType.String, name: 'fontfile'\n          }));\n          this.properties.push(propertyInstance({\n              custom: true, type: exports.DataType.String, name: 'textfile'\n          }));\n          this.properties.push(propertyInstance({\n              custom: true, type: exports.DataType.Boolean, name: 'stretch'\n          }));\n          this.properties.push(propertyInstance({\n              tweenable: true, custom: true, type: exports.DataType.Number, name: 'height'\n          }));\n          this.properties.push(propertyInstance({\n              tweenable: true, custom: true, type: exports.DataType.Number, name: 'width'\n          }));\n          this.properties.push(propertyInstance({\n              custom: true, type: exports.DataType.Number, name: 'intrinsicHeight'\n          }));\n          this.properties.push(propertyInstance({\n              custom: true, type: exports.DataType.Number, name: 'intrinsicWidth'\n          }));\n          this.properties.push(propertyInstance({\n              tweenable: true, custom: true, type: exports.DataType.Number, name: 'x'\n          }));\n          this.properties.push(propertyInstance({\n              tweenable: true, custom: true, type: exports.DataType.Number, name: 'y'\n          }));\n          this.properties.push(propertyInstance({\n              tweenable: true, custom: true, type: exports.DataType.String, name: 'color'\n          }));\n          this.populateParametersFromProperties();\n      }\n      colorCommandFilter(dimensions, videoRate = 0, duration = 0, color = colorWhiteTransparent) {\n          const { width, height } = dimensions;\n          const transparentFilter = 'color';\n          const transparentId = idGenerate(transparentFilter);\n          const object = { color, size: `${width}x${height}` };\n          if (videoRate)\n              object.rate = videoRate;\n          if (duration)\n              object.duration = duration;\n          const commandFilter = {\n              inputs: [], ffmpegFilter: transparentFilter,\n              options: object,\n              outputs: [transparentId]\n          };\n          return commandFilter;\n      }\n      commandFilters(args) {\n          const commandFilters = [];\n          const { filter, duration, videoRate, filterInput: contentOutput } = args;\n          const color = filter.value('color');\n          const x = filter.value('x');\n          const y = filter.value('y');\n          const textfile = filter.value('textfile');\n          const fontfile = filter.value('fontfile');\n          const height = filter.value('height');\n          const width = filter.value('width');\n          const stretch = !!filter.value('stretch');\n          const intrinsicWidth = filter.value('intrinsicWidth');\n          const intrinsicHeight = filter.value('intrinsicHeight');\n          assertPopulatedString(textfile);\n          assertPopulatedString(fontfile);\n          assertNumber(height);\n          assertNumber(width);\n          assertNumber(intrinsicWidth);\n          assertNumber(intrinsicHeight);\n          assertNumber(x);\n          assertNumber(y);\n          assertPopulatedString(color, 'color');\n          const xEnd = filter.value(`x${PropertyTweenSuffix}`);\n          const yEnd = filter.value(`y${PropertyTweenSuffix}`);\n          const colorEnd = duration ? filter.value(`color${PropertyTweenSuffix}`) : undefined;\n          const tweeningColor = isPopulatedString(colorEnd) && color !== colorEnd;\n          const { ffmpegFilter } = this;\n          const drawtextId = idGenerate(ffmpegFilter);\n          const foreColor = (tweeningColor || contentOutput) ? colorWhite : color;\n          let backColor = colorBlack;\n          if (!contentOutput) {\n              backColor = tweeningColor ? colorBlackTransparent : colorWhiteTransparent;\n          }\n          const size = { width, height };\n          const sizeEnd = { ...size };\n          if (duration) {\n              const heightEnd = filter.value(`height${PropertyTweenSuffix}`) || 0;\n              const widthEnd = filter.value(`width${PropertyTweenSuffix}`) || 0;\n              if (isAboveZero(widthEnd))\n                  sizeEnd.width = widthEnd;\n              if (isAboveZero(heightEnd))\n                  sizeEnd.height = heightEnd;\n          }\n          const ratio = intrinsicWidth / intrinsicHeight;\n          const maxSize = tweenMaxSize(size, sizeEnd);\n          const calculatedWidth = Math.round(ratio * maxSize.height);\n          //stretch ? { width: Math.round(intrinsicWidth / 100), height: Math.round(intrinsicHeight / 100) } : maxSize\n          if (calculatedWidth > maxSize.width)\n              maxSize.width = calculatedWidth;\n          let scaling = stretch || !sizesEqual(size, sizeEnd);\n          const scaleOptions = {};\n          const textOptions = {\n              fontsize: maxSize.height, fontfile, textfile,\n              x: Math.ceil(isNumber(xEnd) ? Math.max(x, xEnd) : x),\n              y: Math.ceil(isNumber(yEnd) ? Math.max(y, yEnd) : y),\n              // fix_bounds: 1,\n          };\n          // console.log(this.constructor.name, \"commandFilters\", colorSize, maxSize, size, sizeEnd)\n          const position = tweenPosition(videoRate, duration);\n          if (tweeningColor) {\n              const alpha = color.length > 7;\n              const fromColor = alpha ? colorToRgba(color) : colorToRgb(color);\n              const toColor = alpha ? colorToRgba(colorEnd) : colorToRgb(colorEnd);\n              const keys = alpha ? colorRgbaKeys : colorRgbKeys;\n              const calcs = keys.map(key => {\n                  const from = fromColor[key];\n                  const to = toColor[key];\n                  return from === to ? from : `${from}+(${to - from}*${position})`;\n              });\n              const calls = calcs.map(calc => ['eif', calc, 'x', 2].join(':'));\n              const expressions = calls.map(call => `%{${call}}`);\n              textOptions.fontcolor_expr = `#${expressions.join('')}`;\n          }\n          else\n              textOptions.fontcolor = foreColor;\n          const colorCommand = this.colorCommandFilter(maxSize, videoRate, duration, backColor);\n          commandFilters.push(colorCommand);\n          let filterInput = arrayLast(colorCommand.outputs);\n          // console.log(this.constructor.name, \"commandFilters\", scaling, stretch)\n          if (scaling) {\n              scaleOptions.width = stretch ? tweenOption(width, sizeEnd.width, position, true) : -1;\n              scaleOptions.height = tweenOption(height, sizeEnd.height, position, true);\n              if (!(isNumber(scaleOptions.width) && isNumber(scaleOptions.height))) {\n                  scaleOptions.eval = 'frame';\n              }\n          }\n          const drawtextFilter = {\n              inputs: [filterInput], ffmpegFilter,\n              options: textOptions, outputs: [drawtextId]\n          };\n          commandFilters.push(drawtextFilter);\n          filterInput = drawtextId;\n          if (!contentOutput) {\n              const formatFilter = 'format';\n              const formatId = idGenerate(formatFilter);\n              const formatCommandFilter = {\n                  inputs: [filterInput], ffmpegFilter: formatFilter,\n                  options: { pix_fmts: 'yuva420p' }, outputs: [formatId]\n              };\n              commandFilters.push(formatCommandFilter);\n              filterInput = formatId;\n          }\n          if (scaling) {\n              const scaleFilter = 'scale';\n              const scaleFilterId = idGenerate(scaleFilter);\n              const scaleCommandFilter = {\n                  inputs: [filterInput], ffmpegFilter: scaleFilter,\n                  options: scaleOptions,\n                  outputs: [scaleFilterId]\n              };\n              commandFilters.push(scaleCommandFilter);\n              filterInput = scaleFilterId;\n          }\n          return commandFilters;\n      }\n      _ffmpegFilter = 'drawtext';\n  }\n\n  const FilterIdPrefix = `${IdPrefix}filter.`;\n  const filterDefinition = (object) => {\n      const { id } = object;\n      assertPopulatedString(id);\n      return new FilterDefinitionClass(object);\n  };\n  const filterDefinitionFromId = (id) => {\n      const qualifiedId = id.includes('.') ? id : `${FilterIdPrefix}${id}`;\n      const definition = Filters[qualifiedId];\n      if (definition)\n          return definition;\n      throw new Error(`NEW FILTER ${id} ${qualifiedId}`);\n  };\n  const filterInstance = (object) => {\n      const { id } = object;\n      if (!id)\n          return errorThrow(ErrorName.FilterId);\n      const definition = filterDefinitionFromId(id);\n      return definition.instanceFromObject(object);\n  };\n  const filterFromId = (id) => {\n      const definition = filterDefinitionFromId(id);\n      return definition.instanceFromObject({ id });\n  };\n  (() => {\n      const filters = {\n          alphamerge: AlphamergeFilter,\n          chromakey: ChromaKeyFilter,\n          colorchannelmixer: ColorChannelMixerFilter,\n          color: ColorFilter,\n          colorize: ColorizeFilter,\n          convolution: ConvolutionFilter,\n          crop: CropFilter,\n          fps: FpsFilter,\n          opacity: OpacityFilter,\n          overlay: OverlayFilter,\n          scale: ScaleFilter,\n          setpts: SetptsFilter,\n          setsar: SetsarFilter,\n          trim: TrimFilter,\n          text: TextFilter,\n      };\n      Object.entries(filters).forEach(([unqualifiedId, klass]) => {\n          const id = `${FilterIdPrefix}${unqualifiedId}`;\n          Filters[id] = new klass({ id });\n      });\n  })();\n\n  function TweenableMixin(Base) {\n      return class extends Base {\n          constructor(...args) {\n              super(...args);\n              const [object] = args;\n              const { container } = object;\n              if (container)\n                  this.container = true;\n          }\n          alphamergeCommandFilters(args) {\n              const commandFilters = [];\n              const { videoRate, outputSize: rect, track, filterInput } = args;\n              assertPopulatedString(filterInput);\n              assertAboveZero(videoRate);\n              assertSize(rect);\n              const chainInput = `content-${track}`;\n              const filterArgs = {\n                  videoRate: 0, duration: 0, filterInput, chainInput\n              };\n              const { alphamergeFilter } = this;\n              commandFilters.push(...alphamergeFilter.commandFilters(filterArgs));\n              return commandFilters;\n          }\n          _alphamergeFilter;\n          get alphamergeFilter() { return this._alphamergeFilter ||= filterFromId('alphamerge'); }\n          amixCommandFilters(args) {\n              const { chainInput, filterInput } = args;\n              assertPopulatedString(chainInput);\n              assertPopulatedString(filterInput);\n              const amixFilter = 'amix';\n              // const amixId = idGenerate(amixFilter)\n              const commandFilters = [];\n              const commandFilter = {\n                  inputs: [chainInput, filterInput],\n                  ffmpegFilter: amixFilter,\n                  options: { normalize: 0 }, outputs: []\n              };\n              commandFilters.push(commandFilter);\n              return commandFilters;\n          }\n          canColor(args) { return false; }\n          canColorTween(args) { return false; }\n          _clip;\n          get clip() { return this._clip; }\n          set clip(value) { this._clip = value; }\n          get clipped() { return !!this._clip; }\n          colorBackCommandFilters(args, output) {\n              const { contentColors = [], videoRate, outputSize, duration } = args;\n              assertSize(outputSize);\n              const evenSize = sizeEven(outputSize);\n              const [color = colorBlackOpaque, colorEnd = colorBlackOpaque] = contentColors;\n              const outputString = output || idGenerate('back');\n              const { colorFilter } = this;\n              const colorArgs = { videoRate, duration };\n              colorFilter.setValue(color, 'color');\n              colorFilter.setValue(colorEnd, `color${PropertyTweenSuffix}`);\n              colorFilter.setValue(evenSize.width, 'width');\n              colorFilter.setValue(evenSize.height, 'height');\n              colorFilter.setValue(evenSize.width, `width${PropertyTweenSuffix}`);\n              colorFilter.setValue(evenSize.height, `height${PropertyTweenSuffix}`);\n              const commandFilters = colorFilter.commandFilters(colorArgs);\n              if (sizesEqual(evenSize, outputSize)) {\n                  arrayLast(commandFilters).outputs = [outputString];\n              }\n              else {\n                  const filterInput = arrayLast(arrayLast(commandFilters).outputs);\n                  assertPopulatedString(filterInput, 'crop input');\n                  const cropFilter = 'crop';\n                  // const cropId = idGenerate(cropFilter)\n                  const cropCommandFilter = {\n                      inputs: [filterInput], ffmpegFilter: cropFilter,\n                      options: { w: outputSize.width, h: outputSize.height, exact: 1 },\n                      outputs: [outputString]\n                  };\n                  commandFilters.push(cropCommandFilter);\n              }\n              return commandFilters;\n          }\n          _colorFilter;\n          get colorFilter() { return this._colorFilter ||= filterFromId('color'); }\n          commandFilters(args, tweening, container = false) {\n              const commandFilters = [];\n              const { filterInput: input = '' } = args;\n              let filterInput = input;\n              // console.log(this.constructor.name, \"commandFilters\", container)\n              const initialFilters = this.initialCommandFilters(args, tweening, container);\n              if (initialFilters.length) {\n                  commandFilters.push(...initialFilters);\n                  filterInput = arrayLast(arrayLast(initialFilters).outputs);\n              }\n              if (container)\n                  commandFilters.push(...this.containerCommandFilters({ ...args, filterInput }, tweening));\n              else\n                  commandFilters.push(...this.contentCommandFilters({ ...args, filterInput }, tweening));\n              return commandFilters;\n          }\n          container = false;\n          containerColorCommandFilters(args) {\n              const commandFilters = [];\n              const { contentColors: colors = [], containerRects, videoRate, duration } = args;\n              assertArray(containerRects, 'containerRects');\n              const [rect, rectEnd] = containerRects;\n              const colorArgs = { videoRate, duration };\n              const { colorFilter } = this;\n              const [color, colorEnd] = colors;\n              colorFilter.setValue(color || colorWhite, 'color');\n              colorFilter.setValue(colorEnd, `color${PropertyTweenSuffix}`);\n              colorFilter.setValue(rect.width, 'width');\n              colorFilter.setValue(rect.height, 'height');\n              colorFilter.setValue(rectEnd.width, `width${PropertyTweenSuffix}`);\n              colorFilter.setValue(rectEnd.height, `height${PropertyTweenSuffix}`);\n              commandFilters.push(...colorFilter.commandFilters(colorArgs));\n              return commandFilters;\n          }\n          containerCommandFilters(args, tweening) {\n              // console.log(this.constructor.name, \"containerCommandFilters returning empty\")\n              return [];\n          }\n          containerFinalCommandFilters(args) {\n              return [];\n          }\n          contentCommandFilters(args, tweening) {\n              // console.log(this.constructor.name, \"contentCommandFilters returning empty\")\n              return [];\n          }\n          copyCommandFilter(input, track, id = 'content') {\n              const contentOutput = `${id}-${track}`;\n              const commandFilter = {\n                  inputs: [input], ffmpegFilter: 'copy', options: {}, outputs: [contentOutput]\n              };\n              return commandFilter;\n          }\n          _cropFilter;\n          get cropFilter() { return this._cropFilter ||= filterFromId('crop'); }\n          definitionTime(mashTime, clipRange) {\n              const { fps: quantize, startTime, endTime } = clipRange;\n              const scaledTime = mashTime.scaleToFps(quantize); // may have fps higher than quantize and time.fps\n              const frame = Math.max(Math.min(scaledTime.frame, endTime.frame), startTime.frame);\n              return scaledTime.withFrame(frame - startTime.frame);\n          }\n          frames(quantize) {\n              return timeFromArgs(Default.duration, quantize).frame;\n          }\n          fileCommandFiles(graphFileArgs) {\n              const commandFiles = [];\n              const files = this.graphFiles(graphFileArgs);\n              let inputCount = 0;\n              commandFiles.push(...files.map((graphFile, index) => {\n                  const { input } = graphFile;\n                  const inputId = (index && input) ? `${this.id}-${inputCount}` : this.id;\n                  const commandFile = { ...graphFile, inputId };\n                  if (input)\n                      inputCount++;\n                  return commandFile;\n              }));\n              return commandFiles;\n          }\n          graphFiles(args) { return this.definition.graphFiles(args); }\n          hasIntrinsicSizing = false;\n          hasIntrinsicTiming = false;\n          initialCommandFilters(args, tweening, container = false) {\n              return errorThrow(ErrorName.Unimplemented);\n          }\n          intrinsicRect(editing = false) {\n              return errorThrow(ErrorName.Unimplemented);\n          }\n          intrinsicsKnown(options) { return true; }\n          intrinsicGraphFile(options) {\n              const { editing, size, duration } = options;\n              const clipTime = timeRangeFromArgs();\n              const graphFileArgs = {\n                  editing, time: clipTime.startTime, clipTime, quantize: clipTime.fps,\n                  visible: size, audible: duration,\n              };\n              const [graphFile] = this.graphFiles(graphFileArgs);\n              assertObject(graphFile, 'graphFile');\n              return graphFile;\n          }\n          get isDefault() { return false; }\n          loadPromise(args) {\n              return this.definition.loadPromise(args);\n          }\n          mutable() { return false; }\n          overlayCommandFilters(bottomInput, topInput, alpha) {\n              assertPopulatedString(bottomInput, 'bottomInput');\n              assertPopulatedString(topInput, 'topInput');\n              const commandFilters = [];\n              const overlayArgs = {\n                  filterInput: topInput, chainInput: bottomInput, videoRate: 0, duration: 0\n              };\n              const { overlayFilter } = this;\n              if (alpha)\n                  overlayFilter.setValue('yuv420p10', 'format');\n              overlayFilter.setValue(0, 'x');\n              overlayFilter.setValue(0, 'y');\n              commandFilters.push(...overlayFilter.commandFilters(overlayArgs));\n              const commandFilter = arrayLast(commandFilters);\n              commandFilter.outputs = [idGenerate(topInput)];\n              return commandFilters;\n          }\n          _overlayFilter;\n          get overlayFilter() { return this._overlayFilter ||= filterFromId('overlay'); }\n          preloadUrls(args) { return []; }\n          scaleCommandFilters(args) {\n              const { time, containerRects, filterInput: input, videoRate } = args;\n              const filterInput = input;\n              assertPopulatedString(filterInput, 'filterInput');\n              assertArray(containerRects, 'containerRects');\n              const [rect, rectEnd] = containerRects;\n              assertRect(rect);\n              assertRect(rectEnd);\n              const duration = isTimeRange(time) ? time.lengthSeconds : 0;\n              // console.log(this.constructor.name, \"scaleCommandFilters\", containerRects, duration)\n              const commandFilters = [];\n              const { scaleFilter } = this;\n              const filterCommandFilterArgs = {\n                  duration, videoRate, filterInput\n              };\n              scaleFilter.setValue(rect.width, 'width');\n              scaleFilter.setValue(rect.height, 'height');\n              scaleFilter.setValue(rectEnd.width, `width${PropertyTweenSuffix}`);\n              scaleFilter.setValue(rectEnd.height, `height${PropertyTweenSuffix}`);\n              commandFilters.push(...scaleFilter.commandFilters(filterCommandFilterArgs));\n              return commandFilters;\n          }\n          _scaleFilter;\n          get scaleFilter() { return this._scaleFilter ||= filterFromId('scale'); }\n          selectables() { return [this, ...this.clip.selectables()]; }\n          selectType = exports.SelectType.None;\n          selectedItems(actions) {\n              const selectedItems = [];\n              const { container, clip, selectType, definition } = this;\n              // add contentId or containerId from target, as if it were my property \n              const { id: undoValue } = definition;\n              const { timing, sizing, track } = clip;\n              const { media } = track.mash.editor;\n              const dataType = container ? exports.DataType.ContainerId : exports.DataType.ContentId;\n              const property = clip.properties.find(property => property.type === dataType);\n              assertProperty(property);\n              const { name } = property;\n              const undoValues = { timing, sizing, [name]: undoValue };\n              const values = { ...undoValues };\n              const relevantTiming = container ? exports.Timing.Container : exports.Timing.Content;\n              const relevantSizing = container ? exports.Sizing.Container : exports.Sizing.Content;\n              const timingBound = timing === relevantTiming;\n              const sizingBound = sizing === relevantSizing;\n              selectedItems.push({\n                  selectType, property, value: undoValue,\n                  changeHandler: (property, redoValue) => {\n                      assertPopulatedString(redoValue);\n                      const redoValues = { ...values, [name]: redoValue };\n                      if (timingBound || sizingBound) {\n                          const newDefinition = media.fromId(redoValue);\n                          const { type } = newDefinition;\n                          if (timingBound && !isTimingMediaType(type)) {\n                              redoValues.timing = exports.Timing.Custom;\n                          }\n                          if (sizingBound && !isSizingMediaType(type)) {\n                              redoValues.sizing = container ? exports.Sizing.Content : exports.Sizing.Container;\n                          }\n                      }\n                      const actionObject = {\n                          type: exports.ActionType.ChangeMultiple,\n                          property, target: clip, redoValues, undoValues\n                      };\n                      actions.create(actionObject);\n                  },\n              });\n              // add my actual properties\n              const { properties } = this;\n              const props = properties.filter(property => this.selectedProperty(property));\n              props.forEach(property => {\n                  selectedItems.push(...this.selectedProperties(actions, property));\n              });\n              return selectedItems;\n          }\n          selectedProperties(actions, property) {\n              const properties = [];\n              const { name, tweenable, type: dataType } = property;\n              const { selectType } = this;\n              const undoValue = this.value(name);\n              const type = dataType === exports.DataType.Frame ? exports.ActionType.ChangeFrame : exports.ActionType.Change;\n              const selectedProperty = {\n                  selectType, property, value: undoValue,\n                  changeHandler: (property, redoValue) => {\n                      assertPopulatedString(property);\n                      actions.create({ type, property, target: this, redoValue, undoValue });\n                  }\n              };\n              // console.log(this.constructor.name, \"selectedProperties\", name)\n              properties.push(selectedProperty);\n              if (tweenable) {\n                  const tweenName = [name, PropertyTweenSuffix].join('');\n                  const undoValue = this.value(tweenName);\n                  const selectedPropertEnd = {\n                      selectType, property, value: undoValue, name: tweenName,\n                      changeHandler: (property, redoValue) => {\n                          actions.create({ property, target: this, redoValue, undoValue });\n                      }\n                  };\n                  // console.log(this.constructor.name, \"selectedProperties\", tweenName)\n                  properties.push(selectedPropertEnd);\n              }\n              return properties;\n          }\n          selectedProperty(property) {\n              const { name } = property;\n              switch (name) {\n                  case 'muted': return this.mutable();\n                  case 'opacity': return this.container;\n              }\n              return true;\n          }\n          tween(keyPrefix, time, range) {\n              const value = this.value(keyPrefix);\n              const valueEnd = this.value(`${keyPrefix}${PropertyTweenSuffix}`);\n              if (isUndefined(valueEnd))\n                  return value;\n              const { frame: rangeFrame, frames } = range;\n              const { frame: timeFrame } = time;\n              const frame = timeFrame - rangeFrame;\n              if (isNumber(value)) {\n                  assertNumber(valueEnd);\n                  return tweenNumberStep(value, valueEnd, frame, frames);\n              }\n              assertPopulatedString(value);\n              assertPopulatedString(valueEnd);\n              return tweenColorStep(value, valueEnd, frame, frames);\n          }\n          tweenPoints(time, range) {\n              const [x, xEndOrNot] = this.tweenValues('x', time, range);\n              const [y, yEndOrNot] = this.tweenValues('y', time, range);\n              assertNumber(x);\n              assertNumber(y);\n              const point = { x, y };\n              const tweenPoint = { x: xEndOrNot, y: yEndOrNot };\n              return [point, tweenOverPoint(point, tweenPoint)];\n          }\n          tweenRects(time, range) {\n              const [size, sizeEnd] = this.tweenSizes(time, range);\n              const [point, pointEnd] = this.tweenPoints(time, range);\n              return [{ ...point, ...size }, { ...pointEnd, ...sizeEnd }];\n          }\n          tweenSizes(time, range) {\n              const [width, widthEndOrNot] = this.tweenValues('width', time, range);\n              const [height, heightEndOrNot] = this.tweenValues('height', time, range);\n              assertNumber(width);\n              assertNumber(height);\n              const size = { width, height };\n              const tweenSize = { width: widthEndOrNot, height: heightEndOrNot };\n              return [size, tweenOverSize(size, tweenSize)];\n          }\n          tweenValues(key, time, range) {\n              const values = [];\n              const isRange = isTimeRange(time);\n              values.push(this.tween(key, isRange ? time.startTime : time, range));\n              if (isRange)\n                  values.push(this.tween(key, time.endTime, range));\n              return values;\n          }\n          visibleCommandFiles(args) {\n              const graphFileArgs = {\n                  ...args, audible: false, visible: true\n              };\n              const files = this.fileCommandFiles(graphFileArgs);\n              // console.log(this.constructor.name, \"visibleCommandFiles\", files)\n              return files;\n          }\n      };\n  }\n\n  const isVideoMedia = (value) => {\n      return isMedia(value) && value.type === VideoType;\n  };\n  function assertVideoMedia(value) {\n      if (!isVideoMedia(value))\n          throw new Error('expected VideoMedia');\n  }\n  const isVideo = (value) => {\n      return isMediaInstance(value) && value.definition.type === VideoType;\n  };\n  function assertVideo(value) {\n      if (!isVideo(value))\n          throw new Error('expected Video');\n  }\n\n  const DecodeType = 'decode';\n  const EncodeType = 'encode';\n  const TranscodeType = 'transcode';\n  const ProtocolType = 'protocol';\n  const LanguageType = 'language';\n  const FilterType = 'filter';\n  const ResolveType = 'resolve';\n\n  const Plugins = {\n      [DecodeType]: {},\n      [EncodeType]: {},\n      [FilterType]: {},\n      [LanguageType]: {},\n      [ProtocolType]: {},\n      [ResolveType]: {},\n      [TranscodeType]: {},\n  };\n\n  const isPlugin = (value) => {\n      return isObject(value) && \"type\" in value && isPopulatedString(value.type);\n  };\n  function assertPlugin(value, name) {\n      if (!isPlugin(value))\n          errorThrow(value, 'Plugin', name);\n  }\n  const pluginId = (id) => id.replace(/[^a-z]/g, '');\n  const plugin = (pluginType, id) => {\n      const plugins = Plugins[pluginType];\n      const safeId = pluginId(id);\n      const plugin = plugins[safeId];\n      assertPlugin(plugin, safeId);\n      return plugin;\n  };\n  const pluginPromise = (pluginType, id) => {\n      const plugins = Plugins[pluginType];\n      const safeId = pluginId(id);\n      if (plugins[safeId])\n          return Promise.resolve(plugins[safeId]);\n      return import(`@moviemasher/${pluginType}-${safeId}`).then(() => {\n          return plugin(pluginType, id);\n      });\n  };\n\n  const HttpProtocol = 'http';\n  const HttpsProtocol = 'https';\n  const BlobProtocol = 'blob';\n  const FileProtocol = 'file';\n  const protocolLoadPromise = (protocol) => {\n      return pluginPromise(ProtocolType, protocol).then(plugin => plugin);\n  };\n\n  const makeRequestEndpointAbsolute = (request) => {\n      const { endpoint } = request;\n      assertEndpoint(endpoint);\n      if (!endpointIsAbsolute(endpoint))\n          request.endpoint = urlEndpoint(endpoint);\n  };\n  const requestExtension = (request) => {\n      const { endpoint } = request;\n      assertEndpoint(endpoint);\n      const { pathname = '' } = endpoint;\n      const last = pathname.split('.').pop() || '';\n      return last.trim();\n  };\n  const requestProtocol = (request) => {\n      const { endpoint } = request;\n      assertEndpoint(endpoint);\n      const { protocol } = endpoint;\n      assertPopulatedString(protocol);\n      return protocol;\n  };\n  const requestAudioPromise = (request) => {\n      const { response } = request;\n      if (isClientAudio(response))\n          return Promise.resolve({ data: response });\n      makeRequestEndpointAbsolute(request);\n      return requestProtocolPromise(request).then(protocolPlugin => protocolPlugin.promise(request, AudioType).then(onError => {\n          setRequestResponse(request, onError);\n          return onError;\n      }));\n  };\n  const requestFontPromise = (request) => {\n      const { response } = request;\n      if (isClientFont(response))\n          return Promise.resolve({ data: response });\n      makeRequestEndpointAbsolute(request);\n      return requestProtocolPromise(request).then(protocolPlugin => protocolPlugin.promise(request, FontType).then(onError => {\n          setRequestResponse(request, onError);\n          return onError;\n      }));\n  };\n  const requestImagePromise = (request) => {\n      const { response } = request;\n      if (isClientImage(response))\n          return Promise.resolve({ data: response });\n      makeRequestEndpointAbsolute(request);\n      return requestProtocolPromise(request).then(protocolPlugin => protocolPlugin.promise(request, ImageType).then(onError => {\n          setRequestResponse(request, onError);\n          return onError;\n      }));\n  };\n  const requestProtocolPromise = (request) => {\n      return protocolLoadPromise(requestProtocol(request));\n  };\n  const setRequestResponse = (request, orError) => {\n      if (!isDefiniteError(orError))\n          request.response = orError.data;\n  };\n  const requestVideoPromise = (request) => {\n      const { response } = request;\n      if (isClientVideo(response))\n          return Promise.resolve({ data: response });\n      makeRequestEndpointAbsolute(request);\n      return requestProtocolPromise(request).then(protocolPlugin => protocolPlugin.promise(request, VideoType).then(onError => {\n          setRequestResponse(request, onError);\n          return onError;\n      }));\n  };\n  const requestRecordPromise = (request, useResponse = false) => {\n      if (useResponse) {\n          const { response } = request;\n          if (isJsonRecord(response))\n              return Promise.resolve({ data: response });\n      }\n      makeRequestEndpointAbsolute(request);\n      return requestProtocolPromise(request).then(protocolPlugin => protocolPlugin.promise(request, RecordType).then(onError => {\n          setRequestResponse(request, onError);\n          return onError;\n      }));\n  };\n  const requestRecordsPromise = (request, useResponse = false) => {\n      if (useResponse) {\n          const { response } = request;\n          if (isJsonRecords(response))\n              return Promise.resolve({ data: response });\n      }\n      makeRequestEndpointAbsolute(request);\n      return requestProtocolPromise(request).then(protocolPlugin => protocolPlugin.promise(request, RecordsType).then(onError => {\n          setRequestResponse(request, onError);\n          return onError;\n      }));\n  };\n  const requestRawPromise = (request, type) => {\n      switch (type) {\n          case AudioType: return requestAudioPromise(request);\n          case ImageType: return requestImagePromise(request);\n          case VideoType: return requestVideoPromise(request);\n      }\n  };\n  const requestMediaPromise = (request, type) => {\n      switch (type) {\n          case AudioType:\n          case ImageType:\n          case VideoType: return requestRawPromise(request, type);\n          case FontType: return requestFontPromise(request);\n          // default: return requestRecordPromise(request)\n      }\n      return errorPromise(ErrorName.Type);\n  };\n  const requestPromise = (request, type) => {\n      makeRequestEndpointAbsolute(request);\n      return requestProtocolPromise(request).then(protocolPlugin => protocolPlugin.promise(request, type));\n  };\n\n  function ContainerMixin(Base) {\n      return class extends Base {\n          constructor(...args) {\n              super(...args);\n              const [object] = args;\n              const { container } = this;\n              if (container) {\n                  this.addProperties(object, propertyInstance({\n                      name: 'x', type: exports.DataType.Percent, defaultValue: 0.5,\n                      group: exports.DataGroup.Point, tweenable: true,\n                  }));\n                  this.addProperties(object, propertyInstance({\n                      name: 'y', type: exports.DataType.Percent, defaultValue: 0.5,\n                      group: exports.DataGroup.Point, tweenable: true,\n                  }));\n                  // offN, offS, offE, offW\n                  Directions.forEach(direction => {\n                      this.addProperties(object, propertyInstance({\n                          name: `off${direction}`, type: exports.DataType.Boolean,\n                          group: exports.DataGroup.Point,\n                      }));\n                  });\n                  this.addProperties(object, propertyInstance({\n                      tweenable: true, name: 'opacity',\n                      type: exports.DataType.Percent, defaultValue: 1.0,\n                      group: exports.DataGroup.Opacity,\n                  }));\n              }\n          }\n          _colorizeFilter;\n          get colorizeFilter() { return this._colorizeFilter ||= filterFromId('colorize'); }\n          colorizeCommandFilters(args) {\n              const { contentColors: colors, videoRate, filterInput, time } = args;\n              assertPopulatedArray(colors);\n              const duration = isTimeRange(time) ? time.lengthSeconds : 0;\n              const { colorizeFilter } = this;\n              const filterArgs = {\n                  videoRate, duration, filterInput\n              };\n              const [color, colorEnd] = colors;\n              colorizeFilter.setValue(color, 'color');\n              colorizeFilter.setValue(colorEnd, `color${PropertyTweenSuffix}`);\n              return colorizeFilter.commandFilters(filterArgs);\n          }\n          colorMaximize = false;\n          stylesSrcPromise(zeroRect, definitionTime) {\n              const { type, definition } = this;\n              const types = [];\n              if (type === ImageType)\n                  types.push(type);\n              else\n                  types.push(SequenceType, VideoType);\n              const transcoding = definition.preferredTranscoding(...types);\n              const { type: transcodingType } = transcoding;\n              if (transcodingType === SequenceType) {\n                  assertVideoMedia(definition);\n                  return definition.loadedImagePromise(definitionTime, sizeCopy(zeroRect)).then(image => (image.src));\n              }\n              const imageTranscoding = definition.preferredTranscoding(ImageType);\n              const { request } = imageTranscoding;\n              return requestImagePromise(request).then(orError => {\n                  if (isDefiniteError(orError))\n                      return errorThrow(orError.error);\n                  const { data: clientImage } = orError;\n                  assertClientImage(clientImage);\n                  return clientImage.src;\n              });\n          }\n          stylesPromise(zeroRect, definitionTime) {\n              return this.stylesSrcPromise(zeroRect, definitionTime).then(src => {\n                  const styles = [];\n                  styles.push(`mask-image: url(${src})`);\n                  styles.push('mask-repeat: no-repeat');\n                  styles.push('mask-mode: luminance');\n                  styles.push(`mask-size: ${zeroRect.width}px ${zeroRect.height}px`);\n                  styles.push(`mask-position: ${zeroRect.x}px ${zeroRect.y}px`);\n                  return styles;\n              });\n          }\n          containedVideo(video, containerRect, size, time, range) {\n              const x = Math.round(Number(video.getAttribute('x')));\n              const y = Math.round(Number(video.getAttribute('y')));\n              const containerPoint = pointCopy(containerRect);\n              containerPoint.x -= x;\n              containerPoint.y -= y;\n              const zeroRect = { ...containerPoint, ...sizeCopy(containerRect) };\n              const updatableContainer = !this.definition.isVector;\n              const promise = updatableContainer ? this.stylesPromise(zeroRect, this.definitionTime(time, range)) : Promise.resolve([]);\n              return promise.then(styles => {\n                  const items = [];\n                  const { div } = this;\n                  styles.push(`left: ${x}px`);\n                  styles.push(`top: ${y}px`);\n                  if (!updatableContainer) {\n                      const containerItem = this.pathElement(zeroRect);\n                      containerItem.setAttribute('fill', colorWhite);\n                      let clipId = idGenerateString();\n                      const clipElement = globalThis.document.createElementNS(NamespaceSvg, 'clipPath');\n                      svgSet(clipElement, clipId);\n                      svgAppend(clipElement, containerItem);\n                      const svg = svgSvgElement(size);\n                      svgSetChildren(svg, [svgDefsElement([clipElement])]);\n                      styles.push(`clip-path:${svgUrl(clipId)}`);\n                      items.push(svg);\n                  }\n                  div.setAttribute('style', styles.join(';') + ';');\n                  svgSetChildren(div, [video]);\n                  items.push(div);\n                  return items;\n              });\n          }\n          previewItemsPromise(content, containerRect, size, time, range, component) {\n              const contentPromise = content.contentPreviewItemPromise(containerRect, time, range, component);\n              const containedPromise = contentPromise.then(contentItem => {\n                  assertObject(contentItem, 'contentItem');\n                  if (isClientVideo(contentItem)) {\n                      assertTrue(component === exports.Component.Player, 'video in player');\n                      return this.containedVideo(contentItem, containerRect, size, time, range);\n                  }\n                  const containerPromise = this.containerSvgItemPromise(containerRect, time, range, component);\n                  const updatableContainer = !this.definition.isVector;\n                  return containerPromise.then(containerItem => {\n                      const defs = [];\n                      // TODO: make luminance a property of container...\n                      const luminance = true;\n                      const updatableContent = !content.definition.isVector;\n                      defs.push(containerItem);\n                      let containerId = idGenerateString();\n                      if (updatableContainer && component === exports.Component.Player) {\n                          // container is image/video so we need to add a polygon for hover\n                          const polygonElement = svgPolygonElement(containerRect, '', 'transparent', containerId);\n                          polygonElement.setAttribute('vector-effect', 'non-scaling-stroke;');\n                          defs.push(polygonElement);\n                          containerId = idGenerateString();\n                      }\n                      containerItem.setAttribute('id', containerId);\n                      const group = svgGroupElement();\n                      svgAppend(group, [svgPolygonElement(containerRect, '', 'transparent'), contentItem]);\n                      const items = [group];\n                      svgAddClass(group, 'contained');\n                      const maskElement = svgMaskElement(undefined, group, luminance);\n                      defs.push(maskElement);\n                      const useContainerInMask = svgUseElement(containerId);\n                      maskElement.appendChild(svgPolygonElement(size, '', 'black'));\n                      maskElement.appendChild(useContainerInMask);\n                      if (!updatableContainer) {\n                          containerItem.setAttribute('vector-effect', 'non-scaling-stroke;');\n                          useContainerInMask.setAttribute('fill', colorWhite);\n                      }\n                      const svgFilter = this.containerSvgFilter(containerItem, size, containerRect, time, range);\n                      if (svgFilter)\n                          defs.push(svgFilter);\n                      else\n                          containerItem.removeAttribute('filter');\n                      const contentSvgFilter = content.contentSvgFilter(contentItem, size, containerRect, time, range);\n                      if (contentSvgFilter)\n                          defs.push(contentSvgFilter);\n                      else\n                          contentItem.removeAttribute('filter');\n                      const useSvg = (updatableContent || updatableContainer) && component === exports.Component.Player;\n                      const svg = useSvg ? this.svgElement : svgSvgElement();\n                      svgSetChildren(svg, [svgDefsElement(defs), ...items]);\n                      svgSetDimensions(svg, size);\n                      return [svg];\n                  });\n              });\n              return containedPromise;\n          }\n          containerColorCommandFilters(args) {\n              const commandFilters = [];\n              const { contentColors, containerRects, track } = args;\n              const { colorMaximize } = this;\n              if (!colorMaximize)\n                  return super.containerColorCommandFilters(args);\n              assertPopulatedArray(contentColors);\n              const tweeningSize = !rectsEqual(...containerRects);\n              const maxSize = tweeningSize ? tweenMaxSize(...containerRects) : containerRects[0];\n              const colorArgs = {\n                  ...args, outputSize: maxSize\n              };\n              commandFilters.push(...this.colorBackCommandFilters(colorArgs, `content-${track}`));\n              return commandFilters;\n          }\n          containerCommandFilters(args, tweening) {\n              const commandFilters = [];\n              const { contentColors, filterInput: input } = args;\n              let filterInput = input;\n              // console.log(this.constructor.name, \"containerCommandFilters\", filterInput)\n              assertPopulatedString(filterInput, 'filterInput');\n              if (!contentColors?.length) {\n                  commandFilters.push(...this.alphamergeCommandFilters({ ...args, filterInput }));\n                  filterInput = arrayLast(arrayLast(commandFilters).outputs);\n              }\n              commandFilters.push(...this.containerFinalCommandFilters({ ...args, filterInput }));\n              return commandFilters;\n          }\n          containerFinalCommandFilters(args) {\n              const commandFilters = [];\n              const { filterInput: input } = args;\n              let filterInput = input;\n              assertPopulatedString(filterInput, 'filterInput');\n              const opacityFilters = this.opacityCommandFilters(args);\n              if (opacityFilters.length) {\n                  commandFilters.push(...opacityFilters);\n                  filterInput = arrayLast(arrayLast(opacityFilters).outputs);\n              }\n              commandFilters.push(...this.translateCommandFilters({ ...args, filterInput }));\n              return commandFilters;\n          }\n          containerRects(args, inRect) {\n              // console.log(this.constructor.name, \"containerRects\", inRect, args)\n              const { size, time, timeRange } = args;\n              const { lock } = this;\n              const tweenRects = this.tweenRects(time, timeRange);\n              const locked = tweenRectsLock(tweenRects, lock);\n              const { width: inWidth, height: inHeight } = inRect;\n              const ratio = ((inWidth || size.width)) / ((inHeight || size.height));\n              const [scale, scaleEnd] = locked;\n              const forcedScale = tweenScaleSizeRatioLock(scale, size, ratio, lock);\n              // console.log(this.constructor.name, \"containerRects forcedScale\", forcedScale, \"= tweenScaleSizeRatioLock(\", scale, size, ratio, lock, \")\")\n              const { directionObject } = this;\n              const transformedRect = tweenScaleSizeToRect(size, forcedScale, directionObject);\n              const tweening = !rectsEqual(scale, scaleEnd);\n              if (!tweening) {\n                  // console.log(this.constructor.name, \"containerRects !tweening\", transformedRect, locked)\n                  return [transformedRect, transformedRect];\n              }\n              const forcedScaleEnd = tweenScaleSizeRatioLock(scaleEnd, size, ratio, lock);\n              const tweenRect = tweenOverRect(forcedScale, forcedScaleEnd);\n              const tweened = tweenScaleSizeToRect(size, tweenRect, directionObject);\n              const tuple = [transformedRect, tweened];\n              return tuple;\n          }\n          containerSvgItemPromise(containerRect, time, range, component) {\n              return Promise.resolve(this.pathElement(containerRect));\n          }\n          containerSvgFilter(svgItem, outputSize, containerRect, time, clipTime) {\n              const [opacity] = this.tweenValues('opacity', time, clipTime);\n              // console.log(this.constructor.name, \"containerSvgFilters\", opacity)\n              if (!isBelowOne(opacity))\n                  return;\n              const { opacityFilter } = this;\n              opacityFilter.setValue(opacity, 'opacity');\n              return svgFilterElement(opacityFilter.filterSvgFilter(), svgItem);\n          }\n          get directions() { return Anchors; }\n          get directionObject() {\n              return Object.fromEntries(Directions.map(direction => [direction, !!this.value(`off${direction}`)]));\n          }\n          _div;\n          get div() {\n              return this._div ||= globalThis.document.createElement('div');\n          }\n          get isDefault() { return this.mediaId === DefaultContainerId; }\n          opacityCommandFilters(args) {\n              const { outputSize: outputSize, filterInput, clipTime, time, videoRate } = args;\n              assertTimeRange(clipTime);\n              const duration = isTimeRange(time) ? time.lengthSeconds : 0;\n              const commandFilters = [];\n              const filterCommandFilterArgs = {\n                  dimensions: outputSize, filterInput, videoRate, duration\n              };\n              const [opacity, opacityEnd] = this.tweenValues('opacity', time, clipTime);\n              // console.log(this.constructor.name, \"opacityCommandFilters\", opacity, opacityEnd)\n              if (isBelowOne(opacity) || (isDefined(opacityEnd) && isBelowOne(opacityEnd))) {\n                  const { opacityFilter } = this;\n                  opacityFilter.setValues({ opacity, opacityEnd });\n                  commandFilters.push(...opacityFilter.commandFilters(filterCommandFilterArgs));\n              }\n              return commandFilters;\n          }\n          _opacityFilter;\n          get opacityFilter() { return this._opacityFilter ||= filterFromId('opacity'); }\n          pathElement(rect, forecolor = 'none') {\n              return svgPolygonElement(rect, '', forecolor);\n          }\n          _svgElement;\n          get svgElement() {\n              return this._svgElement ||= svgSvgElement();\n          }\n          translateCommandFilters(args) {\n              const commandFilters = [];\n              const { outputSize, time, containerRects, chainInput, filterInput, videoRate } = args;\n              if (!chainInput)\n                  return commandFilters;\n              assertPopulatedArray(containerRects);\n              const [rect, rectEnd] = containerRects;\n              const duration = isTimeRange(time) ? time.lengthSeconds : 0;\n              const { overlayFilter } = this;\n              // overlayFilter.setValue('yuv420p10', 'format')\n              overlayFilter.setValue(rect.x, 'x');\n              overlayFilter.setValue(rect.y, 'y');\n              if (duration) {\n                  overlayFilter.setValue(rectEnd.x, `x${PropertyTweenSuffix}`);\n                  overlayFilter.setValue(rectEnd.y, `y${PropertyTweenSuffix}`);\n              }\n              const filterArgs = {\n                  dimensions: outputSize, filterInput, videoRate, duration, chainInput\n              };\n              commandFilters.push(...overlayFilter.commandFilters(filterArgs));\n              return commandFilters;\n          }\n      };\n  }\n\n  const EffectContainerWithTweenable = TweenableMixin(MediaInstanceBase);\n  const EffectContainerWithContainer = ContainerMixin(EffectContainerWithTweenable);\n  class EffectClass extends EffectContainerWithContainer {\n      commandFiles(args) {\n          const commandFiles = [];\n          const { videoRate, time } = args;\n          const duration = isTimeRange(time) ? time.lengthSeconds : 0;\n          const { filters } = this.definition;\n          const filterArgs = {\n              ...args, videoRate, duration\n          };\n          commandFiles.push(...filters.flatMap(filter => {\n              this.setFilterValues(filter);\n              return filter.commandFiles(filterArgs);\n          }));\n          return commandFiles;\n      }\n      commandFilters(args) {\n          const commandFilters = [];\n          const { videoRate, filterInput, time } = args;\n          assertPopulatedString(filterInput);\n          const duration = isTimeRange(time) ? time.lengthSeconds : 0;\n          const { filters } = this.definition;\n          const filterArgs = {\n              videoRate, duration, filterInput\n          };\n          commandFilters.push(...filters.flatMap(filter => {\n              this.setFilterValues(filter);\n              const filters = filter.commandFilters(filterArgs);\n              if (filters.length) {\n                  filterArgs.filterInput = arrayLast(arrayLast(filters).outputs);\n              }\n              return filters;\n          }));\n          return commandFilters;\n      }\n      selectables() { return [this]; }\n      selectType = exports.SelectType.None;\n      selectedItems(actions) {\n          return this.properties.map(property => {\n              const undoValue = this.value(property.name);\n              return {\n                  value: undoValue,\n                  selectType: exports.SelectType.None, property,\n                  changeHandler: (property, redoValue) => {\n                      assertPopulatedString(property);\n                      const options = { target: this, property, redoValue, undoValue };\n                      actions.create(options);\n                  }\n              };\n          });\n      }\n      setFilterValues(filter) {\n          const filterNames = filter.properties.map(property => property.name);\n          const propertyNames = this.properties.map(property => property.name);\n          const shared = propertyNames.filter(name => filterNames.includes(name));\n          shared.forEach(name => {\n              const property = this.properties.find(property => property.name === name);\n              assertProperty(property);\n              const { tweenable } = property;\n              filter.setValue(this.value(name), name);\n              if (tweenable) {\n                  const tweenName = `${name}${PropertyTweenSuffix}`;\n                  filter.setValue(this.value(tweenName), tweenName);\n              }\n          });\n      }\n      svgFilters(previewSize, containerRect, time, range) {\n          const filters = [];\n          const { filters: definitionFilters } = this.definition;\n          filters.push(...definitionFilters.flatMap(filter => {\n              this.setFilterValues(filter);\n              return filter.filterSvgFilter();\n          }));\n          return filters;\n      }\n  }\n\n  function TweenableDefinitionMixin(Base) {\n      return class extends Base {\n          constructor(...args) {\n              super(...args);\n              this.properties.push(propertyInstance({\n                  name: \"muted\", type: exports.DataType.Boolean\n              }));\n          }\n          graphFiles(args) {\n              return [];\n          }\n          loadPromise(args) {\n              return Promise.resolve();\n          }\n      };\n  }\n\n  class TranscodingClass extends RequestableClass {\n      constructor(object) {\n          super(object);\n          const { purpose } = object;\n          if (purpose)\n              this.purpose = purpose;\n          assertTranscodingType(this.type);\n      }\n      kind = '';\n      purpose = '';\n      toJSON() {\n          const { type, kind } = this;\n          return { ...super.toJSON(), type, kind };\n      }\n      unload() {\n          delete this.request.response;\n      }\n  }\n\n  const transcodingInstance = (object) => {\n      // console.log('transcodingInstance', object)\n      return new TranscodingClass(object);\n  };\n\n  class DecodingClass {\n      constructor(object) {\n          const { data, type } = object;\n          this.type = type;\n          this.data = data;\n      }\n      data;\n      type;\n  }\n\n  const decodingInstance = (object) => {\n      return new DecodingClass(object);\n  };\n\n  class MediaBase extends RequestableClass {\n      constructor(object) {\n          super(object);\n          const { decodings, transcodings, file } = object;\n          if (file)\n              this.file = file;\n          if (decodings)\n              this.decodings.push(...decodings.map(decodingInstance));\n          if (transcodings)\n              this.transcodings.push(...transcodings.map(transcodingInstance));\n          const { type } = this;\n          assertMediaType(type);\n          this.properties.push(propertyInstance({\n              name: 'label', type: exports.DataType.String, defaultValue: Default[type].label\n          }));\n      }\n      unload() {\n          throw new Error(\"Method not implemented.\");\n      }\n      definitionIcon(size) {\n          return; //errorThrow(ErrorName.Unimplemented)\n      }\n      file;\n      findTranscoding(type, ...kind) {\n          return this.transcodings.find(transcoding => {\n              if (transcoding.type !== type)\n                  return false;\n              if (!kind.length)\n                  return true;\n              return kind.includes(transcoding.kind);\n          });\n      }\n      instanceFromObject(object = {}) {\n          return new MediaInstanceBase(this.instanceArgs(object));\n      }\n      instanceArgs(object = {}) {\n          const defaults = Object.fromEntries(this.properties.map(property => ([property.name, property.defaultValue])));\n          return { ...defaults, ...object, definition: this };\n      }\n      isVector = false;\n      loadPromise(args) {\n          return errorThrow(ErrorName.Unimplemented);\n      }\n      preferredTranscoding(...types) {\n          for (const type of types) {\n              const found = this.transcodings.find(object => object.type === type);\n              if (found)\n                  return found;\n          }\n          return this;\n      }\n      serverPromise(args) {\n          if (this.serverPath)\n              return Promise.resolve();\n          const { request } = this;\n          return requestPromise(request).then(orError => {\n              if (!isDefiniteError(orError)) {\n                  const { path } = orError;\n                  this.serverPath = path;\n              }\n          });\n      }\n      toJSON() {\n          const { label, decodings, transcodings } = this;\n          return { ...super.toJSON(), label, decodings, transcodings };\n      }\n      transcodings = [];\n      properties = [];\n      decodings = [];\n      serverPath = '';\n  }\n\n  function ContainerDefinitionMixin(Base) {\n      return class extends Base {\n          constructor(...args) {\n              super(...args);\n              this.properties.push(propertyInstance({\n                  name: 'lock', type: exports.DataType.String, defaultValue: exports.Orientation.H,\n                  group: exports.DataGroup.Size,\n              }));\n          }\n          loadPromise(args) {\n              return Promise.resolve();\n          }\n          type = ImageType;\n      };\n  }\n\n  const EffectContainerDefinitionWithTweenable = TweenableDefinitionMixin(MediaBase);\n  const EffectContainerDefinitionWithContainer = ContainerDefinitionMixin(EffectContainerDefinitionWithTweenable);\n  class EffectMediaClass extends EffectContainerDefinitionWithContainer {\n      constructor(object) {\n          super(object);\n          this.properties.push(propertyInstance({ name: \"label\", defaultValue: \"\" }));\n          const { properties, filters, initializeFilter, finalizeFilter } = object;\n          if (properties?.length)\n              this.properties.push(...properties.map(property => propertyInstance({ ...property, custom: true })));\n          if (initializeFilter)\n              this.initializeFilter = filterInstance(initializeFilter);\n          if (finalizeFilter)\n              this.finalizeFilter = filterInstance(finalizeFilter);\n          if (filters)\n              this.filters.push(...filters.map(filter => filterInstance(filter)));\n      }\n      filters = [];\n      finalizeFilter;\n      initializeFilter;\n      instanceArgs(object) {\n          const args = super.instanceArgs(object);\n          args.label ||= this.label;\n          return args;\n      }\n      instanceFromObject(object) {\n          return new EffectClass(this.instanceArgs(object));\n      }\n      toJSON() {\n          const object = super.toJSON();\n          const custom = this.properties.filter(property => property.custom);\n          if (custom.length)\n              object.properties = custom;\n          if (this.filters.length)\n              object.filters = this.filters;\n          return object;\n      }\n      type = EffectType;\n  }\n\n  const label$c = \"Blur\";\n  const type$c = \"effect\";\n  const id$9 = \"com.moviemasher.effect.blur\";\n  const request$c = {\n    response: {\n      filters: [\n        {\n          id: \"com.moviemasher.filter.convolution\",\n          parameters: [\n            {\n              name: \"matrix\",\n              value: \"1,1,1,1,1,1,1,1,1\"\n            },\n            {\n              name: \"multiplier\",\n              value: \"0.11\"\n            }\n          ]\n        }\n      ]\n    }\n  };\n  var effectBlurJson = {\n    label: label$c,\n    type: type$c,\n    id: id$9,\n    request: request$c\n  };\n\n  const effectDefinition = (object) => {\n      const { id } = object;\n      assertPopulatedString(id);\n      return new EffectMediaClass({ ...object, type: EffectType });\n  };\n  const effectDefinitionFromId = (id) => {\n      const definition = MediaDefaults[EffectType].find(object => object.id === id);\n      if (definition)\n          return definition;\n      return effectDefinition({ id });\n  };\n  const effectInstance = (object) => {\n      const { mediaId = '' } = object;\n      const definition = effectDefinitionFromId(mediaId);\n      return definition.instanceFromObject(object);\n  };\n  const effectFromId = (id) => {\n      return effectDefinitionFromId(id).instanceFromObject();\n  };\n  MediaFactories[EffectType] = effectDefinition;\n  MediaDefaults[EffectType].push(effectDefinition(effectBlurJson));\n\n  const isAudio = (value) => {\n      return isContent(value) && isAudioMedia(value.definition);\n  };\n  const isAudioMedia = (value) => {\n      return isMedia(value) && value.type === AudioType;\n  };\n\n  function ContentMixin(Base) {\n      return class extends Base {\n          constructor(...args) {\n              super(...args);\n              const [object] = args;\n              const { isDefaultOrAudio, container } = this;\n              if (!(isDefaultOrAudio || container)) {\n                  this.addProperties(object, propertyInstance({\n                      name: 'x', type: exports.DataType.Percent, defaultValue: 0.5,\n                      group: exports.DataGroup.Point, tweenable: true,\n                  }));\n                  this.addProperties(object, propertyInstance({\n                      name: 'y', type: exports.DataType.Percent, defaultValue: 0.5,\n                      group: exports.DataGroup.Point, tweenable: true,\n                  }));\n                  this.addProperties(object, propertyInstance({\n                      name: 'lock', type: exports.DataType.String, defaultValue: exports.Orientation.H,\n                      group: exports.DataGroup.Size,\n                  }));\n              }\n              const { effects } = object;\n              if (effects)\n                  this.effects.push(...effects.map(effectInstance));\n          }\n          audibleCommandFiles(args) {\n              const graphFileArgs = {\n                  ...args, audible: true, visible: false\n              };\n              return this.fileCommandFiles(graphFileArgs);\n          }\n          audibleCommandFilters(args) {\n              const commandFilters = [];\n              const { time, quantize, commandFiles, clipTime } = args;\n              // console.log(this.constructor.name, \"initialCommandFilters\", time, clipTime)\n              const timeDuration = time.isRange ? time.lengthSeconds : 0;\n              const duration = timeDuration ? Math.min(timeDuration, clipTime.lengthSeconds) : 0;\n              const { id } = this;\n              // console.log(this.constructor.name, \"audibleCommandFilters calling commandFilesInput\", id)\n              let filterInput = commandFilesInput(commandFiles, id, false);\n              const trimFilter = 'atrim';\n              const trimId = idGenerate(trimFilter);\n              const trimOptions = {};\n              const { frame } = this.definitionTime(time, clipTime);\n              if (duration)\n                  trimOptions.duration = duration;\n              if (frame)\n                  trimOptions.start = timeFromArgs(frame, quantize).seconds;\n              const commandFilter = {\n                  inputs: [filterInput],\n                  ffmpegFilter: trimFilter,\n                  options: trimOptions,\n                  outputs: [trimId]\n              };\n              commandFilters.push(commandFilter);\n              filterInput = trimId;\n              const delays = (clipTime.seconds - time.seconds) * 1000;\n              if (delays) {\n                  const adelayFilter = 'adelay';\n                  const adelayId = idGenerate(adelayFilter);\n                  const adelayCommandFilter = {\n                      ffmpegFilter: adelayFilter,\n                      options: { delays, all: 1 },\n                      inputs: [filterInput], outputs: [adelayId]\n                  };\n                  commandFilters.push(adelayCommandFilter);\n                  filterInput = adelayId;\n              }\n              commandFilters.push(...this.amixCommandFilters({ ...args, filterInput }));\n              return commandFilters;\n          }\n          contentCommandFilters(args, tweening) {\n              // console.log(this.constructor.name, \"contentCommandFilters returning empty\")\n              return this.effectsCommandFilters(args);\n          }\n          contentPreviewItemPromise(containerRect, time, timeRange, component) {\n              return this.contentSvgItemPromise(containerRect, time, timeRange, component);\n          }\n          contentRects(args) {\n              const { containerRects: rects, time, timeRange, loading, editing } = args;\n              const tuple = isArray(rects) ? rects : [rects, rects];\n              if (loading && !this.intrinsicsKnown({ editing, size: true })) {\n                  return tuple;\n              }\n              const intrinsicRect = this.intrinsicRect(editing);\n              if (!sizeAboveZero(intrinsicRect))\n                  return tuple;\n              const { lock } = this;\n              const tweenRects = this.tweenRects(time, timeRange);\n              const locked = tweenRectsLock(tweenRects, lock);\n              const coverSizes = tweenCoverSizes(intrinsicRect, rects, locked);\n              const [size, sizeEnd] = coverSizes;\n              const coverPoints = tweenCoverPoints(coverSizes, rects, locked);\n              const [point, pointEnd] = coverPoints;\n              const rect = rectFromSize(size, point);\n              const rectEnd = rectFromSize(sizeEnd, pointEnd);\n              // console.log(this.constructor.name, \"contentRects\", lock, locked, isArray(rects) ? rects[0] : rects,  \"->\", rect)\n              return [rect, rectEnd];\n          }\n          contentSvgFilter(contentItem, outputSize, containerRect, time, clipTime) {\n              const { effects, isDefaultOrAudio } = this;\n              if (isDefaultOrAudio || !effects.length)\n                  return;\n              const filters = this.effects.flatMap(effect => effect.svgFilters(outputSize, containerRect, time, clipTime));\n              // const size = sizeCopy(this.contentRect(containerRect, time, clipTime))\n              const filter = svgFilterElement(filters, contentItem);\n              svgSet(filter, '200%', 'width');\n              svgSet(filter, '200%', 'height');\n              return filter;\n          }\n          definitionIds() {\n              return [\n                  ...super.definitionIds(),\n                  ...this.effects.flatMap(effect => effect.definitionIds()),\n              ];\n          }\n          effectsCommandFiles(args) {\n              const { container } = this;\n              const files = [];\n              if (!container) {\n                  files.push(...this.effects.flatMap(effect => effect.commandFiles(args)));\n              }\n              return files;\n          }\n          effectsCommandFilters(args) {\n              const commandFilters = [];\n              const { filterInput: input } = args;\n              let filterInput = input;\n              assertPopulatedString(filterInput);\n              const { effects, isDefaultOrAudio } = this;\n              if (isDefaultOrAudio)\n                  return commandFilters;\n              commandFilters.push(...effects.flatMap(effect => {\n                  const filters = effect.commandFilters({ ...args, filterInput });\n                  if (filters.length)\n                      filterInput = arrayLast(arrayLast(filters).outputs);\n                  return filters;\n              }));\n              return commandFilters;\n          }\n          effects = [];\n          intrinsicRect(_ = false) { return RectZero; }\n          get isDefault() { return this.mediaId === DefaultContentId; }\n          get isDefaultOrAudio() { return this.isDefault || isAudio(this); }\n          contentSvgItemPromise(containerRect, time, range, component) {\n              return errorThrow(ErrorName.Unimplemented);\n          }\n          selectedItems(actions) {\n              const selectedItems = super.selectedItems(actions);\n              if (this.isDefaultOrAudio || this.container)\n                  return selectedItems;\n              // add effects \n              const { effects, selectType } = this;\n              const { editor } = actions;\n              const selectedEffects = {\n                  name: 'effects',\n                  selectType,\n                  value: effects,\n                  removeHandler: editor.removeEffect.bind(editor),\n                  moveHandler: editor.moveEffect.bind(editor),\n                  addHandler: editor.addEffect.bind(editor),\n              };\n              selectedItems.push(selectedEffects);\n              return selectedItems;\n          }\n          selectedProperty(property) {\n              const { name } = property;\n              switch (name) {\n                  case 'effects': // return !(this.container || this.isDefaultOrAudio)\n                  case 'lock': //return this.container && !isAudio(this)\n                  case 'width':\n                  case 'height':\n                  case 'x':\n                  case 'y': return !(this.isDefaultOrAudio);\n              }\n              return super.selectedProperty(property);\n          }\n          toJSON() {\n              const json = super.toJSON();\n              json.effects = this.effects;\n              return json;\n          }\n          visibleCommandFiles(args) {\n              const commandFiles = super.visibleCommandFiles(args);\n              commandFiles.push(...this.effectsCommandFiles(args));\n              return commandFiles;\n          }\n      };\n  }\n\n  const isColorContent = (value) => {\n      return isContent(value) && \"color\" in value;\n  };\n\n  const ColorContentWithTweenable = TweenableMixin(MediaInstanceBase);\n  const ColorContentWithContent = ContentMixin(ColorContentWithTweenable);\n  class ColorContentClass extends ColorContentWithContent {\n      constructor(...args) {\n          super(...args);\n          const [object] = args;\n          this.addProperties(object, propertyInstance({\n              tweenable: true, name: 'color', type: exports.DataType.Rgb,\n              defaultValue: this.definition.color, group: exports.DataGroup.Color\n          }));\n      }\n      _colorFilter;\n      get colorFilter() { return this._colorFilter ||= filterFromId('color'); }\n      contentColors(time, range) {\n          const [color, colorEndOrNot] = this.tweenValues('color', time, range);\n          assertPopulatedString(color);\n          const colorEnd = isPopulatedString(colorEndOrNot) ? colorEndOrNot : color;\n          return [color, colorEnd];\n      }\n      contentPreviewItemPromise(containerRect, time, range, component) {\n          const { colorFilter } = this;\n          const [color] = this.tweenValues('color', time, range);\n          const { x, y, width, height } = containerRect;\n          colorFilter.setValues({ width, height, color });\n          const [svg] = colorFilter.filterSvgs();\n          svg.setAttribute('x', String(x));\n          svg.setAttribute('y', String(y));\n          return Promise.resolve(svg);\n      }\n  }\n\n  const ColorContentIcon = 'M136.5 77.7l37 67L32 285.7 216.4 464l152.4-148.6 54.4-11.4L166.4 48l-29.9 29.7zm184 208H114.9l102.8-102.3 102.8 102.3zM423.3 304s-56.7 61.5-56.7 92.1c0 30.7 25.4 55.5 56.7 55.5 31.3 0 56.7-24.9 56.7-55.5S423.3 304 423.3 304z';\n  const ColorContentSize = 512;\n  const ColorContentDefinitionWithTweenable = TweenableDefinitionMixin(MediaBase);\n  const ColorContentDefinitionWithContent = ContentDefinitionMixin(ColorContentDefinitionWithTweenable);\n  class ColorContentDefinitionClass extends ColorContentDefinitionWithContent {\n      constructor(...args) {\n          const [object] = args;\n          super(object);\n          const { color } = object;\n          if (isPopulatedString(color))\n              this.color = color;\n      }\n      color = colorBlack;\n      definitionIcon(size) {\n          const inSize = { width: ColorContentSize, height: ColorContentSize };\n          const coverSize = sizeCover(inSize, size, true);\n          const outRect = { ...coverSize, ...centerPoint(size, coverSize) };\n          const pathElement = svgPathElement(ColorContentIcon);\n          svgSetTransformRects(pathElement, inSize, outRect);\n          return Promise.resolve(svgSvgElement(size, pathElement));\n      }\n      instanceFromObject(object = {}) {\n          return new ColorContentClass(this.instanceArgs(object));\n      }\n  }\n\n  const pixelToFrame = (pixels, perFrame, rounding = 'round') => {\n      if (!(pixels && perFrame))\n          return 0;\n      return roundWithMethod(pixels / perFrame, rounding);\n  };\n\n  const eventStop = (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n  };\n\n  const TrackPreviewHandleSize = 8;\n  const TrackPreviewLineSize = 2;\n  /**\n   * Preview of a single track at a single frame, thus representing a single clip\n   */\n  class TrackPreviewClass {\n      args;\n      constructor(args) {\n          this.args = args;\n      }\n      get clip() { return this.args.clip; }\n      get container() { return this.clip.container; }\n      editingSvgItem(classes, inactive) {\n          // console.log(this.constructor.name, \"editingSvgItem\", className)\n          const { container, rect } = this;\n          const svgItem = container.pathElement(rect);\n          svgItem.setAttribute('vector-effect', 'non-scaling-stroke');\n          svgAddClass(svgItem, classes);\n          if (!inactive)\n              svgItem.addEventListener('pointerdown', this.pointerDownHandler());\n          return svgItem;\n      }\n      get editor() { return this.preview.editor; }\n      get icon() { return !!this.args.icon; }\n      pointerDownHandler() {\n          const clickPoint = { ...PointZero };\n          const { editor, container, timeRange, rect, clip } = this;\n          const { rect: contentRect } = editor;\n          const removeWindowHandlers = () => {\n              // console.log(\"removeWindowHandlers\")\n              globalThis.window.removeEventListener('pointermove', pointerMoveStart);\n              globalThis.window.removeEventListener('pointermove', pointerMove);\n              globalThis.window.removeEventListener('pointerup', pointerUp);\n              globalThis.window.removeEventListener('pointerup', pointerDown);\n          };\n          const pointerUp = (event) => {\n              eventStop(event);\n              removeWindowHandlers();\n              // if (editor.dragging) {\n              // console.log(\"pointerUp unsetting dragging and redrawing\")\n              editor.dragging = false;\n              editor.redraw();\n              // }\n          };\n          const pointerMove = (event) => {\n              // console.log(\"pointerMove\")\n              eventStop(event);\n              const { offE, offN, offS, offW } = container;\n              const { x, y, width, height } = rect;\n              let totalWidth = contentRect.width - width;\n              let totalHeight = contentRect.height - height;\n              let initialX = 0;\n              let initialY = 0;\n              if (offE) {\n                  initialX -= width;\n                  totalWidth += width;\n              }\n              if (offW)\n                  totalWidth += width;\n              if (offN) {\n                  initialY -= height;\n                  totalHeight += height;\n              }\n              if (offS)\n                  totalHeight += height;\n              const { clientX, clientY } = event;\n              const localX = clientX - contentRect.x;\n              const localY = clientY - contentRect.y;\n              const clickX = clickPoint.x - contentRect.x;\n              const clickY = clickPoint.y - contentRect.y;\n              const xPos = localX - (clickX - x);\n              const yPos = localY - (clickY - y);\n              const limitedX = tweenMinMax(xPos, initialX, initialX + totalWidth);\n              const limitedY = tweenMinMax(yPos, initialY, initialY + totalHeight);\n              const pointsTweening = tweeningPoints(container);\n              const { lastTime } = timeRange;\n              const timesEqual = editor.time.equalsTime(lastTime);\n              const tweening = pointsTweening && timesEqual;\n              const xKey = tweening ? `x${PropertyTweenSuffix}` : 'x';\n              const yKey = tweening ? `y${PropertyTweenSuffix}` : 'y';\n              const undoValues = {\n                  [xKey]: container.value(xKey), [yKey]: container.value(yKey)\n              };\n              const redoValues = {\n                  [xKey]: totalWidth ? limitedX / totalWidth : undoValues[xKey],\n                  [yKey]: totalHeight ? limitedY / totalHeight : undoValues[yKey]\n              };\n              const args = {\n                  property: exports.DataGroup.Point, target: container,\n                  type: exports.ActionType.ChangeMultiple, redoValues, undoValues\n              };\n              editor.actions.create(args);\n          };\n          const pointerMoveStart = (event) => {\n              // console.log(\"pointerMoveStart setting dragging\")\n              eventStop(event);\n              const { clientX: x, clientY: y } = event;\n              const nowPoint = { x, y };\n              if (pointsEqual(nowPoint, clickPoint))\n                  return;\n              // make sure we're either not tweening, or on start/end frame\n              if (tweeningPoints(container)) {\n                  const { time } = editor;\n                  const closest = time.closest(timeRange);\n                  if (!time.equalsTime(closest)) {\n                      removeWindowHandlers();\n                      // console.log(\"pointerMoveStart going to\", closest)\n                      editor.goToTime(closest);\n                      return;\n                  }\n              }\n              // set new move listener, and call it\n              // console.log(\"pointerMoveStart setting dragging\")\n              editor.dragging = true;\n              globalThis.window.removeEventListener('pointermove', pointerMoveStart);\n              globalThis.window.addEventListener('pointermove', pointerMove);\n              pointerMove(event);\n          };\n          const pointerDown = (event) => {\n              // console.log(\"pointerDown\")\n              eventStop(event);\n              // event.stopPropagation()\n              if (!(event instanceof PointerEvent))\n                  return;\n              const { clientX: x, clientY: y } = event;\n              clickPoint.x = x;\n              clickPoint.y = y;\n              globalThis.window.addEventListener('pointermove', pointerMoveStart);\n              globalThis.window.addEventListener('pointerup', pointerUp);\n              if (editor.selection.clip !== clip) {\n                  editor.selection.set(clip);\n              }\n          };\n          return pointerDown;\n      }\n      get preview() { return this.args.preview; }\n      get quantize() { return this.preview.quantize; }\n      _rect;\n      get rect() { return this._rect || this.rectInitialize; }\n      get rectInitialize() {\n          const { time, timeRange, clip, size } = this;\n          assertSizeAboveZero(size, `${this.constructor.name}.rectInitialize size`);\n          const containerRectArgs = {\n              size, time, timeRange, editing: true,\n          };\n          const containerRects = clip.rects(containerRectArgs);\n          assertTrue(rectsEqual(...containerRects));\n          return containerRects[0];\n      }\n      get size() { return this.preview.size; }\n      svgBoundsElement(lineClasses, handleClasses, inactive) {\n          const items = [];\n          const handle = TrackPreviewHandleSize;\n          const line = TrackPreviewLineSize;\n          const halfLine = line / 2;\n          const { rect, container } = this;\n          const { directions } = container;\n          const { width, height, x, y } = rect;\n          const lineRect = { x: x - halfLine, y: y - halfLine, width: width, height: line };\n          items.push(svgPolygonElement(lineRect, lineClasses));\n          lineRect.y = y + height - halfLine;\n          items.push(svgPolygonElement(lineRect, lineClasses));\n          lineRect.x = x + width - halfLine;\n          lineRect.height = height;\n          lineRect.width = line;\n          lineRect.y = y;\n          items.push(svgPolygonElement(lineRect, lineClasses));\n          lineRect.x = x - halfLine;\n          items.push(svgPolygonElement(lineRect, lineClasses));\n          const size = { width, height };\n          directions.forEach(direction => {\n              const point = this.svgHandlePoint(size, direction);\n              const rect = { x: x + point.x, y: y + point.y, width: handle, height: handle };\n              const element = svgPolygonElement(rect, [...handleClasses, direction.toLowerCase()]);\n              items.push(element);\n              if (inactive)\n                  return;\n              element.addEventListener('pointerdown', (event) => {\n                  // console.log(\"pointerdown\", direction)\n                  this.editor.selection.set(this.clip);\n                  eventStop(event);\n              });\n          });\n          // svgSetTransformPoint(groupElement, rect)\n          return items;\n      }\n      svgHandlePoint(dimensions, direction) {\n          const handle = TrackPreviewHandleSize;\n          const halfHandle = handle / 2;\n          const { width, height } = dimensions;\n          const point = { ...PointZero };\n          const [first, second] = String(direction).split('');\n          assertDirection(first, direction);\n          const last = second || first;\n          assertDirection(last);\n          switch (last) {\n              case exports.Direction.W:\n                  point.x = -halfHandle;\n                  break;\n              case exports.Direction.E:\n                  point.x = width - halfHandle;\n                  break;\n              default: point.x = Math.round(width / 2) - halfHandle;\n          }\n          switch (first) {\n              case exports.Direction.N:\n                  point.y = -halfHandle;\n                  break;\n              case exports.Direction.S:\n                  point.y = height - halfHandle;\n                  break;\n              default: point.y = Math.round(height / 2) - halfHandle;\n          }\n          return point;\n      }\n      get time() { return this.preview.time; }\n      _timeRange;\n      get timeRange() { return this._timeRange ||= this.clip.timeRange(this.quantize); }\n  }\n\n  /**\n   * Preview of a single mash at a single frame\n   */\n  class PreviewClass {\n      constructor(args) {\n          const { selectedClip, editor, time, mash, clip, size } = args;\n          this.mash = mash;\n          this.size = size || mash.imageSize;\n          this.time = time;\n          this.selectedClip = selectedClip;\n          this.clip = clip;\n          if (isObject(editor))\n              this.editor = editor;\n      }\n      audible = false;\n      clip;\n      _clips;\n      get clips() { return this._clips ||= this.clipsInitialize; }\n      get clipsInitialize() {\n          const { mash, time, clip } = this;\n          if (clip)\n              return [clip];\n          return mash.clipsInTimeOfType(time, exports.AVType.Video).sort(sortByTrack);\n      }\n      combine = false;\n      get duration() { return this.time.lengthSeconds; }\n      get editing() { return isObject(this.editor); }\n      editor;\n      get intrinsicSizePromise() {\n          const { clips, time, quantize } = this;\n          const options = { editing: true, size: true };\n          const unknownClips = clips.filter(clip => !clip.intrinsicsKnown(options));\n          const args = {\n              quantize,\n              editing: true, visible: true, time, clipTime: timeRangeFromTime(time)\n          };\n          const promises = unknownClips.map(clip => {\n              args.clipTime = clip.timeRange(quantize);\n              return clip.loadPromise(args);\n          });\n          return Promise.all(promises).then(EmptyMethod);\n      }\n      mash;\n      get previewItemsPromise() {\n          if (this._svgItems)\n              return Promise.resolve(this._svgItems);\n          const sizePromise = this.intrinsicSizePromise;\n          const itemsPromise = sizePromise.then(() => {\n              const { clips, size, time, clip } = this;\n              let promise = Promise.resolve([]);\n              const component = clip ? exports.Component.Timeline : exports.Component.Player;\n              clips.forEach(clip => {\n                  promise = promise.then(lastTuple => {\n                      return clip.previewItemsPromise(size, time, component).then(svgItems => {\n                          return [...lastTuple, ...svgItems];\n                      });\n                  });\n              });\n              return promise;\n          });\n          return itemsPromise.then(svgItems => {\n              return this._svgItems = svgItems.length ? this.tupleItems(svgItems) : [];\n          });\n      }\n      get quantize() { return this.mash.quantize; }\n      size;\n      selectedClip;\n      streaming = false;\n      _svgItems;\n      get svgItemsPromise() {\n          return this.previewItemsPromise;\n      }\n      time;\n      _trackPreviews;\n      get trackPreviews() { return this._trackPreviews ||= this.trackPreviewsInitialize; }\n      get trackPreviewsInitialize() {\n          const trackPreviews = [];\n          const { time, quantize, clips } = this;\n          const tweenTime = time.isRange ? undefined : time.scale(quantize);\n          clips.forEach(clip => {\n              const clipTimeRange = clip.timeRange(quantize);\n              const range = clipTimeRange.scale(time.fps);\n              const frame = Math.max(0, time.frame - range.frame);\n              const timeRange = range.withFrame(frame);\n              const filterChainArgs = {\n                  clip, preview: this, tweenTime, timeRange, icon: !!this.clip\n              };\n              trackPreviews.push(new TrackPreviewClass(filterChainArgs));\n          });\n          return trackPreviews;\n      }\n      tupleItems(svgItems) {\n          const { size, editing, selectedClip, editor } = this;\n          const items = [...svgItems];\n          const trackClasses = 'track';\n          items.forEach(item => svgAddClass(item, trackClasses));\n          if (!(editing && svgItems.length))\n              return items;\n          assertObject(editor, 'editor');\n          // TODO: get classes from theme\n          const { dragging } = editor;\n          const { trackPreviews } = this;\n          const selectedPreview = trackPreviews.find(preview => preview.clip === selectedClip);\n          const hoverItems = trackPreviews.map(trackPreview => {\n              const trackSelected = trackPreview === selectedPreview;\n              const classes = ['outline'];\n              if (!(dragging || trackSelected))\n                  classes.push('animate');\n              // console.log(this.constructor.name, \"tupleItems\", dragging, trackSelected)\n              return trackPreview.editingSvgItem(classes);\n          });\n          const outlineClasses = ['outlines'];\n          const hoversSvg = svgSvgElement(size, hoverItems);\n          svgAddClass(hoversSvg, outlineClasses);\n          items.push(hoversSvg);\n          if (!selectedPreview)\n              return items;\n          const classes = ['bounds', 'back'];\n          const lineClasses = ['line'];\n          const handleClasses = ['handle'];\n          const activeSvg = svgSvgElement(size, selectedPreview.svgBoundsElement(lineClasses, handleClasses, true));\n          svgAddClass(activeSvg, classes);\n          classes[1] = 'fore';\n          const passiveSvg = svgSvgElement(size, selectedPreview.svgBoundsElement(lineClasses, handleClasses));\n          svgAddClass(passiveSvg, classes);\n          items.push(activeSvg, passiveSvg);\n          return items;\n      }\n      visible = true;\n  }\n\n  class ClipClass extends PropertiedClass {\n      constructor(...args) {\n          super(...args);\n          this.properties.push(propertyInstance({\n              name: \"containerId\", type: exports.DataType.ContainerId,\n              defaultValue: DefaultContainerId\n          }));\n          this.properties.push(propertyInstance({\n              name: \"contentId\", type: exports.DataType.ContentId,\n              defaultValue: DefaultContentId\n          }));\n          this.properties.push(propertyInstance({\n              name: \"label\", type: exports.DataType.String\n          }));\n          this.properties.push(propertyInstance({\n              name: \"sizing\", type: exports.DataType.Option, defaultValue: exports.Sizing.Content,\n              options: Sizings,\n          }));\n          this.properties.push(propertyInstance({\n              name: \"timing\", type: exports.DataType.Option, defaultValue: exports.Timing.Content,\n              group: exports.DataGroup.Timing, options: Timings\n          }));\n          this.properties.push(propertyInstance({\n              name: \"frame\",\n              type: exports.DataType.Frame,\n              group: exports.DataGroup.Timing,\n              defaultValue: exports.Duration.None, min: 0, step: 1\n          }));\n          this.properties.push(propertyInstance({\n              name: \"frames\", type: exports.DataType.Frame, defaultValue: exports.Duration.Unknown,\n              min: 1, step: 1,\n              group: exports.DataGroup.Timing,\n          }));\n          const [object] = args;\n          this.propertiesInitialize(object);\n          const { container, content } = object;\n          // this.track = track\n          if (container)\n              this._containerObject = container;\n          if (content)\n              this._contentObject = content;\n          // this.containerInitialize(container || {})\n          // this.contentInitialize(content || {})\n      }\n      assureTimingAndSizing(timing, sizing, tweenable) {\n          const { timing: myTiming, sizing: mySizing, containerId } = this;\n          // const containerOk = containerId !== DefaultContainerId\n          // const contentOk = contentId !== DefaultContentId\n          let timingOk = myTiming !== timing;\n          let sizingOk = mySizing !== sizing;\n          timingOk ||= tweenable.hasIntrinsicTiming;\n          sizingOk ||= tweenable.hasIntrinsicSizing;\n          // timingOk ||= timing === Timing.Container ? containerOk : contentOk\n          // sizingOk ||= sizing === Sizing.Container ? containerOk : contentOk\n          if (!timingOk) {\n              if (timing === exports.Timing.Content && containerId) {\n                  this.timing = exports.Timing.Container;\n              }\n              else\n                  this.timing = exports.Timing.Custom;\n              // console.log(this.constructor.name, \"assureTimingAndSizing setting timing\", type, isTimingMediaType(type), myTiming, \"->\", this.timing)\n          }\n          if (!sizingOk) {\n              if (sizing === exports.Sizing.Content && containerId) {\n                  this.sizing = exports.Sizing.Container;\n              }\n              else\n                  this.sizing = exports.Sizing.Preview;\n              // console.log(this.constructor.name, \"assureTimingAndSizing setting sizing\", type, isSizingMediaType(type), mySizing, \"->\", this.sizing)\n          }\n          return !(sizingOk && timingOk);\n      }\n      get audible() {\n          return this.mutable;\n      }\n      clipIcon(size, scale, buffer = 1) {\n          const { container } = this;\n          // TODO: display audio waveform...\n          if (!container)\n              return;\n          const { track } = this;\n          const { quantize, imageSize } = track.mash;\n          assertSizeAboveZero(imageSize, 'track.mash.imageSize');\n          const frameSize = sizeEven(sizeCover(imageSize, size, true));\n          assertSizeAboveZero(frameSize, `${this.constructor.name}.clipIcon containedSize`);\n          const widthAndBuffer = frameSize.width + buffer;\n          const cellCount = Math.ceil(size.width / widthAndBuffer);\n          const clipTime = this.timeRange(quantize);\n          const { startTime } = clipTime;\n          const previews = [];\n          const { mash } = track;\n          let pixel = 0;\n          for (let i = 0; i < cellCount; i++) {\n              const { copy: time } = startTime;\n              const previewArgs = {\n                  mash, time, clip: this, size: frameSize,\n              };\n              const preview = new PreviewClass(previewArgs);\n              previews.push(preview);\n              pixel += widthAndBuffer;\n              startTime.frame = clipTime.frame + pixelToFrame(pixel, scale, 'floor');\n          }\n          let svgItemsPromise = Promise.resolve([]);\n          previews.forEach(preview => {\n              svgItemsPromise = svgItemsPromise.then(items => {\n                  return preview.svgItemsPromise.then(svgItems => {\n                      return [...items, ...svgItems];\n                  });\n              });\n          });\n          return svgItemsPromise.then(svgItems => {\n              const point = { ...PointZero };\n              const containerSvg = svgSvgElement(size);\n              svgItems.forEach(groupItem => {\n                  svgSetDimensions(groupItem, point);\n                  svgAppend(containerSvg, groupItem);\n                  point.x += widthAndBuffer;\n              });\n              return containerSvg;\n          });\n      }\n      clipCommandFiles(args) {\n          const commandFiles = [];\n          const { visible, quantize, outputSize: outputSize, time } = args;\n          const clipTime = this.timeRange(quantize);\n          const { content, container } = this;\n          const contentArgs = { ...args, clipTime };\n          // console.log(this.constructor.name, \"commandFiles\", visible, outputSize)\n          if (visible) {\n              assertSizeAboveZero(outputSize, 'outputSize');\n              assertContainer(container);\n              const containerRectArgs = {\n                  size: outputSize, time, timeRange: clipTime, loading: true\n              };\n              // console.log(this.constructor.name, \"clipCommandFiles\", containerRects)\n              const containerRects = this.rects(containerRectArgs);\n              const colors = isColorContent(content) ? content.contentColors(time, clipTime) : undefined;\n              const fileArgs = {\n                  ...contentArgs, outputSize, contentColors: colors, containerRects\n              };\n              if (!colors) {\n                  const contentFiles = content.visibleCommandFiles(fileArgs);\n                  // console.log(this.constructor.name, \"commandFiles content:\", contentFiles.length)\n                  commandFiles.push(...contentFiles);\n              }\n              const containerFiles = container.visibleCommandFiles(fileArgs);\n              // console.log(this.constructor.name, \"commandFiles container:\", containerFiles.length)\n              commandFiles.push(...containerFiles);\n          }\n          else {\n              assertTrue(!visible, 'outputSize && container');\n              commandFiles.push(...this.content.audibleCommandFiles(contentArgs));\n          }\n          return commandFiles;\n      }\n      commandFilters(args) {\n          const commandFilters = [];\n          const { visible, quantize, outputSize, time } = args;\n          const clipTime = this.timeRange(quantize);\n          const contentArgs = { ...args, clipTime };\n          const { content, container } = this;\n          if (!visible)\n              return this.content.audibleCommandFilters(contentArgs);\n          assertSizeAboveZero(outputSize, 'outputSize');\n          assertContainer(container);\n          const containerRectArgs = {\n              size: outputSize, time, timeRange: clipTime\n          };\n          const containerRects = this.rects(containerRectArgs);\n          contentArgs.containerRects = containerRects;\n          const tweening = {\n              point: !pointsEqual(...containerRects),\n              size: !sizesEqual(...containerRects),\n          };\n          // console.log(this.constructor.name, \"commandFilters\", contentArgs.containerRects)\n          const isColor = isColorContent(content);\n          const colors = isColor ? content.contentColors(time, clipTime) : undefined;\n          const hasColorContent = isPopulatedArray(colors);\n          if (hasColorContent) {\n              tweening.color = colors[0] !== colors[1];\n              tweening.canColor = tweening.color ? container.canColorTween(args) : container.canColor(args);\n          }\n          const timeDuration = time.isRange ? time.lengthSeconds : 0;\n          const duration = timeDuration ? Math.min(timeDuration, clipTime.lengthSeconds) : 0;\n          const containerArgs = {\n              ...contentArgs, contentColors: colors, outputSize, containerRects, duration\n          };\n          if (hasColorContent) {\n              if (!tweening.canColor) {\n                  // inject color filter, I will alphamerge to colorize myself later\n                  commandFilters.push(...container.containerColorCommandFilters(containerArgs));\n                  containerArgs.filterInput = arrayLast(arrayLast(commandFilters).outputs);\n              }\n          }\n          else {\n              commandFilters.push(...content.commandFilters(containerArgs, tweening));\n              containerArgs.filterInput = arrayLast(arrayLast(commandFilters).outputs);\n          }\n          commandFilters.push(...container.commandFilters(containerArgs, tweening, true));\n          return commandFilters;\n      }\n      _containerObject = {};\n      _container;\n      get container() { return this._container || this.containerInitialize(this._containerObject); }\n      containerInitialize(containerObject) {\n          const { containerId, track } = this;\n          const { media } = track.mash;\n          const mediaId = containerId || containerObject.mediaId;\n          if (!isPopulatedString(mediaId))\n              return;\n          const definition = media.fromId(mediaId);\n          const object = { ...containerObject, mediaId, container: true };\n          const instance = definition.instanceFromObject(object);\n          assertContainer(instance);\n          this.assureTimingAndSizing(exports.Timing.Container, exports.Sizing.Container, instance);\n          instance.clip = this;\n          if (this.timing === exports.Timing.Container && this._track)\n              this.resetTiming(instance);\n          return this._container = instance;\n      }\n      _contentObject = {};\n      _content;\n      get content() { return this._content || this.contentInitialize(this._contentObject); }\n      contentInitialize(contentObject) {\n          const { contentId, track } = this;\n          const { media } = track.mash;\n          const mediaId = contentId || contentObject.mediaId;\n          assertPopulatedString(mediaId);\n          const definition = media.fromId(mediaId);\n          const object = { ...contentObject, mediaId };\n          const instance = definition.instanceFromObject(object);\n          assertContent(instance);\n          if (this.assureTimingAndSizing(exports.Timing.Content, exports.Sizing.Content, instance)) {\n              const { container } = this;\n              if (container) {\n                  this.assureTimingAndSizing(exports.Timing.Container, exports.Sizing.Container, container);\n              }\n          }\n          instance.clip = this;\n          if (this.timing === exports.Timing.Content && this._track)\n              this.resetTiming(instance);\n          return this._content = instance;\n      }\n      definitionIds() {\n          const ids = this.content.definitionIds();\n          if (this.container)\n              ids.push(...this.container.definitionIds());\n          return ids;\n      }\n      get endFrame() { return this.frame + this.frames; }\n      endTime(quantize) {\n          return timeFromArgs(this.endFrame, quantize);\n      }\n      intrinsicsKnown(options) {\n          const { content, container } = this;\n          let known = content.intrinsicsKnown(options);\n          if (container)\n              known &&= container.intrinsicsKnown(options);\n          return known;\n      }\n      intrinsicGraphFiles(options) {\n          const { content, container } = this;\n          const files = [];\n          if (!content.intrinsicsKnown(options)) {\n              files.push(content.intrinsicGraphFile(options));\n          }\n          if (container && !container.intrinsicsKnown(options)) {\n              files.push(container.intrinsicGraphFile(options));\n          }\n          return files;\n      }\n      _id;\n      get id() { return this._id ||= idGenerateString(); }\n      _label = '';\n      get label() { return this._label; }\n      set label(value) { this._label = value; }\n      // intrinsicUrls(options: IntrinsicOptions): string[] {\n      //   const { content, container } = this\n      //   const urls: string[] = []\n      //   if (!content.intrinsicsKnown(options)) {\n      //     urls.push(...content.intrinsicUrls(options))\n      //   }\n      //   if (container && !container.intrinsicsKnown(options)) {\n      //     urls.push(...container.intrinsicUrls(options))\n      //   }\n      //   return urls\n      // }\n      loadPromise(args) {\n          const { quantize } = args;\n          const { content, container, frames } = this;\n          if (isAboveZero(frames))\n              args.clipTime ||= this.timeRange(quantize);\n          const promises = [content.loadPromise(args)];\n          if (container)\n              promises.push(container.loadPromise(args));\n          return Promise.all(promises).then(EmptyMethod);\n      }\n      maxFrames(_quantize, _trim) { return 0; }\n      get mutable() {\n          const { content } = this;\n          const contentMutable = content.mutable();\n          if (contentMutable) {\n              return true;\n          }\n          const { container } = this;\n          if (!container)\n              return false;\n          const containerMutable = container.mutable();\n          return containerMutable;\n      }\n      get notMuted() {\n          const { content, muted } = this;\n          if (muted)\n              return false;\n          if (content.mutable() && !content.muted)\n              return true;\n          const { container } = this;\n          if (!container?.mutable())\n              return true;\n          return !container.muted;\n      }\n      previewItemsPromise(size, time, component) {\n          assertSizeAboveZero(size, 'previewItemsPromise');\n          const timeRange = this.timeRange(this.track.mash.quantize);\n          const { container, content } = this;\n          assertContainer(container);\n          const containerRectArgs = {\n              size, time, timeRange, editing: true, //loading: true,\n          };\n          // console.log(this.constructor.name, \"previewItemsPromise rects\", containerRectArgs)\n          const containerRects = this.rects(containerRectArgs);\n          assertTrue(rectsEqual(...containerRects));\n          const [containerRect] = containerRects;\n          return container.previewItemsPromise(content, containerRect, size, time, timeRange, component);\n      }\n      rectIntrinsic(size, loading, editing) {\n          const rect = { ...size, ...PointZero };\n          const { sizing } = this;\n          if (sizing === exports.Sizing.Preview)\n              return rect;\n          const target = sizing === exports.Sizing.Container ? this.container : this.content;\n          assertTweenable(target);\n          const known = target.intrinsicsKnown({ editing, size: true });\n          if (loading && !known)\n              return rect;\n          assertTrue(known, 'intrinsicsKnown');\n          const targetRect = target.intrinsicRect(editing);\n          // console.log(this.constructor.name, \"rectIntrinsic KNOWN\", targetRect, sizing, target.definition.label)\n          return targetRect;\n      }\n      rects(args) {\n          const { size, loading, editing } = args;\n          // console.log(this.constructor.name, \"rects rectIntrinsic\", loading, editing)\n          const intrinsicRect = this.rectIntrinsic(size, loading, editing);\n          // console.log(this.constructor.name, \"rects intrinsicRect\", intrinsicRect, args)\n          const { container } = this;\n          assertContainer(container);\n          return container.containerRects(args, intrinsicRect);\n      }\n      resetTiming(tweenable, quantize) {\n          const { timing } = this;\n          // console.log(\"resetTiming\", timing)\n          const track = this._track;\n          switch (timing) {\n              case exports.Timing.Custom: {\n                  // console.log(\"resetTiming\", this.frames)\n                  if (isAboveZero(this.frames))\n                      break;\n                  this.frames = Default.duration * (quantize || track.mash.quantize);\n                  break;\n              }\n              case exports.Timing.Container: {\n                  const container = isContainer(tweenable) ? tweenable : this.container;\n                  if (!container)\n                      break;\n                  // if (!isUpdatableDuration(container)) break\n                  this.frames = container.frames(quantize || track.mash.quantize);\n                  break;\n              }\n              case exports.Timing.Content: {\n                  const content = isContent(tweenable) ? tweenable : this.content;\n                  if (!content)\n                      break;\n                  // if (!isUpdatableDuration(content)) break    \n                  this.frames = content.frames(quantize || track.mash.quantize);\n                  break;\n              }\n          }\n      }\n      selectType = exports.SelectType.Clip;\n      selectables() { return [this, ...this.track.selectables()]; }\n      selectedItems(actions) {\n          const selected = [];\n          const { properties } = this;\n          const props = properties.filter(property => this.selectedProperty(property));\n          props.forEach(property => {\n              const { name } = property;\n              const isFrames = name === 'frames' || name === 'frame';\n              const undoValue = this.value(name);\n              selected.push({\n                  value: undoValue,\n                  selectType: exports.SelectType.Clip, property,\n                  changeHandler: (property, redoValue) => {\n                      assertPopulatedString(property);\n                      const options = { property, target: this, redoValue, undoValue,\n                          type: isFrames ? exports.ActionType.ChangeFrame : exports.ActionType.Change\n                      };\n                      actions.create(options);\n                  }\n              });\n          });\n          return selected;\n      }\n      selectedProperty(property) {\n          const { name, type } = property;\n          switch (type) {\n              case exports.DataType.ContainerId:\n              case exports.DataType.ContentId: return false;\n          }\n          switch (name) {\n              case 'sizing': return !isAudio(this.content);\n              case 'timing': {\n                  if (this.content.hasIntrinsicTiming)\n                      break;\n                  return !!this.container?.hasIntrinsicSizing;\n              }\n              case 'frame': return !this.track.dense;\n              case 'frames': return this.timing === exports.Timing.Custom;\n          }\n          return true;\n      }\n      serverPromise(args) {\n          const { content, container } = this;\n          const promises = [content.serverPromise(args)];\n          if (container)\n              promises.push(container.serverPromise(args));\n          return Promise.all(promises).then(EmptyMethod);\n      }\n      setValue(value, name, property) {\n          super.setValue(value, name, property);\n          switch (name) {\n              case 'containerId': {\n                  // console.log(this.constructor.name, \"setValue\", name, value, !!property)\n                  this._containerObject = this._container?.toJSON() || {};\n                  delete this._container;\n                  // if (this._container) this.containerInitialize(this._container.toJSON())\n                  break;\n              }\n              case 'contentId': {\n                  this._contentObject = this._content?.toJSON() || {};\n                  delete this._content;\n                  // console.log(this.constructor.name, \"setValue\", name, value, !!property)\n                  // if (this._content) this.contentInitialize(this._content.toJSON())\n                  break;\n              }\n          }\n      }\n      // private _svgElement?: SVGSVGElement\n      // private get svgElement() { \n      //   return this._svgElement ||= svgElement() \n      // }\n      // private updateSvg(rect: Rect) {\n      //   svgSetDimensions(this.svgElement, rect)\n      // }\n      time(quantize) { return timeFromArgs(this.frame, quantize); }\n      timeRange(quantize) {\n          const { frame, frames } = this;\n          assertPositive(frame, \"timeRange frame\");\n          assertAboveZero(frames, \"timeRange frames\");\n          return timeRangeFromArgs(this.frame, quantize, this.frames);\n      }\n      timeRangeRelative(timeRange, quantize) {\n          const range = this.timeRange(quantize).scale(timeRange.fps);\n          const frame = Math.max(0, timeRange.frame - range.frame);\n          return timeRange.withFrame(frame);\n      }\n      toJSON() {\n          const json = super.toJSON();\n          const { container, content } = this;\n          json.content = content;\n          json.contentId = content.mediaId;\n          if (container) {\n              json.container = container;\n              json.containerId = container.mediaId;\n          }\n          else\n              json.containerId = \"\";\n          return json;\n      }\n      toString() {\n          return `[Clip ${this.label}]`;\n      }\n      _track;\n      get track() { return this._track; }\n      set track(value) { this._track = value; }\n      get trackNumber() {\n          const { track } = this;\n          return track ? track.index : -1;\n      }\n      set trackNumber(value) { if (value < 0)\n          delete this._track; }\n      get visible() {\n          return !!this.containerId;\n      }\n  }\n\n  const clipInstance = (object) => {\n      const { containerId, contentId } = object;\n      const defaultContent = isUndefined(contentId) || contentId === DefaultContentId;\n      const defaultContainer = isUndefined(containerId) || containerId === DefaultContainerId;\n      if (object.sizing === exports.Sizing.Content && defaultContent) {\n          // console.log(\"instanceArgs setting sizing to container\", object)\n          object.sizing = exports.Sizing.Container;\n      }\n      if (object.sizing === exports.Sizing.Container && defaultContainer) {\n          // console.log(\"instanceArgs setting sizing to preview\", object)\n          object.sizing = exports.Sizing.Preview;\n      }\n      if (object.timing === exports.Timing.Content && defaultContent) {\n          object.timing = exports.Timing.Container;\n      }\n      if (object.timing === exports.Timing.Container && defaultContainer) {\n          object.timing = exports.Timing.Custom;\n      }\n      return new ClipClass(object);\n  };\n\n  class TrackClass extends PropertiedClass {\n      constructor(args) {\n          super();\n          const { clips, index: layer, dense, mashMedia } = args;\n          this.mash = mashMedia;\n          if (isPositive(layer))\n              this.index = layer;\n          this.dense = isDefined(dense) ? !!dense : !this.index;\n          this.properties.push(propertyInstance({ name: \"dense\", defaultValue: false }));\n          this.propertiesInitialize(args);\n          if (clips) {\n              this.clips.push(...clips.map(clip => {\n                  const args = {\n                      ...clip, track: this,\n                  };\n                  const instance = clipInstance(args);\n                  instance.track = this;\n                  return instance;\n              }));\n          }\n      }\n      addClips(clips, insertIndex = 0) {\n          let clipIndex = insertIndex || 0;\n          if (!this.dense)\n              clipIndex = 0; // ordered by clip.frame values\n          const origIndex = clipIndex; // note original, since it may decrease...\n          // build array of my clips excluding the clips we're inserting\n          const spliceClips = this.clips.filter((other, index) => {\n              const moving = clips.includes(other);\n              // insert index should be decreased when clip is moving and comes before\n              if (origIndex && moving && index < origIndex)\n                  clipIndex -= 1;\n              return !moving;\n          });\n          // insert the clips we're adding at the correct index, then sort properly\n          spliceClips.splice(clipIndex, 0, ...clips);\n          this.sortClips(spliceClips);\n          arraySet(this.clips, spliceClips);\n      }\n      assureFrame(clips) {\n          const clipsArray = clips || this.clips;\n          let changed = false;\n          let endFrame = 0;\n          const ranges = [];\n          const { dense } = this;\n          clipsArray.forEach(clip => {\n              const { frame } = clip;\n              if (dense ? frame !== endFrame : ranges.some(range => range.includes(frame))) {\n                  changed = true;\n                  clip.frame = endFrame;\n              }\n              endFrame = clip.frame + clip.frames;\n              if (!dense)\n                  ranges.push(clip.timeRange(1));\n          });\n          return changed;\n      }\n      assureFrames(quantize, clips) {\n          const suppliedClips = isDefined(clips);\n          const clipsArray = clips || this.clips;\n          // console.log(this.constructor.name, \"assureFrames\", clipsArray.length, \"clip(s)\")\n          clipsArray.forEach(clip => {\n              const { frames } = clip;\n              if (isAboveZero(frames))\n                  return;\n              clip.resetTiming(undefined, quantize);\n              if (isAboveZero(clip.frames) || !suppliedClips)\n                  return;\n              clip.frames = Math.floor(Default.duration * quantize);\n          });\n      }\n      clips = [];\n      dense = false;\n      frameForClipNearFrame(clip, frame = 0) {\n          if (this.dense)\n              return frame;\n          const others = this.clips.filter(other => clip !== other && other.endFrame > frame);\n          if (!others.length)\n              return frame;\n          const startFrame = clip.frame;\n          const endFrame = clip.endFrame;\n          const frames = endFrame - startFrame;\n          let lastFrame = frame;\n          others.find(clip => {\n              if (clip.frame >= lastFrame + frames)\n                  return true;\n              lastFrame = clip.endFrame;\n          });\n          return lastFrame;\n      }\n      get frames() {\n          const { clips } = this;\n          const { length } = clips;\n          if (!length)\n              return exports.Duration.None;\n          for (const clip of clips) {\n              const { frames: clipFrames } = clip;\n              switch (clipFrames) {\n                  case exports.Duration.Unknown:\n                  case exports.Duration.Unlimited: return clipFrames;\n              }\n          }\n          const clip = arrayLast(clips);\n          const { frame, frames } = clip;\n          return frame + frames;\n      }\n      _identifier;\n      get identifier() { return this._identifier ||= idGenerate('track'); }\n      index = 0;\n      _mash;\n      get mash() {\n          const { _mash } = this;\n          assertMashMedia(_mash);\n          return _mash;\n      }\n      set mash(value) { this._mash = value; }\n      removeClips(clips) {\n          const newClips = this.clips.filter(other => !clips.includes(other));\n          assertTrue(newClips.length !== this.clips.length);\n          clips.forEach(clip => clip.trackNumber = -1);\n          this.sortClips(newClips);\n          arraySet(this.clips, newClips);\n      }\n      selectType = exports.SelectType.Track;\n      selectables() { return [this, ...this.mash.selectables()]; }\n      selectedItems(actions) {\n          return this.properties.map(property => {\n              const undoValue = this.value(property.name);\n              return {\n                  value: undoValue,\n                  property, selectType: exports.SelectType.Track,\n                  changeHandler: (property, redoValue) => {\n                      assertPopulatedString(property);\n                      const options = { target: this, property, redoValue, undoValue };\n                      actions.create(options);\n                  }\n              };\n          });\n      }\n      sortClips(clips) {\n          const sortClips = clips || this.clips;\n          const changed = this.assureFrame(sortClips);\n          sortClips.sort(sortByFrame);\n          return changed;\n      }\n      toJSON() {\n          const json = super.toJSON();\n          json.clips = this.clips;\n          return json;\n      }\n  }\n\n  const trackInstance = (object) => new TrackClass(object);\n  const TrackFactory = { instance: trackInstance };\n\n  class NonePreview extends PreviewClass {\n      get clips() { return []; }\n  }\n\n  const DefaultFontId = `${IdPrefix}font${IdSuffix}`;\n  const isFont = (value) => {\n      return isContainer(value) && \"string\" in value;\n  };\n  function assertFont(value) {\n      if (!isFont(value))\n          throw new Error(\"expected Font\");\n  }\n  const isFontMedia = (value) => {\n      return isMedia(value) && value.type === FontType;\n  };\n  function assertFontMedia(value) {\n      if (!isFontMedia(value))\n          throw new Error(\"expected FontMedia\");\n  }\n\n  class EncodingClass extends RequestableClass {\n      constructor(object) {\n          super(object);\n      }\n  }\n\n  const encodingInstance = (object) => {\n      return new EncodingClass(object);\n  };\n\n  const UpdatableDurationMediaTypes = [\n      AudioType,\n      VideoType,\n      // SequenceType,\n  ];\n  const isUpdatableDuration = (value) => {\n      return isContent(value) && \"startOptions\" in value;\n  };\n  function assertUpdatableDuration(value, name) {\n      if (!isUpdatableDuration(value))\n          errorThrow(value, \"Updatable\", name);\n  }\n  const isUpdatableDurationType = (value) => {\n      return isMediaType(value) && UpdatableDurationMediaTypes.includes(value);\n  };\n  const isUpdatableDurationDefinition = (value) => {\n      return isContentDefinition(value) && \"audibleSource\" in value;\n  };\n  function assertUpdatableDurationDefinition(value, name) {\n      if (!isUpdatableDurationDefinition(value))\n          errorThrow(value, \"UpdatableDefinition\", name);\n  }\n\n  const AudibleGainDelimiter = ',';\n  function UpdatableDurationMixin(Base) {\n      return class extends Base {\n          constructor(...args) {\n              super(...args);\n              const [object] = args;\n              const { gain } = object;\n              if (isDefined(gain)) {\n                  if (isString(gain)) {\n                      if (gain.includes(AudibleGainDelimiter)) {\n                          const floats = gain.split(AudibleGainDelimiter).map(string => parseFloat(string));\n                          const z = floats.length / 2;\n                          for (let i = 0; i < z; i += 1) {\n                              this.gainPairs.push([floats[i * 2], floats[i * 2 + 1]]);\n                          }\n                          this.gain = -1;\n                      }\n                      else\n                          this.gain = Number(gain);\n                  }\n                  else if (isPositive(gain))\n                      this.gain = gain;\n              }\n          }\n          definitionTime(mashTime, clipRange) {\n              const superTime = super.definitionTime(mashTime, clipRange);\n              const { startTrim, endTrim, definition } = this;\n              const { duration } = definition;\n              assertAboveZero(duration);\n              const durationTime = timeFromSeconds(duration, clipRange.fps);\n              const durationFrames = durationTime.frame - (startTrim + endTrim);\n              const offset = superTime.frame % durationFrames;\n              return superTime.withFrame(offset + startTrim).divide(this.speed);\n          }\n          frames(quantize) {\n              const { definition, startTrim, endTrim } = this;\n              const frames = definition.frames(quantize);\n              return frames - (startTrim + endTrim);\n          }\n          gain = 1.0;\n          gainPairs = [];\n          graphFiles(args) {\n              const { audible } = args;\n              if (!audible)\n                  return [];\n              if (!(this.mutable() && !this.muted))\n                  return [];\n              const { definition } = this;\n              const graphFile = {\n                  type: AudioType, file: '', definition, input: true\n              };\n              return [graphFile];\n          }\n          hasGain() {\n              if (this.gain === 0)\n                  return true;\n              if (isPositive(this.gain))\n                  return false;\n              if (this.gainPairs.length !== 2)\n                  return false;\n              const [first, second] = this.gainPairs;\n              if (first.length !== 2)\n                  return false;\n              if (second.length !== 2)\n                  return false;\n              if (Math.max(...first))\n                  return false;\n              const [time, value] = second;\n              return time === 1 && value === 0;\n          }\n          hasIntrinsicTiming = true;\n          initialCommandFilters(args, tweening, container = false) {\n              const commandFilters = [];\n              const { time, quantize, commandFiles, clipTime, videoRate, duration } = args;\n              const { id } = this;\n              // console.log(this.constructor.name, \"initialCommandFilters calling commandFilesInput\", id)\n              let filterInput = commandFilesInput(commandFiles, id, true);\n              assertPopulatedString(filterInput, 'filterInput');\n              const trimFilter = 'trim';\n              const trimId = idGenerate(trimFilter);\n              const trimOptions = {};\n              if (duration)\n                  trimOptions.duration = duration;\n              const { frame } = this.definitionTime(time, clipTime);\n              if (frame)\n                  trimOptions.start = timeFromArgs(frame, quantize).seconds;\n              const commandFilter = {\n                  inputs: [filterInput],\n                  ffmpegFilter: trimFilter,\n                  options: trimOptions,\n                  outputs: [trimId]\n              };\n              commandFilters.push(commandFilter);\n              filterInput = trimId;\n              if (duration) {\n                  const fpsFilter = 'fps';\n                  const fpsId = idGenerate(fpsFilter);\n                  const fpsCommandFilter = {\n                      ffmpegFilter: fpsFilter,\n                      options: { fps: videoRate },\n                      inputs: [filterInput], outputs: [fpsId]\n                  };\n                  commandFilters.push(fpsCommandFilter);\n                  filterInput = fpsId;\n              }\n              const setptsFilter = 'setpts';\n              const setptsId = idGenerate(setptsFilter);\n              const setptsCommandFilter = {\n                  ffmpegFilter: setptsFilter,\n                  options: { expr: 'PTS-STARTPTS' },\n                  inputs: [filterInput], outputs: [setptsId]\n              };\n              commandFilters.push(setptsCommandFilter);\n              return commandFilters;\n          }\n          intrinsicsKnown(options) {\n              const superKnown = super.intrinsicsKnown(options);\n              if (!superKnown)\n                  return false;\n              const { duration } = options;\n              if (!duration)\n                  return true;\n              return isAboveZero(this.definition.duration);\n          }\n          mutable() { return this.definition.audio; }\n          selectedProperty(property) {\n              const { name } = property;\n              switch (name) {\n                  case 'gain': return this.mutable() && !this.muted;\n              }\n              return super.selectedProperty(property);\n          }\n          setValue(value, name, property) {\n              super.setValue(value, name, property);\n              if (property)\n                  return;\n              switch (name) {\n                  case 'startTrim':\n                  case 'endTrim':\n                  case 'speed':\n                      // console.log(this.constructor.name, \"setValue\", name, value)\n                      this.clip.resetTiming(this);\n                      break;\n              }\n          }\n          startOptions(seconds, timeRange) {\n              let offset = timeRange.withFrame(this.startTrim).seconds;\n              let start = timeRange.seconds - seconds;\n              let duration = timeRange.lengthSeconds;\n              if (start < 0) {\n                  offset -= start;\n                  duration += start;\n                  start = 0;\n              }\n              return { start, offset, duration };\n          }\n          toJSON() {\n              const json = super.toJSON();\n              const { speed, gain } = this;\n              if (speed !== 1.0)\n                  json.speed = speed;\n              if (gain !== 1.0)\n                  json.gain = gain;\n              return json;\n          }\n          _trimFilter;\n          get trimFilter() { return this._trimFilter ||= filterFromId('trim'); }\n      };\n  }\n\n  const ProbeType = 'probe';\n  const DecodingTypes = [ProbeType];\n  const isDecodingType = (value) => DecodingTypes.includes(value);\n\n  const isDecoding = (value) => (isObject(value) && \"type\" in value && isDecodingType(value.type));\n  function assertDecoding(value) {\n      if (!isDecoding(value))\n          errorThrow(value, 'Decoding');\n  }\n\n  const isProbing = (value) => {\n      return isDecoding(value) && value.type === ProbeType;\n  };\n  function assertProbing(value) {\n      if (!isProbing(value))\n          errorThrow(value, 'Probing');\n  }\n\n  function UpdatableDurationDefinitionMixin(Base) {\n      return class extends Base {\n          constructor(...args) {\n              super(...args);\n              const [object] = args;\n              const { loop } = object;\n              // if (audio || audioUrl ) {//|| loadedAudio\n              //   this.audio = true\n              //   if (isPopulatedString(audioUrl)) this.audioUrl = audioUrl\n              //   if (waveform) this.waveform = waveform\n              // }\n              // // console.log(this.constructor.name, \"audio\", audio, this.audio, this.audioUrl)\n              // if (isAboveZero(duration)) this.duration = duration\n              // console.log(this.constructor.name, \"duration\", duration, this.duration)\n              if (loop) {\n                  this.loop = loop;\n                  this.properties.push(propertyInstance({ name: 'loops', defaultValue: 1 }));\n              }\n              this.properties.push(propertyInstance({\n                  name: \"gain\", defaultValue: 1.0, type: exports.DataType.Percent,\n                  min: 0, max: 2.0, step: 0.01\n              }));\n              this.properties.push(propertyInstance({\n                  name: \"speed\", defaultValue: 1.0, type: exports.DataType.Percent,\n                  min: 0.1, max: 2.0, step: 0.1,\n                  group: exports.DataGroup.Timing,\n              }));\n              this.properties.push(propertyInstance({\n                  name: \"startTrim\", defaultValue: 0, type: exports.DataType.Frame,\n                  step: 1, min: 0,\n                  group: exports.DataGroup.Timing,\n              }));\n              this.properties.push(propertyInstance({\n                  name: \"endTrim\", defaultValue: 0, type: exports.DataType.Frame,\n                  step: 1, min: 0,\n                  group: exports.DataGroup.Timing,\n              }));\n          }\n          audibleSource() {\n              const { loadedAudio } = this;\n              if (loadedAudio) {\n                  // console.log(this.constructor.name, \"audibleSource loadedAudio\")\n                  return AudibleContextInstance.createBufferSource(loadedAudio);\n              }\n          }\n          _audio;\n          get audio() {\n              if (isUndefined(this._audio)) {\n                  this._audio = this.decodings.some(object => object.data?.audible);\n              }\n              return Boolean(this._audio);\n          }\n          set audio(value) { this._audio = value; }\n          audioUrl = '';\n          _duration = 0;\n          get duration() {\n              if (!isAboveZero(this._duration)) {\n                  const probing = this.decodings.find(decoding => decoding.type === ProbeType);\n                  if (isProbing(probing)) {\n                      const { data } = probing;\n                      const { duration } = data;\n                      if (isAboveZero(duration))\n                          this._duration = duration;\n                  }\n              }\n              return this._duration;\n          }\n          set duration(value) { this._duration = value; }\n          frames(quantize) {\n              const { duration } = this;\n              // console.log(this.constructor.name, \"frames duration =\", duration)\n              if (!duration)\n                  return exports.Duration.Unknown;\n              return timeFromSeconds(this.duration, quantize, 'floor').frame;\n          }\n          loadedAudio;\n          get preloadAudioPromise() {\n              if (this.loadedAudio)\n                  return Promise.resolve();\n              const transcoding = this.preferredTranscoding(AudioType, VideoType);\n              const { request } = transcoding;\n              const { response } = request;\n              if (isClientAudio(response)) {\n                  this.loadedAudio = response;\n                  return Promise.resolve();\n              }\n              return requestAudioPromise(request).then(orError => {\n                  if (isDefiniteError(orError))\n                      return;\n                  const { data } = orError;\n                  if (isClientAudio(data)) {\n                      this.loadedAudio = data;\n                      return;\n                  }\n                  assertClientVideo(data);\n                  const { src } = data;\n                  const endpoint = endpointFromUrl(src);\n                  const request = { endpoint };\n                  return requestAudioPromise(request).then(orError => {\n                      if (isDefiniteError(orError))\n                          return;\n                      const { data: audio } = orError;\n                      assertClientAudio(audio);\n                      this.loadedAudio = audio;\n                  });\n              });\n          }\n          loop = false;\n          toJSON() {\n              const { loop } = this;\n              return { ...super.toJSON(), loop };\n          }\n      };\n  }\n\n  const UpdatableSizeMediaType = [\n      ImageType,\n      VideoType,\n      // SequenceType,\n  ];\n  const isUpdatableSize = (value) => {\n      return isContent(value);\n  };\n  function assertUpdatableSize(value) {\n      if (!isUpdatableSize(value))\n          errorThrow(value, 'UpdatableSize');\n  }\n  const isUpdatableSizeType = (value) => {\n      return isMediaType(value) && UpdatableSizeMediaType.includes(value);\n  };\n  const isUpdatableSizeDefinition = (value) => {\n      return isContentDefinition(value);\n  };\n  function assertUpdatableSizeDefinition(value) {\n      if (!isUpdatableSizeDefinition(value))\n          errorThrow(value, 'UpdatableSizeDefinition');\n  }\n\n  function UpdatableSizeMixin(Base) {\n      return class extends Base {\n          constructor(...args) {\n              super(...args);\n              const [object] = args;\n              const { container } = object;\n              const min = container ? 0.0 : 1.0;\n              this.addProperties(object, propertyInstance({\n                  tweenable: true, name: 'width', type: exports.DataType.Percent,\n                  group: exports.DataGroup.Size, defaultValue: 1.0, max: 2.0, min\n              }));\n              this.addProperties(object, propertyInstance({\n                  tweenable: true, name: 'height', type: exports.DataType.Percent,\n                  group: exports.DataGroup.Size, defaultValue: 1.0, max: 2.0, min\n              }));\n          }\n          colorMaximize = true;\n          containerCommandFilters(args, tweening) {\n              // console.log(this.constructor.name, \"containerCommandFilters\")\n              const commandFilters = [];\n              const { commandFiles, containerRects, filterInput: input, videoRate, track } = args;\n              let filterInput = input;\n              const maxSize = tweening.size ? tweenMaxSize(...containerRects) : containerRects[0];\n              // add color box first\n              const colorArgs = {\n                  ...args,\n                  contentColors: [colorBlackOpaque, colorBlackOpaque],\n                  outputSize: maxSize, //{ width: maxSize.width * 2, height: maxSize.height * 2 }\n              };\n              commandFilters.push(...this.colorBackCommandFilters(colorArgs, `container-${track}-back`));\n              const colorInput = arrayLast(arrayLast(commandFilters).outputs);\n              const { id } = this;\n              // console.log(this.constructor.name, \"containerCommandFilters calling commandFilesInput\", id)\n              const fileInput = commandFilesInput(commandFiles, id, true);\n              // then add file input, scaled\n              commandFilters.push(...this.scaleCommandFilters({ ...args, filterInput: fileInput }));\n              filterInput = arrayLast(arrayLast(commandFilters).outputs);\n              if (tweening.size) {\n                  // overlay scaled file input onto color box\n                  assertPopulatedString(filterInput, 'overlay input');\n                  commandFilters.push(...this.overlayCommandFilters(colorInput, filterInput));\n                  filterInput = arrayLast(arrayLast(commandFilters).outputs);\n              }\n              // crop file input\n              const cropArgs = { duration: 0, videoRate };\n              assertPopulatedString(filterInput, 'crop input');\n              const { cropFilter } = this;\n              cropFilter.setValue(maxSize.width, \"width\");\n              cropFilter.setValue(maxSize.height, \"height\");\n              cropFilter.setValue(0, \"x\");\n              cropFilter.setValue(0, \"y\");\n              commandFilters.push(...cropFilter.commandFilters({ ...cropArgs, filterInput }));\n              filterInput = arrayLast(arrayLast(commandFilters).outputs);\n              if (!tweening.size) {\n                  // overlay scaled and cropped file input onto color box\n                  assertPopulatedString(filterInput, 'overlay input');\n                  commandFilters.push(...this.overlayCommandFilters(colorInput, filterInput));\n                  filterInput = arrayLast(arrayLast(commandFilters).outputs);\n              }\n              assertPopulatedString(filterInput, 'alphamerge input');\n              commandFilters.push(...this.alphamergeCommandFilters({ ...args, filterInput }));\n              filterInput = arrayLast(arrayLast(commandFilters).outputs);\n              // then we need to do effects, opacity, etc, and merge\n              commandFilters.push(...this.containerFinalCommandFilters({ ...args, filterInput }));\n              return commandFilters;\n          }\n          containerSvgItemPromise(rect, time, range, component) {\n              if (component !== exports.Component.Player)\n                  return this.svgItemForTimelinePromise(rect, time, range);\n              return this.svgItemForPlayerPromise(rect, time, range).then(svgItem => {\n                  svgSetDimensions(svgItem, rect);\n                  return svgItem;\n              });\n          }\n          contentCommandFilters(args, tweening) {\n              const commandFilters = [];\n              const { containerRects, visible, time, videoRate, clipTime, commandFiles, filterInput: input, track } = args;\n              if (!visible)\n                  return commandFilters;\n              assertTimeRange(clipTime);\n              assertPopulatedArray(containerRects, 'containerRects');\n              const { id } = this;\n              let filterInput = input || commandFilesInput(commandFiles, id, visible);\n              const contentArgs = {\n                  containerRects: containerRects, time, timeRange: clipTime\n              };\n              const contentRects = this.contentRects(contentArgs);\n              const tweeningContainer = !rectsEqual(...containerRects);\n              const [contentRect, contentRectEnd] = contentRects;\n              const duration = isTimeRange(time) ? time.lengthSeconds : 0;\n              const maxContainerSize = tweeningContainer ? tweenMaxSize(...containerRects) : containerRects[0];\n              const colorInput = `content-${track}-back`;\n              const colorArgs = {\n                  ...args, contentColors: [colorTransparent, colorTransparent],\n                  outputSize: maxContainerSize\n              };\n              commandFilters.push(...this.colorBackCommandFilters(colorArgs, colorInput));\n              const scaleArgs = {\n                  ...args, filterInput, containerRects: contentRects\n              };\n              commandFilters.push(...this.scaleCommandFilters(scaleArgs));\n              filterInput = arrayLast(arrayLast(commandFilters).outputs);\n              if (tweening.size) {\n                  commandFilters.push(...this.overlayCommandFilters(colorInput, filterInput));\n                  filterInput = arrayLast(arrayLast(commandFilters).outputs);\n              }\n              const cropArgs = {\n                  duration, videoRate\n              };\n              const { cropFilter } = this;\n              cropFilter.setValue(maxContainerSize.width, \"width\");\n              cropFilter.setValue(maxContainerSize.height, \"height\");\n              cropFilter.setValue(contentRect.x, \"x\");\n              cropFilter.setValue(contentRect.y, \"y\");\n              cropFilter.setValue(contentRectEnd.x, `x${PropertyTweenSuffix}`);\n              cropFilter.setValue(contentRectEnd.y, `y${PropertyTweenSuffix}`);\n              commandFilters.push(...cropFilter.commandFilters({ ...cropArgs, filterInput }));\n              filterInput = arrayLast(arrayLast(commandFilters).outputs);\n              const { setsarFilter } = this;\n              setsarFilter.setValue(\"1/1\", \"sar\");\n              commandFilters.push(...setsarFilter.commandFilters({ ...cropArgs, filterInput }));\n              filterInput = arrayLast(arrayLast(commandFilters).outputs);\n              if (!tweening.size) {\n                  commandFilters.push(...this.overlayCommandFilters(colorInput, filterInput, this.definition.alpha));\n                  filterInput = arrayLast(arrayLast(commandFilters).outputs);\n              }\n              commandFilters.push(...super.contentCommandFilters({ ...args, filterInput }, tweening));\n              return commandFilters;\n          }\n          svgItemForPlayerPromise(rect, time, range) {\n              return this.svgItemForTimelinePromise(rect, time, range);\n          }\n          svgItemForTimelinePromise(rect, time, range) {\n              return errorThrow(ErrorName.Unimplemented);\n          }\n          contentSvgItemPromise(containerRect, time, range, component) {\n              assertTrue(!this.container);\n              const rect = this.itemContentRect(containerRect, time, range);\n              return this.containerSvgItemPromise(rect, time, range, component);\n          }\n          hasIntrinsicSizing = true;\n          initialCommandFilters(args, tweening, container = false) {\n              const commandFilters = [];\n              const { filterInput, track } = args;\n              if (container) {\n                  // relabel input as content\n                  assertPopulatedString(filterInput);\n                  commandFilters.push(this.copyCommandFilter(filterInput, track));\n              }\n              return commandFilters;\n          }\n          intrinsicRect(editing = false) {\n              const key = editing ? 'previewSize' : 'sourceSize';\n              const { [key]: size } = this.definition;\n              assertSizeAboveZero(size, key);\n              const rect = { ...PointZero, ...size };\n              // console.log(this.constructor.name, \"intrinsicRect\", editing, rect)\n              return rect;\n          }\n          intrinsicsKnown(options) {\n              const { editing, size } = options;\n              if (!size)\n                  return true;\n              const key = editing ? 'previewSize' : 'sourceSize';\n              const { [key]: definitionSize } = this.definition;\n              return sizeAboveZero(definitionSize);\n          }\n          itemContentRect(containerRect, time, timeRange) {\n              const contentArgs = {\n                  containerRects: containerRect, time, timeRange, editing: true\n              };\n              const [contentRect] = this.contentRects(contentArgs);\n              const { x, y } = contentRect;\n              const point = { x: containerRect.x - x, y: containerRect.y - y };\n              const rect = rectFromSize(contentRect, point);\n              return rect;\n          }\n          _setsarFilter;\n          get setsarFilter() { return this._setsarFilter ||= filterFromId('setsar'); }\n      };\n  }\n\n  function UpdatableSizeDefinitionMixin(Base) {\n      return class extends Base {\n          constructor(...args) {\n              super(...args);\n              const [object] = args;\n              console.log(this.constructor.name, object);\n              // const { sourceSize, previewSize } = object as UpdatableSizeDefinitionObject\n              // if (sizeAboveZero(previewSize)) this.previewSize = previewSize\n              // if (sizeAboveZero(sourceSize)) this.sourceSize = sourceSize\n          }\n          alpha;\n          get previewSize() {\n              const transcoding = this.transcodings.find(transcoding => {\n                  return transcoding.request.response;\n              });\n              // console.log(this.constructor.name, \"previewSize transcoding\", transcoding)\n              if (!transcoding)\n                  return this.sourceSize;\n              const { response: clientMedia } = transcoding.request;\n              if (!sizeAboveZero(clientMedia))\n                  return;\n              const { width, height } = clientMedia;\n              if (!(isAboveZero(width) && isAboveZero(height)))\n                  return;\n              return { width, height };\n          }\n          get sourceSize() {\n              const probing = this.decodings.find(decoding => decoding.type === ProbeType);\n              if (isProbing(probing)) {\n                  const { data } = probing;\n                  const { width, height } = data;\n                  if (!(isAboveZero(width) && isAboveZero(height)))\n                      return;\n                  return { width, height };\n              }\n          }\n      };\n  }\n\n  class AudioPreviewClass {\n      constructor(object) {\n          const { buffer, gain } = object;\n          if (isPositive(gain))\n              this.gain = gain;\n          if (isAboveZero(buffer))\n              this.buffer = buffer;\n      }\n      adjustClipGain(clip, quantize) {\n          const timeRange = clip.timeRange(quantize);\n          const avs = this.clipSources(clip);\n          avs.forEach(av => { this.adjustSourceGain(av, timeRange); });\n      }\n      adjustSourceGain(av, timeRange) {\n          const source = AudibleContextInstance.getSource(av.id);\n          if (!source) {\n              // console.log(this.constructor.name, \"adjustSourceGain no source\", clip.id)\n              return;\n          }\n          const { gainNode } = source;\n          if (this.gain === 0.0) {\n              gainNode.gain.value = 0.0;\n              return;\n          }\n          const gain = av.gain;\n          if (isPositive(gain)) {\n              gainNode.gain.value = this.gain * gain;\n              return;\n          }\n          // position/gain pairs...\n          const options = isTimeRange(timeRange) ? av.startOptions(this.seconds, timeRange) : timeRange;\n          const { start, duration } = options;\n          gainNode.gain.cancelScheduledValues(0);\n          av.gainPairs.forEach(pair => {\n              const [position, value] = pair;\n              gainNode.gain.linearRampToValueAtTime(this.gain * value, start + position * duration);\n          });\n      }\n      buffer = Default.mash.buffer;\n      bufferClips(clips, quantize) {\n          // console.log(this.constructor.name, \"compositeAudible\", clips.length)\n          if (!this.createSources(clips, quantize))\n              return false;\n          this.destroySources(clips);\n          return true;\n      }\n      bufferSource;\n      clear() { }\n      clipSources(clip) {\n          const avs = [];\n          const { container, content } = clip;\n          if (isUpdatableDuration(container) && !container.muted)\n              avs.push(container);\n          if (isUpdatableDuration(content) && !content.muted)\n              avs.push(content);\n          return avs;\n      }\n      createSources(clips, quantize, time) {\n          // console.log(this.constructor.name, \"createSources\", clips.length, \"clip(s)\", quantize, time, this.playing)\n          if (!this.playing && !time)\n              return false;\n          const addingClips = clips.filter(clip => !this.playingClips.includes(clip));\n          // console.log(this.constructor.name, \"createSources\", addingClips.length, \"addingClip(s)\")\n          if (!addingClips.length)\n              return true;\n          let okay = true;\n          addingClips.forEach(clip => {\n              const avs = this.clipSources(clip);\n              const timeRange = clip.timeRange(quantize);\n              const filtered = avs.filter(av => !AudibleContextInstance.hasSource(av.id));\n              okay &&= filtered.every(av => {\n                  const startSeconds = this.playing ? this.seconds : time?.seconds || 0;\n                  const options = av.startOptions(startSeconds, timeRange);\n                  const { start, duration, offset } = options;\n                  if (isPositive(start) && isAboveZero(duration)) {\n                      const { definition, id } = av;\n                      assertUpdatableDurationDefinition(definition);\n                      const audibleSource = definition.audibleSource();\n                      if (!audibleSource) {\n                          if (!start) {\n                              console.log(this.constructor.name, \"createSources no audible source\", definition.label);\n                              // wanted to start immediately but it's not loaded\n                              return false;\n                          }\n                          return true;\n                      }\n                      const { loop } = definition;\n                      // console.log(this.constructor.name, \"createSources\", options, loop)\n                      AudibleContextInstance.startAt(id, audibleSource, start, duration, offset, loop);\n                      this.adjustSourceGain(av, options);\n                  }\n                  else\n                      console.error(this.constructor.name, \"createSources\", options);\n                  return true;\n              });\n          });\n          this.playingClips.push(...addingClips);\n          return okay;\n      }\n      destroySources(clipsToKeep = []) {\n          const sourceClips = [...this.playingClips];\n          const clipsToRemove = sourceClips.filter(clip => !clipsToKeep.includes(clip));\n          clipsToRemove.forEach(clip => {\n              const avs = this.clipSources(clip);\n              avs.forEach(av => AudibleContextInstance.deleteSource(av.id));\n          });\n          this.playingClips = clipsToKeep;\n          // console.log(this.constructor.name, \"destroySources removed\", clipsToRemove.length, \"kept\", this.playingClips.length)\n      }\n      gain = Default.mash.gain;\n      setGain(value, quantize) {\n          if (this.gain === value)\n              return;\n          this.gain = value;\n          if (this.playing) {\n              this.playingClips.forEach(clip => this.adjustClipGain(clip, quantize));\n          }\n      }\n      playing = false;\n      playingClips = [];\n      get seconds() {\n          const ellapsed = AudibleContextInstance.currentTime - this.contextSecondsWhenStarted;\n          const started = ellapsed + this.startedMashAt;\n          // console.log(\"seconds\", started, \"=\", this.startedMashAt, \"+\", ellapsed, '=', audibleContext.currentTime, '-', this.contextSecondsWhenStarted)\n          return started;\n      }\n      startContext() {\n          // console.log(this.constructor.name, \"startContext\")\n          if (this.bufferSource)\n              return errorThrow(ErrorName.Internal);\n          if (this.playing)\n              return errorThrow(ErrorName.Internal);\n          const buffer = AudibleContextInstance.createBuffer(this.buffer);\n          this.bufferSource = AudibleContextInstance.createBufferSource(buffer);\n          this.bufferSource.loop = true;\n          this.bufferSource.connect(AudibleContextInstance.destination);\n          this.bufferSource.start(0);\n      }\n      // called when playhead starts moving\n      startPlaying(time, clips, quantize) {\n          if (!this.bufferSource)\n              return errorThrow(ErrorName.Internal);\n          if (this.playing)\n              return errorThrow(ErrorName.Internal);\n          const { seconds } = time;\n          this.playing = true;\n          this.startedMashAt = seconds;\n          this.contextSecondsWhenStarted = AudibleContextInstance.currentTime;\n          // console.log(this.constructor.name, \"startPlaying\", \"startedMashAt\", this.startedMashAt, \"contextSecondsWhenStarted\", this.contextSecondsWhenStarted)\n          if (!this.createSources(clips, quantize, time)) {\n              // console.log(this.constructor.name, \"startPlaying stalled\")\n              this.stopPlaying();\n              return false;\n          }\n          // console.log(this.constructor.name, \"startPlaying\", this.startedMashAt, this.contextSecondsWhenStarted)\n          return true;\n      }\n      // position of masher (in seconds) when startPlaying called\n      startedMashAt = 0;\n      // currentTime of context (in seconds) was created when startPlaying called\n      contextSecondsWhenStarted = 0;\n      stopContext() {\n          if (!this.bufferSource)\n              return;\n          this.bufferSource.stop();\n          this.bufferSource.disconnect(AudibleContextInstance.destination);\n          delete this.bufferSource;\n      }\n      stopPlaying() {\n          // console.log(this.constructor.name, \"stopPlaying\")\n          if (!this.playing)\n              return;\n          this.playing = false;\n          this.destroySources();\n          this.startedMashAt = 0;\n          this.contextSecondsWhenStarted = 0;\n      }\n  }\n\n  const audioPreviewInstance = (args) => (new AudioPreviewClass(args));\n\n  class MashMediaClass extends MediaBase {\n      constructor(object, args) {\n          super(object);\n          const { encodings } = object;\n          if (isSize(args))\n              this.imageSize = args;\n          else if (args) {\n              const { loop, gain, buffer, size, mediaCollection, emitter, editor, } = args;\n              if (editor)\n                  this.editor = editor;\n              if (emitter)\n                  this.emitter = emitter;\n              if (size)\n                  this.imageSize = size;\n              if (isObject(mediaCollection))\n                  this._media = mediaCollection;\n              if (isBoolean(loop))\n                  this.loop = loop;\n              if (isNumber(gain))\n                  this.gain = gain;\n              if (isAboveZero(buffer))\n                  this._buffer = buffer;\n          }\n          if (isArray(encodings))\n              this.encodings.push(...encodings.map(encodingInstance));\n          this.properties.push(propertyInstance({\n              name: 'color', defaultValue: colorBlack, type: exports.DataType.Rgb\n          }));\n          this._preview = new NonePreview({ mash: this, time: timeFromArgs() });\n          // this.label ||= Default.mash.label\n          this.propertiesInitialize(object);\n      }\n      _editor;\n      get editor() { return this._editor; }\n      set editor(value) { this._editor = value; }\n      emitter;\n      imageSize = { ...SizeZero };\n      addClipToTrack(clip, trackIndex = 0, insertIndex = 0, frame) {\n          const clipsArray = isArray(clip) ? clip : [clip];\n          const trackClips = this.trackClips(clipsArray, trackIndex);\n          this.emitIfFramesChange(() => {\n              trackClips.forEach(entry => {\n                  const [index, clips] = entry;\n                  const newTrack = this.tracks[index];\n                  assertTrack(newTrack, 'track');\n                  clips.forEach(clip => {\n                      const oldTrackNumber = clip.trackNumber;\n                      if (isPositive(oldTrackNumber) && oldTrackNumber !== index) {\n                          clip.track.removeClips([clip]);\n                      }\n                      if (isPositive(frame))\n                          clip.frame = frame;\n                      clip.track = newTrack;\n                  });\n                  newTrack.assureFrames(this.quantize, clips);\n                  newTrack.addClips(clips, insertIndex);\n              });\n          });\n      }\n      addTrack(options = {}) {\n          const args = {\n              index: this.tracks.length, mashMedia: this, ...options\n          };\n          const track = trackInstance(args);\n          this.tracks.push(track);\n          this.tracks.sort(sortByIndex);\n          this.emitter?.emit(exports.EventType.Track);\n          return track;\n      }\n      assureTrack() {\n          if (!this.tracks.length) {\n              const trackArgs = { dense: true, mashMedia: this };\n              const track = trackInstance(trackArgs);\n              track.mash = this;\n              this.tracks.push(track);\n          }\n      }\n      _buffer = Default.mash.buffer;\n      get buffer() { return this._buffer; }\n      set buffer(value) {\n          assertAboveZero(value, 'buffer');\n          if (this._buffer !== value) {\n              this._buffer = value;\n              if (this._composition)\n                  this.composition.buffer = value;\n          }\n      }\n      bufferStart() {\n          if (this._bufferTimer)\n              return;\n          this._bufferTimer = setInterval(() => {\n              if (this._paused)\n                  return;\n              const options = {\n                  editing: true, audible: true\n              };\n              this.loadPromise(options);\n              const clips = this.clipsAudibleInTime(this.timeToBuffer);\n              this.composition.bufferClips(clips, this.quantize);\n          }, Math.round((this.buffer * 1000) / 2));\n      }\n      bufferStop() {\n          if (!this._bufferTimer)\n              return;\n          clearInterval(this._bufferTimer);\n          delete this._bufferTimer;\n      }\n      _bufferTimer;\n      changeTiming(propertied, property, value) {\n          this.emitIfFramesChange(() => {\n              propertied.setValue(value, property);\n          });\n      }\n      clearDrawInterval() {\n          if (!this.drawInterval)\n              return;\n          clearInterval(this.drawInterval);\n          this.drawInterval = undefined;\n      }\n      clearPreview() {\n          // console.log(this.constructor.name, \"clearPreview\")\n          delete this._preview;\n      }\n      clipIntersects(clip, range) {\n          if (!clip.frames)\n              return true;\n          return clip.timeRange(this.quantize).intersects(range);\n      }\n      get clips() {\n          return this.tracks.map(track => track.clips).flat();\n      }\n      clipsAudibleInTime(time) {\n          const { clips } = this;\n          const clipsAudible = clips.filter(clip => clip.mutable && clip.notMuted);\n          return this.filterIntersecting(clipsAudible, time);\n      }\n      clipsInTime(time) {\n          return this.filterIntersecting(this.clips, time);\n      }\n      clipsInTimeOfType(time, avType = exports.AVType.Both) {\n          switch (avType) {\n              case exports.AVType.Both: return this.clipsInTime(time);\n              case exports.AVType.Audio: return this.clipsAudibleInTime(time);\n              case exports.AVType.Video: return this.clipsVisibleInTime(time);\n          }\n      }\n      get clipsVisible() {\n          return this.clips.filter(clip => clip.container);\n      }\n      clipsVisibleInTime(time) {\n          return this.filterIntersecting(this.clipsVisible, time);\n      }\n      compositeVisible(time) {\n          this.drawingTime = time;\n          this.clearPreview();\n          this.emitter?.emit(exports.EventType.Draw);\n      }\n      // private counter = 0\n      compositeVisibleRequest(time) {\n          // console.log(this.constructor.name, \"compositeVisibleRequest\", time)\n          if (typeof requestAnimationFrame !== 'function')\n              return;\n          requestAnimationFrame(() => {\n              // if (this.counter) console.timeEnd(`anim-frame-${this.counter}`)\n              // this.counter++\n              // console.time(`anim-frame-${this.counter}`)\n              this.compositeVisible(time);\n          });\n      }\n      _composition;\n      get composition() {\n          if (!this._composition) {\n              const options = {\n                  buffer: this.buffer,\n                  gain: this.gain\n              };\n              this._composition = audioPreviewInstance(options);\n          }\n          return this._composition;\n      }\n      get definitionIds() {\n          const { clips } = this;\n          const ids = clips.flatMap(clip => clip.definitionIds());\n          const set = [...new Set(ids)];\n          // console.log(this.constructor.name, \"definitionIds\", set.length)\n          return set;\n      }\n      destroy() {\n          this.paused = true;\n          this.clearDrawInterval();\n      }\n      draw() {\n          const { time } = this;\n          this.compositeVisible(time);\n      }\n      drawInterval;\n      drawRequest() {\n          // console.log(this.constructor.name, \"drawRequest\")\n          const { time } = this;\n          this.compositeVisibleRequest(time);\n      }\n      drawTime(time) {\n          const timeChange = time !== this.time;\n          // console.log(this.constructor.name, \"drawTime\", time, timeChange)\n          this.drawnTime = time;\n          this.drawRequest();\n          this.emitter?.emit(timeChange ? exports.EventType.Time : exports.EventType.Loaded);\n      }\n      drawingTime;\n      drawnTime;\n      get duration() { return this.endTime.seconds; }\n      emitIfFramesChange(method) {\n          const origFrames = this.frames;\n          method();\n          const { frames } = this;\n          if (origFrames !== frames) {\n              this.emitter?.emit(exports.EventType.Duration);\n              if (this.frame > frames)\n                  this.seekToTime(timeFromArgs(frames, this.quantize));\n          }\n      }\n      get endTime() { return timeFromArgs(this.frames, this.quantize); }\n      filterIntersecting(clips, time) {\n          const scaled = time.scale(this.quantize);\n          return clips.filter(clip => this.clipIntersects(clip, scaled));\n      }\n      _frame = 0; // initial frame supplied to constructor\n      get frame() { return this.time.scale(this.quantize, \"floor\").frame; }\n      get frames() {\n          const { tracks } = this;\n          if (tracks.length) {\n              const frames = this.tracks.map(track => track.frames);\n              if (isPositive(Math.min(...frames)))\n                  return Math.max(0, ...frames);\n              return exports.Duration.Unknown;\n          }\n          return exports.Duration.None;\n      }\n      _gain = Default.mash.gain;\n      get gain() { return this._gain; }\n      set gain(value) {\n          assertPositive(value, 'gain');\n          if (this._gain !== value) {\n              this._gain = value;\n              if (this._composition)\n                  this.composition.setGain(value, this.quantize);\n          }\n      }\n      graphFileOptions(options = {}) {\n          const { time, audible, visible, editing, streaming } = options;\n          const definedTime = time || this.time;\n          const { isRange } = definedTime;\n          const definedVisible = visible || !isRange;\n          const definedAudible = isRange && audible;\n          const args = {\n              editing,\n              streaming,\n              audible: definedAudible, visible: definedVisible,\n              time: definedTime,\n              quantize: this.quantize,\n          };\n          const okay = definedVisible || definedAudible;\n          // if (!okay) console.log(this.constructor.name, \"graphFileArgs\", args)\n          assertTrue(okay, \"audible || visible\");\n          return args;\n      }\n      handleDrawInterval() {\n          // console.log(this.constructor.name, \"handleDrawInterval\", this._playing)\n          // what time does the audio context think it is?\n          const { seconds } = this.composition;\n          // what time would masher consider to be in end frame?\n          const nextFrameTime = this.time.withFrame(this.time.frame);\n          // are we beyond the end of mash?\n          if (seconds >= this.endTime.seconds) {\n              // should we loop back to beginning?\n              if (this.loop)\n                  this.seekToTime(this.time.withFrame(0));\n              else {\n                  this.paused = true;\n                  this.emitter?.emit(exports.EventType.Ended);\n              }\n          }\n          else {\n              // are we at or beyond the next frame?\n              if (seconds >= nextFrameTime.seconds) {\n                  const compositionTime = timeFromSeconds(seconds, this.time.fps);\n                  // go to where the audio context thinks we are\n                  this.drawTime(compositionTime);\n              }\n          }\n      }\n      _loadMashContentPromise;\n      _loadedMashContent = false;\n      get loadMashContentPromise() {\n          const { _loadedMashContent } = this;\n          if (_loadedMashContent)\n              return Promise.resolve();\n          const { _loadMashContentPromise } = this;\n          if (!_loadMashContentPromise) {\n              const { request } = this;\n              return this._loadMashContentPromise = requestRecordPromise(request, true).then(orError => {\n                  if (isDefiniteError(orError))\n                      return errorThrow(orError.error);\n                  const data = orError.data;\n                  const { media, tracks, quantize, color } = data;\n                  if (isArray(media))\n                      this.media.define(...media);\n                  if (isAboveZero(quantize))\n                      this.quantize = quantize;\n                  if (color)\n                      this.setValue(color, 'color');\n                  if (isArray(tracks))\n                      tracks.forEach((trackObject, index) => {\n                          const trackArgs = {\n                              mashMedia: this,\n                              dense: !index, ...trackObject, index\n                          };\n                          const track = trackInstance(trackArgs);\n                          track.assureFrames(this.quantize);\n                          track.sortClips();\n                          this.tracks.push(track);\n                      });\n                  this.assureTrack();\n                  this.tracks.sort(sortByIndex);\n                  this._loadedMashContent = true;\n                  delete this._loadMashContentPromise;\n              });\n          }\n          return _loadMashContentPromise;\n      }\n      loadPromise(options = {}) {\n          return this.loadMashContentPromise.then(() => {\n              options.time ||= this.timeToBuffer;\n              const preloadOptions = this.graphFileOptions(options);\n              const { time, audible, visible } = preloadOptions;\n              const { quantize } = this;\n              assertTime(time);\n              const scaled = time.scale(this.quantize);\n              const type = (audible && visible) ? exports.AVType.Both : (audible ? exports.AVType.Audio : exports.AVType.Video);\n              const clips = this.clipsInTimeOfType(scaled, type);\n              const promises = clips.map(clip => {\n                  const clipTime = clip.timeRange(quantize);\n                  const preloadArgs = {\n                      ...preloadOptions, clipTime, quantize, time\n                  };\n                  return clip.loadPromise(preloadArgs);\n              });\n              const promise = Promise.all(promises).then(EmptyMethod);\n              const removedPromise = promise.then(() => {\n                  const index = this.loadingPromises.indexOf(promise);\n                  if (index < 0)\n                      return errorThrow(ErrorName.Internal);\n                  this.loadingPromises.splice(index, 1);\n              });\n              this.loadingPromises.push(promise);\n              return removedPromise;\n          });\n      }\n      loadingPromises = [];\n      get loading() {\n          // console.log(this.constructor.name, \"loading\", this.loadingPromises.length)\n          return !!this.loadingPromises.length;\n      }\n      loop = false;\n      _media;\n      get media() {\n          return this._media ||= new MediaCollection();\n      }\n      _paused = true;\n      get paused() { return this._paused; }\n      set paused(value) {\n          const paused = value || !this.frames;\n          // console.log(this.constructor.name, \"set paused\", forcedValue)\n          if (this._paused === paused)\n              return;\n          this._paused = paused;\n          if (paused) {\n              this.playing = false;\n              this.bufferStop();\n              if (this._bufferTimer) {\n                  clearInterval(this._bufferTimer);\n                  delete this._bufferTimer;\n              }\n              this.composition.stopContext();\n              this.emitter?.emit(exports.EventType.Pause);\n          }\n          else {\n              this.composition.startContext();\n              this.loadPromise({\n                  editing: true, audible: true, visible: true\n              }).then(() => {\n                  this.bufferStart();\n                  this.playing = true;\n                  // console.log(\"Mash emit\", EventType.Play)\n                  this.emitter?.emit(exports.EventType.Play);\n              });\n          }\n      }\n      _playing = false;\n      get playing() { return this._playing; }\n      set playing(value) {\n          // console.trace(this.constructor.name, \"set playing\", value)\n          if (this._playing !== value) {\n              this._playing = value;\n              if (value) {\n                  const { quantize, time } = this;\n                  const clips = this.clipsAudibleInTime(this.timeToBuffer);\n                  // console.log(this.constructor.name, \"playing\", value, this.time, clips.length)\n                  if (!this.composition.startPlaying(time, clips, quantize)) {\n                      // console.log(this.constructor.name, \"playing audio not cached on first try\", this.time, clips.length)\n                      // audio was not cached\n                      const currentClips = this.clipsAudibleInTime(this.timeToBuffer);\n                      if (!this.composition.startPlaying(time, currentClips, quantize)) {\n                          // console.log(this.constructor.name, \"playing audio not cached on second try\", this.time, currentClips.length)\n                          this._playing = false;\n                          return;\n                      }\n                  }\n                  this.emitter?.emit(exports.EventType.Playing);\n                  this.setDrawInterval();\n              }\n              else {\n                  this.composition.stopPlaying();\n                  this.clearDrawInterval();\n              }\n          }\n      }\n      _preview;\n      preview(options) {\n          return this._preview ||= this.previewInitialize(options);\n      }\n      previewInitialize(options) {\n          return new PreviewClass(this.previewArgs(options));\n      }\n      previewArgs(options = {}) {\n          const { editor } = options;\n          const clip = editor?.selection.clip;\n          const selectedClip = isClip(clip) ? clip : undefined;\n          const { drawingTime, time, quantize } = this;\n          const svgTime = drawingTime || time;\n          const args = {\n              selectedClip,\n              time: svgTime.scale(quantize),\n              mash: this,\n              ...options,\n          };\n          return args;\n      }\n      previewItemsPromise(editor) {\n          const options = { editor };\n          return this.preview(options).previewItemsPromise;\n      }\n      putPromise() {\n          const { quantize } = this;\n          // make sure we've loaded fonts in order to calculate intrinsic rect\n          const promises = this.clips.flatMap(clip => {\n              const { container } = clip;\n              if (isFont(container)) {\n                  if (!container.intrinsicsKnown({ editing: true, size: true })) {\n                      const args = {\n                          editing: true, visible: true, quantize,\n                          time: clip.time(quantize), clipTime: clip.timeRange(quantize)\n                      };\n                      return container.loadPromise(args);\n                  }\n              }\n              return [];\n          });\n          return Promise.all(promises).then(EmptyMethod);\n      }\n      quantize = Default.mash.quantize;\n      removeClipFromTrack(clip) {\n          const clips = isArray(clip) ? clip : [clip];\n          this.emitIfFramesChange(() => {\n              clips.forEach(clip => {\n                  const track = clip.track;\n                  track.removeClips([clip]);\n              });\n          });\n      }\n      removeTrack(index) {\n          const trackIndex = isPositive(index) ? index : this.tracks.length - 1;\n          assertPositive(trackIndex);\n          this.emitIfFramesChange(() => { this.tracks.splice(trackIndex, 1); });\n          this.emitter?.emit(exports.EventType.Track);\n      }\n      _rendering = '';\n      encodings = [];\n      restartAfterStop(time, paused, seeking) {\n          if (time.equalsTime(this.time)) { // otherwise we must have gotten a seek call\n              if (seeking) {\n                  delete this.seekTime;\n                  this.emitter?.emit(exports.EventType.Seeked);\n              }\n              this.drawTime(time);\n              if (!paused)\n                  this.playing = true;\n          }\n      }\n      reload() { return this.stopLoadAndDraw(); }\n      seekTime;\n      seekToTime(time) {\n          if (this.seekTime !== time) {\n              this.seekTime = time;\n              this.emitter?.emit(exports.EventType.Seeking);\n              this.emitter?.emit(exports.EventType.Time);\n          }\n          return this.stopLoadAndDraw(true);\n      }\n      selectType = exports.SelectType.Mash;\n      selectables() { return [this]; }\n      selectedItems(actions) {\n          const { properties } = this;\n          const items = properties.map(property => {\n              const undoValue = this.value(property.name);\n              const selectedProperty = {\n                  value: undoValue,\n                  selectType: exports.SelectType.Mash,\n                  property,\n                  changeHandler: (property, redoValue) => {\n                      assertPopulatedString(property);\n                      const options = { property, target: this, redoValue, undoValue };\n                      actions.create(options);\n                  }\n              };\n              return selectedProperty;\n          });\n          return items;\n      }\n      setDrawInterval() {\n          // console.log(this.constructor.name, \"setDrawInterval\", !!this.drawInterval)\n          if (this.drawInterval)\n              return;\n          this.clearDrawInterval();\n          this.drawInterval = setInterval(() => { this.handleDrawInterval(); }, 500 / this.time.fps);\n      }\n      stopLoadAndDraw(seeking) {\n          const { time, paused, playing } = this;\n          // console.log(this.constructor.name, 'stopLoadAndDraw', seeking, playing, paused)\n          if (playing)\n              this.playing = false;\n          return this.loadPromise({\n              editing: true, visible: true, audible: playing\n          }).then(() => {\n              this.restartAfterStop(time, paused, seeking);\n          });\n      }\n      get time() {\n          return this.seekTime || this.drawnTime || timeFromArgs(this._frame, this.quantize);\n      }\n      get timeRange() {\n          const { endTime, time } = this;\n          const scaled = endTime.scale(time.fps);\n          const range = timeRangeFromTime(time, scaled.frame);\n          // console.log(this.constructor.name, \"timeRange\", range, time, endTime)\n          return range;\n      }\n      timeRanges(avType, startTime) {\n          // const { time: startTime, graphType, avType } = args\n          const time = startTime || this.time;\n          const { quantize } = this;\n          const start = time.scale(this.quantize, 'floor');\n          const end = start.isRange ? start.timeRange.endTime : undefined;\n          const fullRangeClips = this.clipsInTimeOfType(time, avType);\n          const { length } = fullRangeClips;\n          if (!length)\n              return [];\n          if (length === 1 || !start.isRange || avType === exports.AVType.Audio)\n              return [time];\n          const frames = new Set();\n          fullRangeClips.forEach(clip => {\n              frames.add(Math.max(clip.frame, start.frame));\n              frames.add(Math.min(clip.frame + clip.frames, end.frame));\n          });\n          const uniqueFrames = [...frames].sort((a, b) => a - b);\n          let frame = uniqueFrames.shift();\n          const ranges = uniqueFrames.map(uniqueFrame => {\n              const range = timeRangeFromArgs(frame, quantize, uniqueFrame - frame);\n              frame = uniqueFrame;\n              return range;\n          });\n          return ranges;\n      }\n      get timeToBuffer() {\n          const { time, quantize, buffer, paused } = this;\n          if (paused)\n              return timeFromArgs(time.scale(quantize, 'floor').frame, quantize);\n          return timeRangeFromTimes(time, timeFromSeconds(buffer + time.seconds, time.fps));\n      }\n      toJSON() {\n          const { encodings, tracks, quantize, frame } = this;\n          return {\n              ...super.toJSON(),\n              encodings, tracks, quantize\n          };\n      }\n      trackClips(clips, trackIndex) {\n          const oneTrack = isPositive(trackIndex);\n          if (oneTrack)\n              return [[trackIndex, clips]];\n          let index = this.tracks.length - clips.length;\n          return clips.map(clip => [index++, [clip]]);\n      }\n      tracks = [];\n      type = MashType;\n  }\n\n  const mashDefault = { type: MashType, id: '', request: { response: {} } };\n  const mashMedia = (object, args) => {\n      const mashArgs = {\n          request: { response: {} }, type: MashType, ...object\n      };\n      return new MashMediaClass(mashArgs, args);\n  };\n\n  const isImage = (value) => {\n      return isUpdatableSize(value);\n  };\n  const isImageMedia = (value) => {\n      return isMedia(value) && value.type === ImageType;\n  };\n\n  const mediaTypeFromMime = (mime) => (mime?.split('/').shift() || '');\n\n  const audioInfo = (buffer) => {\n      const { duration } = buffer;\n      const info = { duration, audible: true };\n      return info;\n  };\n  const imageInfo = (size) => {\n      return sizeCopy(size);\n  };\n  const videoInfo = (video) => {\n      const { duration, videoWidth, clientWidth, videoHeight, clientHeight } = video;\n      const width = videoWidth || clientWidth;\n      const height = videoHeight || clientHeight;\n      const object = video;\n      let audible = object.mozHasAudio;\n      audible ||= Boolean(object.webkitAudioDecodedByteCount);\n      audible ||= Boolean(object.audioTracks?.length);\n      if (!audible)\n          console.log(Object.values(video));\n      const info = { width, height, duration, audible };\n      return info;\n  };\n  function fontInfo(media) {\n      return {};\n  }\n  const mediaInfo = (media) => {\n      if (isClientVideo(media))\n          return videoInfo(media);\n      if (isClientImage(media))\n          return imageInfo(media);\n      if (isClientFont(media))\n          return fontInfo();\n      if (isClientAudio(media))\n          return audioInfo(media);\n      return {};\n  };\n  const filePromises = (files, size) => {\n      console.log('filePromises', files, size);\n      return files.map(file => {\n          const { name: label, type: fileType } = file;\n          const type = mediaTypeFromMime(fileType);\n          if (!isRawType(type)) {\n              console.log('filePromises NOT raw type', type, fileType, file);\n              return errorPromise(ErrorName.ImportType, { value: type });\n          }\n          const decodings = [];\n          const request = {\n              endpoint: endpointFromUrl(URL.createObjectURL(file))\n          };\n          const object = {\n              request, decodings,\n              type, label,\n              file,\n              id: idTemporary()\n          };\n          const isAudio = type === AudioType;\n          const hasDuration = isAudio || type === VideoType;\n          const hasSize = type === ImageType || type === VideoType;\n          const promise = requestRawPromise(request, type).then(orError => {\n              console.log('filePromises', request, type, orError);\n              if (isDefiniteError(orError))\n                  return orError;\n              const { data: clientMedia } = orError;\n              const info = mediaInfo(clientMedia);\n              const decoding = { data: info, type: ProbeType };\n              decodings.push(decoding);\n              if (hasDuration) {\n                  const { duration = 0 } = info;\n                  if (!isAboveZero(duration)) {\n                      return errorPromise(ErrorName.ImportDuration, { value: duration });\n                  }\n                  // we can't reliably tell if there is an audio track...\n                  // so we assume there is one, and catch problems if it's played \n                  // before decoded\n                  info.audible = true;\n                  // object.duration = duration\n                  // object.audioUrl = hasSize ? urlPrependProtocol('video', idKey) : idKey\n              }\n              if (hasSize) {\n                  const inSize = sizeCopy(info);\n                  if (!sizeAboveZero(inSize)) {\n                      return errorPromise(ErrorName.ImportSize, { value: sizeString(inSize) });\n                  }\n                  // const previewSize = size ? sizeCover(inSize, size, true) : inSize\n                  // const { width, height } = previewSize\n                  // object.previewSize = previewSize\n                  object.clientMedia = clientMedia;\n              }\n              else\n                  object.clientMedia = clientMedia;\n              // loadLocalFile(media, idKey, info)\n              console.log('filePromises', object);\n              return { mediaObject: object };\n          });\n          return promise;\n      });\n  };\n\n  class EditorClass {\n      constructor(args) {\n          const { autoplay, precision, loop, fps, volume, buffer, baseUrl, editType, readOnly, dimensions, mash, } = args;\n          const point = isPoint(dimensions) ? pointCopy(dimensions) : PointZero;\n          const size = isSize(dimensions) ? sizeCopy(dimensions) : SizeZero;\n          this._rect = { ...point, ...size };\n          if (isEditType(editType))\n              this._editType = editType;\n          if (readOnly)\n              this.readOnly = true;\n          this.editing = !this.readOnly;\n          if (isBoolean(autoplay))\n              this.autoplay = autoplay;\n          if (isNumber(precision))\n              this.precision = precision;\n          if (isBoolean(loop))\n              this._loop = loop;\n          if (isNumber(fps))\n              this._fps = fps;\n          if (isNumber(volume))\n              this._volume = volume;\n          if (isNumber(buffer))\n              this._buffer = buffer;\n          this.actions = new Actions(this);\n          if (!urlBaseInitialized())\n              urlBaseInitialize(baseUrl);\n          if (mash)\n              this.load(mash);\n      }\n      actions;\n      addClip(clip, editorIndex) {\n          const { clip: frameOrIndex = 0, track: trackIndex = 0 } = editorIndex;\n          const clips = isArray(clip) ? clip : [clip];\n          const [firstClip] = clips;\n          if (!firstClip)\n              return Promise.resolve();\n          const promise = this.assureMash(clip);\n          return promise.then(() => {\n              const { mashMedia: mash } = this;\n              assertMashMedia(mash);\n              const { tracks } = mash;\n              const { length } = tracks;\n              assertAboveZero(length);\n              const trackPositive = isPositive(trackIndex);\n              const track = trackPositive ? tracks[trackIndex] : undefined;\n              const trackClips = track?.clips || [];\n              const dense = track?.dense;\n              const redoSelection = {\n                  ...this.selection.object, clip: firstClip\n              };\n              const createTracks = trackPositive ? 0 : clips.length;\n              const options = {\n                  clips, type: exports.ActionType.AddClipToTrack, trackIndex,\n                  redoSelection, createTracks\n              };\n              if (dense) {\n                  const insertIndex = isPositive(frameOrIndex) ? frameOrIndex : trackClips.length;\n                  options.insertIndex = insertIndex;\n              }\n              else {\n                  if (createTracks)\n                      options.redoFrame = isPositive(frameOrIndex) ? frameOrIndex : 0;\n                  else {\n                      assertTrack(track);\n                      const frame = isPositive(frameOrIndex) ? frameOrIndex : track.frames;\n                      options.redoFrame = track.frameForClipNearFrame(firstClip, frame);\n                  }\n              }\n              this.actions.create(options);\n              return this.loadMashAndDraw();\n          });\n      }\n      addEffect(effect, index) {\n          const { selection, actions } = this;\n          const { clip, mash } = selection;\n          assertMashMedia(mash);\n          assertClip(clip);\n          const { content } = clip;\n          assertContent(content);\n          const objects = content.effects;\n          const insertIndex = isPositive(index) ? index : objects.length;\n          const redoObjects = [...objects];\n          redoObjects.splice(insertIndex, 0, effect);\n          const options = {\n              objects,\n              undoObjects: [...objects],\n              redoObjects,\n              type: exports.ActionType.Move\n          };\n          actions.create(options);\n          mash.draw();\n      }\n      addFiles(files, editorIndex) {\n          const { eventTarget, rect } = this;\n          let promise = Promise.resolve([]);\n          filePromises(files, rect).forEach(filePromise => {\n              promise = promise.then(mediaObjects => {\n                  idGenerate('activity');\n                  // const info: UnknownRecord = { id, type: ActivityType.Analyze }\n                  // eventTarget.emit(EventType.Active, info)\n                  return filePromise.then(orError => {\n                      const { mediaObject, error } = orError;\n                      // const activityInfo = { ...info }\n                      if (isMediaObject(mediaObject)) {\n                          mediaObjects.push(mediaObject);\n                          // activityInfo.label = mediaObject.label || mediaObject.id\n                          // activityInfo.type = ActivityType.Complete\n                      }\n                      else {\n                          console.log(this.constructor.name, 'addFiles NOT media object', mediaObject);\n                          // const errorObject = error || errorName(ErrorName.Internal)\n                          // const { message } = errorObject\n                          // activityInfo.label = message\n                          // activityInfo.type = ActivityType.Error\n                          // activityInfo.error = errorObject\n                      }\n                      // eventTarget.emit(EventType.Active, activityInfo)\n                      return mediaObjects;\n                  });\n              });\n          });\n          return promise.then(objects => {\n              return this.addMedia(objects, editorIndex).then(definitions => {\n                  if (definitions.length) {\n                      const definitionTypes = arrayUnique(definitions.map(object => object.type));\n                      this.eventTarget.emit(exports.EventType.Added, { definitionTypes });\n                  }\n                  return definitions;\n              });\n          });\n      }\n      addMedia(object, editorIndex) {\n          const objects = isArray(object) ? object : [object];\n          if (!objects.length)\n              return Promise.resolve([]);\n          const definitions = objects.map(definitionObject => {\n              assertPopulatedObject(definitionObject);\n              return this.media.fromObject(definitionObject);\n          });\n          if (!editorIndex)\n              return Promise.resolve(definitions);\n          const clips = definitions.map(definition => {\n              const { id, type } = definition;\n              const clipObject = {};\n              if (definition.isVector)\n                  clipObject.containerId = id;\n              else\n                  clipObject.contentId = id;\n              if (type === AudioType)\n                  clipObject.containerId = '';\n              return clipInstance(clipObject);\n          });\n          // TODO: check if this needs to be preloaded?\n          return this.addClip(clips, editorIndex).then(() => definitions);\n      }\n      addTrack() {\n          const { mashMedia: mash } = this;\n          const redoSelection = { mash };\n          this.actions.create({\n              redoSelection, type: exports.ActionType.AddTrack, createTracks: 1\n          });\n      }\n      assureMash(clip) {\n          const { selection } = this;\n          const { mash: selectedMash } = selection;\n          if (!isMashMedia(selectedMash)) {\n              const first = isArray(clip) ? clip[0] : clip;\n              const { label } = first.content.definition;\n              const mash = { label, media: [], id: idTemporary() };\n              return this.load(mash);\n          }\n          return Promise.resolve();\n      }\n      autoplay = Default.editor.autoplay;\n      _buffer = Default.editor.buffer;\n      get buffer() { return this._buffer; }\n      set buffer(value) {\n          const number = Number(value);\n          if (this._buffer !== number) {\n              this._buffer = number;\n              const { mashMedia } = this;\n              if (mashMedia)\n                  mashMedia.buffer = number;\n          }\n      }\n      can(masherAction) {\n          const { selection } = this;\n          const { track, clip, mash } = selection;\n          switch (masherAction) {\n              case exports.MasherAction.Save: return this.actions.canSave;\n              case exports.MasherAction.Undo: return this.actions.canUndo;\n              case exports.MasherAction.Redo: return this.actions.canRedo;\n              case exports.MasherAction.Remove: return !!(clip || track);\n              case exports.MasherAction.Render: return !this.actions.canSave && !!(mash?.id && !idIsTemporary(mash.id));\n          }\n      }\n      clearActions() {\n          if (!this.actions.instances.length)\n              return;\n          this.actions = new Actions(this);\n          this.eventTarget.emit(exports.EventType.Action);\n      }\n      get clips() { return this.mashMedia?.clips || []; }\n      create() { return this.load({ id: idTemporary() }); }\n      get currentTime() {\n          const { mashMedia: mash } = this;\n          if (mash && mash.drawnTime)\n              return mash.drawnTime.seconds;\n          return 0;\n      }\n      define(objectOrArray) {\n          const objects = Array.isArray(objectOrArray) ? objectOrArray : [objectOrArray];\n          objects.forEach(object => {\n              const { id, type } = object;\n              assertPopulatedString(id, 'define id');\n              if (this.media.installed(id)) {\n                  // redefining...\n                  console.warn(this.constructor.name, \"define NOT redefining\", id);\n                  return;\n              }\n              const definition = mediaDefinition(object);\n              this.media.install(definition);\n          });\n      }\n      get definitions() {\n          const { mashMedia } = this;\n          if (!mashMedia)\n              return [];\n          return mashMedia.definitionIds.map(id => this.media.fromId(id));\n      }\n      get definitionsUnsaved() {\n          const { definitions } = this;\n          return definitions.filter(definition => {\n              const { type, id } = definition;\n              if (!isLoadType(type))\n                  return false;\n              return idIsTemporary(id);\n          });\n      }\n      destroy() {\n          const { mashMedia } = this;\n          if (mashMedia) {\n              this.paused = true;\n              mashMedia.destroy();\n              delete this.mashMedia;\n              this.clearActions();\n              this.selection.clear();\n              this.media.undefineAll();\n          }\n      }\n      dragging = false;\n      drawTimeout;\n      get duration() { return this.mashMedia?.duration || 0; }\n      _editType;\n      get editType() {\n          return this._editType ||= VideoType;\n      }\n      editing;\n      get endTime() {\n          const { mashMedia: mash } = this;\n          return mash ? mash.endTime.scale(this.fps, 'floor') : timeFromArgs();\n      }\n      eventTarget = new Emitter();\n      _fps = Default.editor.fps;\n      get fps() {\n          return this._fps || this.mashMedia?.quantize || Default.editor.fps;\n      }\n      set fps(value) {\n          const number = Number(value);\n          // setting to zero means fallback to mash rate\n          if (this._fps !== number) {\n              this._fps = number;\n              this.eventTarget.emit(exports.EventType.Fps);\n              this.time = this.time.scale(this.fps);\n          }\n      }\n      get frame() { return this.time.frame; }\n      set frame(value) { this.goToTime(timeFromArgs(Number(value), this.fps)); }\n      get frames() { return this.endTime.frame; }\n      get gain() { return this.muted ? 0.0 : this.volume; }\n      goToTime(value) {\n          const { fps, time } = this;\n          const { frame: currentFrame } = time;\n          const goTime = value ? value.scaleToFps(fps) : timeFromArgs(0, fps);\n          const { frame: attemptFrame } = goTime;\n          const { frame: endFrame } = this.endTime;\n          const lastFrame = endFrame - 1;\n          const goFrame = lastFrame < 1 ? 0 : Math.min(attemptFrame, lastFrame);\n          if (value && currentFrame === goFrame)\n              return Promise.resolve();\n          const promise = this.mashMedia?.seekToTime(timeFromArgs(goFrame, fps));\n          if (promise)\n              return promise;\n          return Promise.resolve();\n      }\n      handleAction(action) {\n          const { mashMedia } = this;\n          assertTrue(mashMedia);\n          // console.log(this.constructor.name, \"handleAction\")\n          const { selection } = action;\n          const { mash } = selection;\n          if (isMashMedia(mash)) {\n              mash.clearPreview();\n              if (action instanceof ChangeAction) {\n                  const { property, target } = action;\n                  switch (property) {\n                      case \"gain\": {\n                          if (isClip(target)) {\n                              mash.composition.adjustClipGain(target, mash.quantize);\n                          }\n                          break;\n                      }\n                  }\n              }\n          }\n          this.selection.object = selection;\n          // console.log(this.constructor.name, \"handleAction\", this.selection.selectTypes, selection)\n          const promise = mashMedia.reload() || Promise.resolve();\n          promise.then(() => {\n              if (!mash)\n                  this.handleDraw();\n              // console.log(this.constructor.name, \"handleAction\", type)\n              this.eventTarget.emit(exports.EventType.Action, { action });\n          });\n      }\n      handleDraw(event) {\n          // console.log(this.constructor.name, \"handleDraw\")\n          if (this.drawTimeout || !this.mashMedia?.loading)\n              return;\n          this.drawTimeout = setTimeout(() => {\n              // console.log(this.constructor.name, \"handleDraw drawTimeout\")\n              this.eventTarget.dispatch(exports.EventType.Draw);\n              delete this.drawTimeout;\n          }, 10);\n      }\n      load(data) {\n          this.mashMediaObject = data;\n          // console.log(this.constructor.name, \"load\", data)\n          return this.loadMashMediaObject();\n      }\n      loadMashMediaObject() {\n          const { rect, mashMediaObject } = this;\n          assertObject(mashMediaObject, 'mashMediaObject');\n          const { kind } = mashMediaObject;\n          if (!sizeAboveZero(rect)) {\n              if (kind !== AudioType)\n                  return Promise.resolve();\n          }\n          delete this.mashMediaObject;\n          return this.mashMediaObjectLoadPromise(mashMediaObject).then(() => {\n              return this.goToTime().then(() => {\n                  const { mashMedia: mash } = this;\n                  if (isMashMedia(mash))\n                      mash.clearPreview();\n                  if (this.autoplay)\n                      this.paused = false;\n              });\n          });\n      }\n      loadMashAndDraw() {\n          const { mashMedia } = this;\n          assertMashMedia(mashMedia);\n          const args = { editing: true, visible: true };\n          if (!this.paused)\n              args.audible = true;\n          return mashMedia.loadPromise(args).then(() => { mashMedia.draw(); });\n      }\n      mashMedia;\n      // { return this.mashMedia }\n      // private mashMedia?: MashMedia\n      // private get mashMediaUNUSED(): MashMedia {\n      //   console.trace('mashMedia')\n      //   return this.mashMedia ||= this.mashMediaInitialize\n      // }\n      // private get mashMediaInitialize(): MashMedia {\n      //   const { mashMediaObject = { id: idTemporary() } } = this\n      //   return this.mashMediaFromObject(mashMediaObject)\n      // }\n      mashMediaFromObject(mashAndMedia) {\n          const { rect, buffer, gain, loop } = this;\n          const editorArgs = {\n              ...mashAndMedia,\n              mediaCollection: this.media,\n              editor: this, emitter: this.eventTarget,\n              size: sizeCopy(rect),\n              buffer, gain, loop\n          };\n          this.destroy();\n          return this.mashMedia = mashMedia(mashAndMedia, editorArgs);\n      }\n      mashMediaObject;\n      mashMediaObjectLoadPromise(object) {\n          const mash = this.mashMediaFromObject(object);\n          return mash.loadPromise({ editing: true, visible: true }).then(() => {\n              this.selection.set(mash);\n              this.handleDraw();\n          });\n      }\n      _loop = Default.editor.loop;\n      get loop() { return this._loop; }\n      set loop(value) {\n          const boolean = !!value;\n          this._loop = boolean;\n          const { mashMedia: mash } = this;\n          if (mash)\n              mash.loop = boolean;\n      }\n      media = new MediaCollection();\n      move(object, editorIndex = {}) {\n          assertPopulatedObject(object, 'clip');\n          if (isClip(object)) {\n              this.moveClip(object, editorIndex);\n              return;\n          }\n          assertEffect(object);\n          const { clip: frameOrIndex = 0 } = editorIndex;\n          this.moveEffect(object, frameOrIndex);\n      }\n      moveClip(clip, editorIndex = {}) {\n          assertClip(clip);\n          const { clip: frameOrIndex = 0, track: track = 0 } = editorIndex;\n          assertPositive(frameOrIndex);\n          const { mashMedia: mash } = this;\n          assertMashMedia(mash);\n          const { tracks } = mash;\n          const { trackNumber: undoTrack } = clip;\n          const options = {\n              clip,\n              trackIndex: track,\n              undoTrackIndex: undoTrack,\n              type: exports.ActionType.MoveClip\n          };\n          const creating = !isPositive(track);\n          if (creating)\n              options.createTracks = 1;\n          const undoDense = isPositive(undoTrack) && tracks[undoTrack].dense;\n          const redoDense = isPositive(track) && tracks[track].dense;\n          const currentIndex = creating ? -1 : tracks[track].clips.indexOf(clip);\n          if (redoDense)\n              options.insertIndex = frameOrIndex;\n          if (undoDense) {\n              options.undoInsertIndex = currentIndex;\n              if (frameOrIndex < currentIndex)\n                  options.undoInsertIndex += 1;\n          }\n          if (!(redoDense && undoDense)) {\n              const { frame } = clip;\n              const insertFrame = creating ? 0 : tracks[track].frameForClipNearFrame(clip, frameOrIndex);\n              const offset = insertFrame - frame;\n              if (!offset && track === undoTrack)\n                  return; // no change\n              options.undoFrame = frame;\n              options.redoFrame = frame + offset;\n          }\n          this.actions.create(options);\n      }\n      moveEffect(effect, index) {\n          const { selection, actions } = this;\n          const { clip, mash } = selection;\n          assertClip(clip);\n          assertMashMedia(mash);\n          const { content } = clip;\n          assertContent(content);\n          const objects = content.effects;\n          const currentIndex = objects.indexOf(effect);\n          const posIndex = isPositive(index) ? index : objects.length;\n          const spliceIndex = currentIndex < posIndex ? posIndex - 1 : posIndex;\n          const redoObjects = objects.filter(e => e !== effect);\n          redoObjects.splice(spliceIndex, 0, effect);\n          const options = {\n              type: exports.ActionType.Move,\n              objects,\n              undoObjects: [...objects],\n              redoObjects,\n          };\n          actions.create(options);\n          mash.draw();\n      }\n      // moveLayer(layer: Layer, layerAndPosition?: LayerAndPosition): void {\n      //   const { cast } = this.selection\n      //   assertCast(cast)\n      //   assertLayer(layer)\n      //   const redoSelection: EditorSelectionObject = { cast, layer }\n      //   const options = { type: ActionType.MoveLayer, redoSelection, layerAndPosition }\n      //   this.actions.create(options)\n      // }\n      moveTrack() {\n          // TODO: create move track action...\n          console.debug(this.constructor.name, \"moveTrack coming soon...\");\n      }\n      _muted = false;\n      get muted() { return this._muted; }\n      set muted(value) {\n          const boolean = !!value;\n          if (this._muted !== boolean) {\n              this._muted = boolean;\n              const { mashMedia: mash } = this;\n              if (mash)\n                  mash.gain = this.gain;\n          }\n      }\n      pause() { this.paused = true; }\n      get paused() {\n          const { mashMedia: mash } = this;\n          return mash ? mash.paused : true;\n      }\n      set paused(value) {\n          const { mashMedia: mash } = this;\n          if (mash)\n              mash.paused = value;\n          // bring back selection\n          if (value)\n              this.redraw();\n      }\n      play() { this.paused = false; }\n      get position() {\n          let per = 0;\n          if (this.time.frame) {\n              per = this.time.seconds / this.duration;\n              if (per !== 1)\n                  per = parseFloat(per.toFixed(this.precision));\n          }\n          return per;\n      }\n      set position(value) {\n          this.goToTime(timeFromSeconds(this.duration * Number(value), this.fps));\n      }\n      get positionStep() {\n          return parseFloat(`0.${\"0\".repeat(this.precision - 1)}1`);\n      }\n      precision = Default.editor.precision;\n      readOnly = false;\n      _rect;\n      get rect() { return this._rect; }\n      set rect(value) {\n          assertSizeAboveZero(value);\n          if (rectsEqual(this.rect, value))\n              return;\n          this._rect = value;\n          const { mashMediaObject } = this;\n          // console.log(this.constructor.name, \"rect\", rect, \"=>\", value, !!editedData)\n          const promise = mashMediaObject ? this.loadMashMediaObject() : Promise.resolve();\n          promise.then(() => {\n              const { mashMedia, rect, eventTarget } = this;\n              if (!mashMedia)\n                  return;\n              mashMedia.imageSize = sizeCopy(rect);\n              eventTarget.emit(exports.EventType.Resize, { rect: value });\n              this.redraw();\n          });\n      }\n      redo() { if (this.actions.canRedo)\n          this.handleAction(this.actions.redo()); }\n      redraw() {\n          const { mashMedia } = this;\n          if (!mashMedia)\n              return;\n          mashMedia.clearPreview();\n          this.eventTarget.dispatch(exports.EventType.Draw);\n      }\n      removeClip(clip) {\n          const { mashMedia } = this;\n          assertMashMedia(mashMedia);\n          const { track } = clip;\n          const { clip: _, ...redoSelection } = this.selection;\n          const options = {\n              redoSelection,\n              clip,\n              track,\n              index: track.clips.indexOf(clip),\n              type: exports.ActionType.RemoveClip\n          };\n          this.actions.create(options);\n      }\n      removeEffect(effect) {\n          const { selection, actions } = this;\n          const { clip, mash } = selection;\n          assertClip(clip);\n          assertMashMedia(mash);\n          const { content } = clip;\n          assertContent(content);\n          const objects = content.effects;\n          const options = {\n              type: exports.ActionType.Move,\n              objects: objects,\n              undoObjects: [...objects],\n              redoObjects: objects.filter(other => other !== effect),\n          };\n          actions.create(options);\n          mash.draw();\n      }\n      // removeLayer(layer: Layer): void {\n      //   const { cast } = this.selection\n      //   assertCast(cast)\n      //   const redoSelection: EditorSelectionObject = { cast, layer }\n      //   this.actions.create({ type: ActionType.RemoveLayer, redoSelection })\n      // }\n      removeTrack(track) {\n          // TODO: create remove track action...\n          console.debug(this.constructor.name, \"removeTrack coming soon...\");\n      }\n      saved(temporaryIdLookup) {\n          if (temporaryIdLookup) {\n              const { mashMedia } = this;\n              assertTrue(mashMedia);\n              Object.entries(temporaryIdLookup).forEach(([temporaryId, permanentId]) => {\n                  if (mashMedia.id === temporaryId) {\n                      mashMedia.id = permanentId;\n                  }\n                  else if (this.media.installed(temporaryId)) {\n                      this.media.updateDefinitionId(temporaryId, permanentId);\n                  }\n                  else\n                      console.warn(this.constructor.name, 'saved could not find', temporaryId);\n              });\n          }\n          this.actions.save();\n          this.eventTarget.emit(exports.EventType.Action);\n      }\n      _selection;\n      get selection() {\n          if (this._selection)\n              return this._selection;\n          const selection = editorSelectionInstance();\n          selection.editor = this;\n          return this._selection = selection;\n      }\n      get svgElement() { return svgElement(); }\n      set svgElement(value) { svgElementInitialize(value); }\n      previewItems(enabled) {\n          const { mashMedia, rect } = this;\n          const color = mashMedia ? mashMedia.color : undefined;\n          const size = sizeCopy(rect);\n          const colorElement = svgSvgElement(size, svgPolygonElement(size, '', color));\n          const promise = Promise.resolve([colorElement]);\n          if (!mashMedia)\n              return promise;\n          const editor = (enabled && this.paused) ? this : undefined;\n          return promise.then(elements => {\n              return mashMedia.previewItemsPromise(editor).then(items => {\n                  return [...elements, ...items];\n              });\n          });\n      }\n      get time() { return this.mashMedia?.time || timeFromArgs(0, this.fps); }\n      set time(value) { this.goToTime(value); }\n      get timeRange() {\n          return this.mashMedia?.timeRange || timeRangeFromArgs(0, this.fps);\n      }\n      undo() {\n          const { canUndo } = this.actions;\n          if (canUndo)\n              this.handleAction(this.actions.undo());\n      }\n      unload() {\n          this.destroy();\n      }\n      updateDefinition(definitionObject, definition) {\n          const { id: newId, type: newType } = definitionObject;\n          const id = definitionObject.id || definition.id;\n          assertPopulatedString(id);\n          const target = definition || this.media.fromId(newId);\n          const { id: oldId } = target;\n          const idChanged = oldId !== id;\n          console.log(this.constructor.name, \"updateDefinition\", idChanged, definitionObject);\n          if (idChanged) {\n              this.media.updateDefinitionId(target.id, id);\n              console.log(this.constructor.name, \"updateDefinition called updateDefinitionId\", target.id, id);\n              Object.assign(target, definitionObject);\n              if (isMedia(target)) {\n                  delete target.request.response;\n                  if (isVideoMedia(target))\n                      delete target.loadedVideo;\n                  if (isUpdatableDurationDefinition(target))\n                      delete target.loadedAudio;\n                  if (isImageMedia(target))\n                      delete target.loadedImage;\n              }\n          }\n          const { mashMedia } = this;\n          if (!(mashMedia && idChanged))\n              return Promise.resolve();\n          const { tracks } = mashMedia;\n          const clips = tracks.flatMap(track => track.clips);\n          clips.forEach(clip => {\n              if (clip.containerId === oldId)\n                  clip.setValue(newId, 'containerId');\n              if (clip.contentId === oldId)\n                  clip.setValue(newId, 'contentId');\n          });\n          return this.loadMashAndDraw();\n      }\n      _volume = Default.editor.volume;\n      get volume() { return this._volume; }\n      set volume(value) {\n          const number = Number(value);\n          if (this._volume !== number) {\n              assertPositive(number);\n              this._volume = number;\n              if (isAboveZero(number))\n                  this.muted = false;\n              const { mashMedia: mash } = this;\n              if (mash)\n                  mash.gain = this.gain;\n              this.eventTarget.emit(exports.EventType.Volume);\n          }\n      }\n  }\n\n  exports.editorSingleton = void 0;\n  const editorArgs = (options = {}) => {\n      return {\n          autoplay: Default.editor.autoplay,\n          precision: Default.editor.precision,\n          loop: Default.editor.loop,\n          fps: Default.editor.fps,\n          volume: Default.editor.volume,\n          buffer: Default.editor.buffer,\n          ...options\n      };\n  };\n  const editorInstance = (options = {}) => {\n      return exports.editorSingleton = new EditorClass(editorArgs(options));\n  };\n\n  const isSelectedProperty = (value) => {\n      return isObject(value) && \"changeHandler\" in value;\n  };\n  const selectedPropertyObject = (properties, group, selectType) => {\n      const filtered = properties.filter(prop => {\n          if (!isSelectedProperty(prop))\n              return false;\n          return prop.property.group === group && prop.selectType === selectType;\n      });\n      // console.log(\"selectedPropertyObject\", properties.length, filtered.length, group, selectType)\n      const byName = Object.fromEntries(filtered.map(selected => {\n          const { name: nameOveride, property } = selected;\n          const { name } = property;\n          return [nameOveride || name, selected];\n      }));\n      return byName;\n  };\n  const selectedPropertiesScalarObject = (byName) => {\n      return Object.fromEntries(Object.entries(byName).map(entry => {\n          return [entry[0], entry[1].value];\n      }));\n  };\n\n  const AudioWithTweenable = TweenableMixin(MediaInstanceBase);\n  const AudioWithContent = ContentMixin(AudioWithTweenable);\n  const AudioWithUpdatableDuration = UpdatableDurationMixin(AudioWithContent);\n  class AudioClass extends AudioWithUpdatableDuration {\n      contentPreviewItemPromise(containerRect, time, range, component) {\n          console.trace(this.constructor.name, 'contentPreviewItemPromise');\n          return Promise.resolve(svgPolygonElement(containerRect, '', 'currentColor'));\n      }\n      mutable() { return true; }\n  }\n\n  const AudioMediaWithTweenable = TweenableDefinitionMixin(MediaBase);\n  const AudioMediaWithContent = ContentDefinitionMixin(AudioMediaWithTweenable);\n  const AudioMediaWithUpdatableDuration = UpdatableDurationDefinitionMixin(AudioMediaWithContent);\n  class AudioMediaClass extends AudioMediaWithUpdatableDuration {\n      instanceFromObject(object = {}) {\n          return new AudioClass(this.instanceArgs(object));\n      }\n      loadPromise(args) {\n          const { editing, audible } = args;\n          if (!audible)\n              return Promise.resolve();\n          const { loadedAudio } = this;\n          if (loadedAudio)\n              return Promise.resolve();\n          const transcoding = editing ? this.preferredTranscoding(AudioType) : this;\n          const { request } = transcoding;\n          return requestAudioPromise(request).then(orError => {\n              if (isDefiniteError(orError))\n                  return errorThrow(orError.error);\n              const { data: clientAudio } = orError;\n              this.loadedAudio = clientAudio;\n          });\n      }\n      type = AudioType;\n  }\n\n  const audioDefinition = (object) => {\n      const { id } = object;\n      if (!id)\n          return errorThrow(ErrorName.MediaId);\n      return new AudioMediaClass(object);\n  };\n  const audioDefinitionFromId = (id) => {\n      return audioDefinition({ id });\n  };\n  const audioInstance = (object) => {\n      const { mediaId: id, definition: defined } = object;\n      const definition = defined || audioDefinitionFromId(id);\n      const instance = definition.instanceFromObject(object);\n      return instance;\n  };\n  const audioFromId = (id) => {\n      return audioInstance({ id });\n  };\n  MediaFactories[AudioType] = audioDefinition;\n\n  const isShapeContainer = (value) => {\n      return isContainer(value) && \"path\" in value;\n  };\n\n  const ShapeContainerWithTweenable = TweenableMixin(MediaInstanceBase);\n  const ShapeContainerWithContainer = ContainerMixin(ShapeContainerWithTweenable);\n  class ShapeContainerClass extends ShapeContainerWithContainer {\n      constructor(...args) {\n          super(...args);\n          const [object] = args;\n          this.addProperties(object, propertyInstance({\n              tweenable: true, name: 'width', type: exports.DataType.Percent,\n              group: exports.DataGroup.Size, defaultValue: 1.0, max: 2.0\n          }));\n          this.addProperties(object, propertyInstance({\n              tweenable: true, name: 'height', type: exports.DataType.Percent,\n              group: exports.DataGroup.Size, defaultValue: 1.0, max: 2.0\n          }));\n      }\n      audibleCommandFiles(args) {\n          throw new Error(\"Method not implemented.\");\n      }\n      audibleCommandFilters(args) {\n          throw new Error(\"Method not implemented.\");\n      }\n      contentPreviewItemPromise(containerRect, time, range, component) {\n          throw new Error(\"Method not implemented.\");\n      }\n      contentRects(args) {\n          throw new Error(\"Method not implemented.\");\n      }\n      contentSvgFilter(contentItem, outputSize, containerRect, time, clipTime) {\n          throw new Error(\"Method not implemented.\");\n      }\n      contentSvgItemPromise(containerRect, time, range, component) {\n          throw new Error(\"Method not implemented.\");\n      }\n      effects = [];\n      effectsCommandFiles(args) {\n          throw new Error(\"Method not implemented.\");\n      }\n      svgItemForPlayerPromise(rect, time, range) {\n          throw new Error(\"Method not implemented.\");\n      }\n      svgItemForTimelinePromise(rect, time, range) {\n          throw new Error(\"Method not implemented.\");\n      }\n      canColor(args) {\n          const { isDefault } = this;\n          // default rect has no content to colorize, so needs color filter input\n          if (isDefault)\n              return false;\n          // shape files can only colorize a single color at a single size\n          return !this.isTweeningColor(args);\n      }\n      containerColorCommandFilters(args) {\n          const commandFilters = [];\n          // i am either default rect or a shape tweening color\n          const { colorFilter, isDefault } = this;\n          const { contentColors, containerRects, videoRate, duration } = args;\n          assertPopulatedArray(contentColors, 'contentColors');\n          const [rect, rectEnd] = containerRects;\n          const [color, colorEnd] = contentColors;\n          const maxSize = isDefault ? rect : tweenMaxSize(...containerRects);\n          const colorArgs = { videoRate, duration };\n          colorFilter.setValue(color || colorWhite, 'color');\n          colorFilter.setValue(colorEnd, `color${PropertyTweenSuffix}`);\n          colorFilter.setValue(maxSize.width, 'width');\n          colorFilter.setValue(maxSize.height, 'height');\n          const tweenSize = isDefault;\n          colorFilter.setValue(tweenSize ? rectEnd.width : undefined, `width${PropertyTweenSuffix}`);\n          colorFilter.setValue(tweenSize ? rectEnd.height : undefined, `height${PropertyTweenSuffix}`);\n          commandFilters.push(...colorFilter.commandFilters(colorArgs));\n          return commandFilters;\n      }\n      containerCommandFilters(args, tweening) {\n          const commandFilters = [];\n          const { contentColors: colors, commandFiles, filterInput: input } = args;\n          let filterInput = input;\n          // console.log(this.constructor.name, \"containerCommandFilters\", filterInput)\n          const noContentFilters = isPopulatedArray(colors);\n          const alpha = this.requiresAlpha(args, !!tweening.size);\n          if (alpha) {\n              assertPopulatedString(filterInput, 'container input');\n              const { contentColors: _, ...argsWithoutColors } = args;\n              const superArgs = {\n                  ...argsWithoutColors, filterInput\n              };\n              commandFilters.push(...super.containerCommandFilters(superArgs, tweening));\n          }\n          else if (this.isDefault || noContentFilters) {\n              const { id } = this;\n              // if (!filterInput) console.log(this.constructor.name, \"containerCommandFilters calling commandFilesInput\", id)\n              filterInput ||= commandFilesInput(commandFiles, id, true);\n              assertPopulatedString(filterInput, 'final input');\n              commandFilters.push(...this.containerFinalCommandFilters({ ...args, filterInput }));\n          }\n          return commandFilters;\n      }\n      hasIntrinsicSizing = true;\n      initialCommandFilters(args, tweening, container = false) {\n          const commandFilters = [];\n          const { contentColors, ...argsWithoutColors } = args;\n          const { commandFiles, track, filterInput: input, containerRects, videoRate } = argsWithoutColors;\n          let filterInput = input;\n          const alpha = this.requiresAlpha(args, !!tweening.size);\n          const { isDefault } = this;\n          const tweeningSize = tweening.size; // !(isDefault ? rectsEqual(...containerRects) : sizesEqual(...containerRects))\n          const maxSize = tweeningSize ? tweenMaxSize(...containerRects) : containerRects[0];\n          const evenSize = sizeEven(maxSize);\n          const contentInput = `content-${track}`;\n          const containerInput = `container-${track}`;\n          if (!tweening.canColor) {\n              if (isPopulatedString(filterInput) && !isDefault) {\n                  if (alpha) {\n                      const formatFilter = 'format';\n                      const formatFilterId = idGenerate(formatFilter);\n                      const formatCommandFilter = {\n                          inputs: [filterInput], ffmpegFilter: formatFilter,\n                          options: { pix_fmts: 'yuv420p' },\n                          outputs: [formatFilterId]\n                      };\n                      commandFilters.push(formatCommandFilter);\n                      filterInput = formatFilterId;\n                  }\n                  else if (!sizesEqual(evenSize, maxSize)) {\n                      const colorArgs = {\n                          ...args,\n                          contentColors: [colorBlackOpaque, colorBlackOpaque],\n                          outputSize: evenSize\n                      };\n                      commandFilters.push(...this.colorBackCommandFilters(colorArgs, `${contentInput}-back`));\n                      const colorInput = arrayLast(arrayLast(commandFilters).outputs);\n                      assertPopulatedString(filterInput, 'overlay input');\n                      commandFilters.push(...this.overlayCommandFilters(colorInput, filterInput));\n                      filterInput = arrayLast(arrayLast(commandFilters).outputs);\n                  }\n              }\n          }\n          if (commandFilters.length)\n              arrayLast(commandFilters).outputs = [contentInput];\n          else if (isPopulatedString(filterInput) && contentInput !== filterInput) {\n              commandFilters.push(this.copyCommandFilter(filterInput, track));\n          }\n          if (alpha) {\n              const { id } = this;\n              // console.log(this.constructor.name, \"initialCommandFilters ALPHA calling commandFilesInput\", id)\n              const fileInput = commandFilesInput(commandFiles, id, true);\n              assertPopulatedString(fileInput, 'scale input');\n              const colorArgs = {\n                  ...args,\n                  contentColors: [colorBlackOpaque, colorBlackOpaque],\n                  outputSize: maxSize\n              };\n              commandFilters.push(...this.colorBackCommandFilters(colorArgs, `${containerInput}-back`));\n              const colorInput = arrayLast(arrayLast(commandFilters).outputs);\n              commandFilters.push(...this.scaleCommandFilters({ ...args, filterInput: fileInput }));\n              filterInput = arrayLast(arrayLast(commandFilters).outputs);\n              assertPopulatedString(filterInput, 'overlay input');\n              commandFilters.push(...this.overlayCommandFilters(colorInput, filterInput));\n              filterInput = arrayLast(arrayLast(commandFilters).outputs);\n              const cropArgs = { duration: 0, videoRate };\n              assertPopulatedString(filterInput, 'crop input');\n              const { cropFilter } = this;\n              cropFilter.setValue(maxSize.width, \"width\");\n              cropFilter.setValue(maxSize.height, \"height\");\n              cropFilter.setValue(0, \"x\");\n              cropFilter.setValue(0, \"y\");\n              commandFilters.push(...cropFilter.commandFilters({ ...cropArgs, filterInput }));\n              filterInput = arrayLast(arrayLast(commandFilters).outputs);\n              assertPopulatedString(filterInput, 'format input');\n              const formatFilter = 'format';\n              const formatCommandFilter = {\n                  inputs: [filterInput], ffmpegFilter: formatFilter,\n                  options: { pix_fmts: alpha ? 'yuv420p' : 'yuva420p' },\n                  outputs: [containerInput]\n              };\n              commandFilters.push(formatCommandFilter);\n          }\n          return commandFilters;\n      }\n      intrinsicRect(editing = false) {\n          const { pathHeight: height, pathWidth: width } = this.definition;\n          // console.log(this.constructor.name, \"intrinsicRect\", this.definition)\n          return { width, height, ...PointZero };\n      }\n      intrinsicsKnown(options) {\n          return true;\n      }\n      isTweeningColor(args) {\n          const { contentColors } = args;\n          if (!isPopulatedArray(contentColors))\n              return false;\n          let [forecolor, forecolorEnd] = contentColors;\n          return forecolor !== forecolorEnd;\n      }\n      isTweeningSize(args) {\n          const { containerRects } = args;\n          if (!isPopulatedArray(containerRects)) {\n              // console.log(this.constructor.name, \"isTweeningSize FALSE BECAUSE containerRects NOT ARRAY\", args)\n              return false;\n          }\n          const equal = rectsEqual(...containerRects);\n          return !equal;\n      }\n      loadPromise(args) {\n          return Promise.resolve();\n      }\n      pathElement(rect, forecolor = '') {\n          const { definition } = this;\n          const inRect = this.intrinsicRect(true);\n          if (!sizeAboveZero(inRect)) {\n              const polygonElement = svgPolygonElement(rect, '', forecolor);\n              return polygonElement;\n          }\n          const { path } = definition;\n          const pathElement = svgPathElement(path, '');\n          svgSetTransformRects(pathElement, inRect, rect);\n          return pathElement;\n      }\n      requiresAlpha(args, tweeningSize) {\n          const { contentColors } = args;\n          const colorContent = isPopulatedArray(contentColors);\n          if (this.isDefault) {\n              if (colorContent)\n                  return false; // can always make colored boxes\n              if (isBoolean(tweeningSize))\n                  return tweeningSize;\n              return this.isTweeningSize(args); // need mask to dynamically crop content\n          }\n          if (!colorContent)\n              return true; // always need to mask content\n          return this.isTweeningColor(args); //tweeningSize || \n      }\n      visibleCommandFiles(args) {\n          const { isDefault, id } = this;\n          const alpha = this.requiresAlpha(args);\n          const tweeningColor = this.isTweeningColor(args);\n          if (isDefault && !alpha) {\n              // console.log(this.constructor.name, \"commandFiles NONE\", id, isDefault, alpha, tweeningColor)\n              return [];\n          }\n          const { definition } = this;\n          const { path } = definition;\n          const { contentColors: colors = [], containerRects, time, videoRate } = args;\n          assertPopulatedArray(containerRects, 'containerRects');\n          const duration = isTimeRange(time) ? time.lengthSeconds : 0;\n          const [rect, rectEnd] = containerRects;\n          const maxSize = { ...PointZero, ...tweenMaxSize(rect, rectEnd) };\n          const { width: maxWidth, height: maxHeight } = maxSize;\n          let [forecolor] = colors;\n          if (alpha)\n              forecolor = colorWhite;\n          else if (tweeningColor)\n              forecolor = colorBlack;\n          let fill = 'none';\n          if (isDefault)\n              fill = colorWhite;\n          else if (alpha)\n              fill = colorBlack;\n          const intrinsicRect = isDefault ? maxSize : this.intrinsicRect();\n          const { width: inWidth, height: inHeight } = intrinsicRect;\n          const dimensionsString = `width=\"${inWidth}\" height=\"${inHeight}\"`;\n          const transformAttribute = svgTransform(intrinsicRect, maxSize);\n          const tags = [];\n          tags.push(`<svg viewBox=\"0 0 ${maxWidth} ${maxHeight}\" xmlns=\"${NamespaceSvg}\">`);\n          tags.push(`<g ${dimensionsString} transform=\"${transformAttribute}\" >`);\n          tags.push(`<rect ${dimensionsString} fill=\"${fill}\"/>`);\n          if (!isDefault)\n              tags.push(`<path d=\"${path}\" fill=\"${forecolor}\"/>`);\n          tags.push(\"</g>\");\n          tags.push(\"</svg>\");\n          const svgTag = tags.join(\"\");\n          const options = {};\n          if (duration) {\n              options.loop = 1;\n              options.framerate = videoRate;\n              options.t = duration;\n              // options.re = ''\n          }\n          const commandFile = {\n              type: exports.GraphFileType.Svg, file: id, content: svgTag,\n              input: true, inputId: id, definition, options\n          };\n          return [commandFile];\n      }\n  }\n\n  const ShapeContainerDefinitionWithTweenable = TweenableDefinitionMixin(MediaBase);\n  const ShapeContainerDefinitionWithContainer = ContainerDefinitionMixin(ShapeContainerDefinitionWithTweenable);\n  class ShapeContainerDefinitionClass extends ShapeContainerDefinitionWithContainer {\n      constructor(...args) {\n          const [object] = args;\n          super(object);\n          const { path, pathHeight, pathWidth } = object;\n          if (path)\n              this.path = path;\n          if (isAboveZero(pathWidth))\n              this.pathWidth = pathWidth;\n          if (isAboveZero(pathHeight))\n              this.pathHeight = pathHeight;\n      }\n      definitionIcon(size) {\n          const { id, pathHeight: height, pathWidth: width, path } = this;\n          if (id === DefaultContainerId) {\n              return Promise.resolve(svgSvgElement(size, svgPolygonElement(size, '', 'currentColor')));\n          }\n          const inSize = { width, height };\n          if (!(sizeAboveZero(inSize) && isPopulatedString(path)))\n              return;\n          const coverSize = sizeCover(inSize, size, true);\n          const outRect = { ...coverSize, ...centerPoint(size, coverSize) };\n          const pathElement = svgPathElement(path);\n          svgSetTransformRects(pathElement, inSize, outRect);\n          return Promise.resolve(svgSvgElement(size, pathElement));\n      }\n      instanceFromObject(object = {}) {\n          return new ShapeContainerClass(this.instanceArgs(object));\n      }\n      isVector = true;\n      path = \"\";\n      pathHeight = 0;\n      pathWidth = 0;\n      toJSON() {\n          const object = super.toJSON();\n          if (this.path)\n              object.path = this.path;\n          if (isAboveZero(this.pathHeight))\n              object.pathHeight = this.pathHeight;\n          if (isAboveZero(this.pathWidth))\n              object.pathWidth = this.pathWidth;\n          return object;\n      }\n      type = ImageType;\n  }\n\n  const stringSeconds = (seconds, fps = 0, lengthSeconds = 0) => {\n      const bits = [];\n      let pad = 2;\n      let time = 60 * 60; // an hour\n      let do_rest = false;\n      const duration = lengthSeconds || seconds;\n      // console.log(\"stringSeconds seconds\", seconds, \"fps\", fps, \"duration\", duration)\n      if (duration >= time) {\n          if (seconds >= time) {\n              bits.push(String(Math.floor(seconds / time)).padStart(pad, '0'));\n              do_rest = true;\n              seconds = seconds % time;\n          }\n          else\n              bits.push('00:');\n      }\n      time = 60; // a minute\n      if (do_rest || (duration >= time)) {\n          // console.log(\"stringSeconds duration\", duration, \">=\", time, \"time\")\n          if (do_rest)\n              bits.push(':');\n          if (seconds >= time) {\n              bits.push(String(Math.floor(seconds / time)).padStart(pad, '0'));\n              do_rest = true;\n              seconds = seconds % time;\n          }\n          else\n              bits.push('00:');\n      }\n      time = 1; // a second\n      if (do_rest || (duration >= time)) {\n          // console.log(\"stringSeconds duration\", duration, \">=\", time, \"time\")\n          if (do_rest)\n              bits.push(':');\n          if (seconds >= time) {\n              // console.log(\"stringSeconds seconds\", seconds, \">=\", time, \"time\")\n              bits.push(String(Math.floor(seconds / time)).padStart(pad, '0'));\n              do_rest = true;\n              seconds = seconds % time;\n          }\n          else {\n              // console.log(\"stringSeconds seconds\", seconds, \"<\", time, \"time\")\n              bits.push('00');\n          }\n      }\n      else {\n          // console.log(\"stringSeconds duration\", duration, \"<\", time, \"time\")\n          bits.push('00');\n      }\n      if (fps > 1) {\n          // console.log(\"stringSeconds fps\", fps, \"> 1\")\n          if (fps === 10)\n              pad = 1;\n          bits.push('.');\n          if (seconds) {\n              // console.log(\"stringSeconds seconds\", seconds, \"true pad\", pad)\n              if (pad === 1)\n                  seconds = Math.round(seconds * 10) / 10;\n              else\n                  seconds = Math.round(100 * seconds) / 100;\n              // console.log(\"stringSeconds seconds\", String(seconds), \"presliced\")\n              seconds = Number(String(seconds).slice(2));\n              // console.log(\"stringSeconds seconds\", seconds, \"sliced\")\n              bits.push(String(seconds).padEnd(pad, '0'));\n              // console.log(\"stringSeconds seconds\", seconds, \"padded\")\n          }\n          else {\n              // console.log(\"stringSeconds seconds\", seconds, \"false\")\n              bits.push('0'.padStart(pad, '0'));\n          }\n      }\n      return bits.join('');\n  };\n  const stringFamilySizeRect = (string, family, size) => {\n      if (!(isPopulatedString(string) && isAboveZero(size)))\n          return RectZero;\n      const { document } = globalThis;\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      assertObject(ctx, 'ctx');\n      ctx.font = `${size}px ${family}`;\n      const metrics = ctx.measureText(string);\n      // const font = new FontFace(family, string)\n      const { actualBoundingBoxAscent, actualBoundingBoxDescent, actualBoundingBoxLeft, actualBoundingBoxRight, } = metrics;\n      // console.log(\"stringFamilySizeRect\", \"actualBoundingBoxAscent\", actualBoundingBoxAscent, \"actualBoundingBoxDescent\", actualBoundingBoxDescent)\n      return {\n          x: actualBoundingBoxLeft, y: actualBoundingBoxAscent,\n          width: actualBoundingBoxLeft + actualBoundingBoxRight,\n          height: actualBoundingBoxAscent + actualBoundingBoxDescent,\n      };\n  };\n  const stringPluralize = (count, value, suffix = 's') => {\n      if (!isPopulatedString(value))\n          return value;\n      return `${count} ${value}${count === 1 ? '' : suffix}`;\n  };\n\n  const FontHeight = 1000;\n  const FontContainerWithTweenable = TweenableMixin(MediaInstanceBase);\n  const FontContainerWithContainer = ContainerMixin(FontContainerWithTweenable);\n  class FontClass extends FontContainerWithContainer {\n      constructor(...args) {\n          const [object] = args;\n          object.lock ||= '';\n          super(...args);\n          const { intrinsic } = object;\n          if (isRect(intrinsic))\n              this._intrinsicRect = intrinsic;\n      }\n      canColor(args) { return true; }\n      canColorTween(args) { return true; }\n      _colorFilter;\n      get colorFilter() { return this._colorFilter ||= filterFromId('color'); }\n      hasIntrinsicSizing = true;\n      initialCommandFilters(args, tweening) {\n          const commandFilters = [];\n          const { contentColors: colors = [], outputSize, track, filterInput: input, containerRects, videoRate, commandFiles, duration } = args;\n          let filterInput = input;\n          // console.log(this.constructor.name, \"initialCommandFilters\", filterInput, tweening)\n          if (filterInput) {\n              commandFilters.push(this.copyCommandFilter(filterInput, track));\n          }\n          const [rect, rectEnd] = containerRects;\n          const { height, width } = rect;\n          // console.log(this.constructor.name, \"initialCommandFilters\", merging, ...containerRects)\n          const maxSize = tweenMaxSize(...containerRects);\n          let colorInput = '';\n          const merging = !!filterInput || tweening.size;\n          if (merging) {\n              const backColor = filterInput ? colorBlack : colorBlackTransparent;\n              const colorArgs = {\n                  ...args,\n                  contentColors: [backColor, backColor],\n                  outputSize: maxSize\n              };\n              commandFilters.push(...this.colorBackCommandFilters(colorArgs));\n              colorInput = arrayLast(arrayLast(commandFilters).outputs);\n          }\n          const textFile = commandFiles.find(commandFile => (commandFile.inputId === this.id && commandFile.type === exports.GraphFileType.Txt));\n          assertTrue(textFile, 'text file');\n          const { resolved: textfile } = textFile;\n          assertPopulatedString(textfile, 'textfile');\n          const fontFile = commandFiles.find(commandFile => (commandFile.inputId === this.id && commandFile.type === FontType));\n          assertTrue(fontFile, 'font file');\n          const { resolved: fontfile } = fontFile;\n          assertPopulatedString(fontfile, 'fontfile');\n          const { textFilter, lock } = this;\n          const intrinsicRect = this.intrinsicRect();\n          const x = intrinsicRect.x * (rect.width / intrinsicRect.width);\n          const y = 0; // intrinsicRect.y * (height / intrinsicRect.height)\n          const [color = colorWhite, colorEnd] = colors;\n          assertPopulatedString(color);\n          const xEnd = intrinsicRect.x * (rectEnd.width / intrinsicRect.width);\n          const yEnd = 0; // intrinsicRect.y * (rectEnd.height / intrinsicRect.height)\n          // console.log(this.constructor.name, \"initialCommandFilters\", lock)\n          const intrinsicRatio = FontHeight / intrinsicRect.height;\n          const textSize = Math.round(height * intrinsicRatio);\n          const textSizeEnd = Math.round(rectEnd.height * intrinsicRatio);\n          const options = {\n              x, y, width, height: textSize, color, textfile, fontfile,\n              stretch: !isOrientation(lock),\n              intrinsicHeight: intrinsicRect.height,\n              intrinsicWidth: intrinsicRect.width,\n              [`x${PropertyTweenSuffix}`]: xEnd,\n              [`y${PropertyTweenSuffix}`]: yEnd,\n              [`color${PropertyTweenSuffix}`]: colorEnd,\n              [`height${PropertyTweenSuffix}`]: textSizeEnd,\n              [`width${PropertyTweenSuffix}`]: rectEnd.width,\n          };\n          textFilter.setValues(options);\n          // console.log(this.constructor.name, \"initialCommandFilters\", options)\n          const textArgs = {\n              dimensions: outputSize, videoRate, duration, filterInput\n          };\n          commandFilters.push(...textFilter.commandFilters(textArgs));\n          if (merging) {\n              filterInput = arrayLast(arrayLast(commandFilters).outputs);\n              assertPopulatedString(filterInput, 'overlay filterInput');\n              commandFilters.push(...this.overlayCommandFilters(colorInput, filterInput));\n              filterInput = arrayLast(arrayLast(commandFilters).outputs);\n              assertPopulatedString(filterInput, 'crop filterInput');\n              const cropArgs = {\n                  duration: 0, videoRate, filterInput\n              };\n              const { cropFilter } = this;\n              cropFilter.setValue(maxSize.width, \"width\");\n              cropFilter.setValue(maxSize.height, \"height\");\n              cropFilter.setValue(0, \"x\");\n              cropFilter.setValue(0, \"y\");\n              commandFilters.push(...cropFilter.commandFilters(cropArgs));\n          }\n          return commandFilters;\n      }\n      _intrinsicRect;\n      intrinsicRect(_ = false) {\n          return this._intrinsicRect ||= this.intrinsicRectInitialize();\n      }\n      intrinsicRectInitialize() {\n          const { family } = this.definition;\n          assertPopulatedString(family);\n          const clipString = this.string;\n          const height = FontHeight;\n          const dimensions = { width: 0, height, ...PointZero };\n          if (!clipString)\n              return dimensions;\n          const rect = stringFamilySizeRect(clipString, family, height);\n          // console.log(this.constructor.name, \"intrinsicRectInitialize\", rect)\n          return rect;\n      }\n      intrinsicsKnown(options) {\n          const { size } = options;\n          if (!size || isRect(this._intrinsicRect) || this.definition.family)\n              return true;\n          return false;\n      }\n      loadPromise(args) {\n          return this.definition.loadPromise(args);\n      }\n      pathElement(rect) {\n          const { string, definition } = this;\n          const { family } = definition;\n          const transform = svgTransform(this.intrinsicRect(true), rect);\n          return svgText(string, family, FontHeight, transform);\n      }\n      setValue(value, name, property) {\n          super.setValue(value, name, property);\n          if (property)\n              return;\n          switch (name) {\n              case 'string':\n                  delete this._intrinsicRect;\n                  break;\n          }\n      }\n      _textFilter;\n      get textFilter() { return this._textFilter ||= filterFromId('text'); }\n      toJSON() {\n          const json = super.toJSON();\n          json.intrinsic = this.intrinsicRect(true);\n          return json;\n      }\n      visibleCommandFiles(args) {\n          const files = super.visibleCommandFiles(args);\n          const { string, definition } = this;\n          const textGraphFile = {\n              definition, type: exports.GraphFileType.Txt,\n              file: this.id, inputId: this.id,\n              content: string,\n          };\n          files.push(textGraphFile);\n          return files;\n      }\n  }\n\n  const TextHeight = 1000;\n  const FontContainerDefinitionWithTweenable = TweenableDefinitionMixin(MediaBase);\n  const FontContainerDefinitionWithContainer = ContainerDefinitionMixin(FontContainerDefinitionWithTweenable);\n  class FontMediaClass extends FontContainerDefinitionWithContainer {\n      constructor(object) {\n          super(object);\n          const { string, label } = object;\n          this.string = string || label || Default.font.string;\n          this.properties.push(propertyInstance({\n              name: 'string', custom: true, type: exports.DataType.String, defaultValue: this.string\n          }));\n          this.properties.push(propertyInstance({\n              name: 'height', tweenable: true, custom: true, type: exports.DataType.Percent,\n              defaultValue: 0.3, max: 2.0, group: exports.DataGroup.Size\n          }));\n          this.properties.push(propertyInstance({\n              name: 'width', tweenable: true, custom: true, type: exports.DataType.Percent,\n              defaultValue: 0.8, max: 2.0, group: exports.DataGroup.Size\n          }));\n      }\n      definitionIcon(size) {\n          return this.loadFontPromise(this.preferredTranscoding(FontType)).then(() => {\n              const { string, family } = this;\n              assertPopulatedString(family);\n              assertPopulatedString(string);\n              const inSize = this.intrinsicRect;\n              const coverSize = sizeCover(inSize, size, true);\n              const outRect = { ...coverSize, ...centerPoint(size, coverSize) };\n              const transform = svgTransform(inSize, outRect);\n              const textElement = svgText(this.string, family, TextHeight, transform);\n              return Promise.resolve(svgSvgElement(size, textElement));\n          });\n      }\n      _family = '';\n      get family() {\n          if (!this._family) {\n              const { loadedFont } = this;\n              if (isClientFont(loadedFont)) {\n                  const { family } = loadedFont;\n                  if (isPopulatedString(family))\n                      this._family = family;\n              }\n          }\n          return this._family;\n      }\n      set family(value) { this._family = value; }\n      graphFiles(args) {\n          const { visible } = args;\n          if (!visible)\n              return [];\n          const { request } = this;\n          const { endpoint } = request;\n          assertEndpoint(endpoint);\n          const file = endpointUrl(endpoint);\n          // const file = editing ? url : source\n          const graphFile = {\n              type: FontType, file, definition: this\n          };\n          return [graphFile];\n      }\n      instanceArgs(object) {\n          const textObject = object || {};\n          if (isUndefined(textObject.lock))\n              textObject.lock = exports.Orientation.V;\n          return super.instanceArgs(textObject);\n      }\n      instanceFromObject(object) {\n          return new FontClass(this.instanceArgs(object));\n      }\n      _intrinsicRect;\n      get intrinsicRect() {\n          return this._intrinsicRect ||= this.intrinsicRectInitialize();\n      }\n      intrinsicRectInitialize() {\n          const height = TextHeight;\n          const dimensions = { width: 0, height, ...PointZero };\n          const { family, string } = this;\n          if (!(isPopulatedString(family) && isPopulatedString(string)))\n              return dimensions;\n          const rect = stringFamilySizeRect(string, family, height);\n          console.log(this.constructor.name, \"intrinsicRectInitialize\", rect);\n          return rect;\n      }\n      isVector = true;\n      loadFontPromise(transcoding) {\n          if (this.loadedFont)\n              return Promise.resolve(this.loadedFont);\n          const { request } = transcoding;\n          return requestFontPromise(request).then(orError => {\n              if (isDefiniteError(orError))\n                  return errorThrow(orError.error);\n              const { data: loadedFont } = orError;\n              // assertClientFont(loadedFont)\n              this.family = loadedFont.family;\n              this.loadedFont = loadedFont;\n              return loadedFont;\n          });\n      }\n      loadPromise(args) {\n          if (this.family)\n              return Promise.resolve();\n          const { editing } = args;\n          const transcoding = editing ? this.findTranscoding(FontType, 'woff', 'woff2') : undefined;\n          const requestable = transcoding || this;\n          return this.loadFontPromise(requestable).then(EmptyMethod);\n      }\n      loadedFont;\n      // preloadUrls(args: PreloadArgs): string[] {\n      //   const { visible, editing } = args\n      //   if (!visible) return []\n      //   const { url, source } = this\n      //   return [editing ? urlPrependProtocol('font:', url) : source]\n      // }\n      toJSON() {\n          const { string } = this;\n          return { ...super.toJSON(), string };\n      }\n      // source = ''\n      string = '';\n      type = FontType;\n  }\n\n  const label$b = \"League Spartan\";\n  const type$b = \"font\";\n  const request$b = {\n    endpoint: {\n      protocol: \"https:\",\n      hostname: \"fonts.googleapis.com\",\n      pathname: \"/css2\",\n      search: \"?family=League+Spartan\"\n    }\n  };\n  var fontDefaultJson = {\n    label: label$b,\n    type: type$b,\n    request: request$b\n  };\n\n  const label$a = \"Butcherman\";\n  const id$8 = \"com.moviemasher.font.butcherman\";\n  const type$a = \"font\";\n  const request$a = {\n    endpoint: {\n      protocol: \"https:\",\n      hostname: \"fonts.googleapis.com\",\n      pathname: \"/css2\",\n      search: \"?family=Butcherman\"\n    }\n  };\n  var fontButchermanJson = {\n    label: label$a,\n    id: id$8,\n    type: type$a,\n    request: request$a\n  };\n\n  const label$9 = \"Croissant One\";\n  const id$7 = \"com.moviemasher.font.croissant-one\";\n  const type$9 = \"font\";\n  const request$9 = {\n    endpoint: {\n      protocol: \"https:\",\n      hostname: \"fonts.googleapis.com\",\n      pathname: \"/css2\",\n      search: \"?family=Croissant+One\"\n    }\n  };\n  var fontCroissantOneJson = {\n    label: label$9,\n    id: id$7,\n    type: type$9,\n    request: request$9\n  };\n\n  const label$8 = \"Germania One\";\n  const id$6 = \"com.moviemasher.font.germania-one\";\n  const type$8 = \"font\";\n  const request$8 = {\n    endpoint: {\n      protocol: \"https:\",\n      hostname: \"fonts.googleapis.com\",\n      pathname: \"/css2\",\n      search: \"?family=Germania+One\"\n    }\n  };\n  var fontGermaniaOneJson = {\n    label: label$8,\n    id: id$6,\n    type: type$8,\n    request: request$8\n  };\n\n  const label$7 = \"Kenia\";\n  const id$5 = \"com.moviemasher.font.kenia\";\n  const type$7 = \"font\";\n  const request$7 = {\n    endpoint: {\n      protocol: \"https:\",\n      hostname: \"fonts.googleapis.com\",\n      pathname: \"/css2\",\n      search: \"?family=Kenia\"\n    }\n  };\n  var fontKeniaJson = {\n    label: label$7,\n    id: id$5,\n    type: type$7,\n    request: request$7\n  };\n\n  const label$6 = \"Luckiest Guy\";\n  const id$4 = \"com.moviemasher.font.luckiest-guy\";\n  const type$6 = \"font\";\n  const request$6 = {\n    endpoint: {\n      protocol: \"https:\",\n      hostname: \"fonts.googleapis.com\",\n      pathname: \"/css2\",\n      search: \"?family=Luckiest+Guy\"\n    }\n  };\n  var fontLuckiestGuyJson = {\n    label: label$6,\n    id: id$4,\n    type: type$6,\n    request: request$6\n  };\n\n  const label$5 = \"Monoton\";\n  const id$3 = \"com.moviemasher.font.monoton\";\n  const type$5 = \"font\";\n  const request$5 = {\n    endpoint: {\n      protocol: \"https:\",\n      hostname: \"fonts.googleapis.com\",\n      pathname: \"/css2\",\n      search: \"?family=Monoton\"\n    }\n  };\n  var fontMonotonJson = {\n    label: label$5,\n    id: id$3,\n    type: type$5,\n    request: request$5\n  };\n\n  const label$4 = \"Oleo Script\";\n  const id$2 = \"com.moviemasher.font.oleo-script\";\n  const type$4 = \"font\";\n  const request$4 = {\n    endpoint: {\n      protocol: \"https:\",\n      hostname: \"fonts.googleapis.com\",\n      pathname: \"/css2\",\n      search: \"?family=Oleo+Script\"\n    }\n  };\n  var fontOleoScriptJson = {\n    label: label$4,\n    id: id$2,\n    type: type$4,\n    request: request$4\n  };\n\n  const label$3 = \"Shojumaru\";\n  const id$1 = \"com.moviemasher.font.shojumaru\";\n  const type$3 = \"font\";\n  const request$3 = {\n    endpoint: {\n      protocol: \"https:\",\n      hostname: \"fonts.googleapis.com\",\n      pathname: \"/css2\",\n      search: \"?family=Shojumaru\"\n    }\n  };\n  var fontShojumaruJson = {\n    label: label$3,\n    id: id$1,\n    type: type$3,\n    request: request$3\n  };\n\n  const label$2 = \"Rubik+Dirt\";\n  const id = \"com.moviemasher.font.rubik-dirt\";\n  const type$2 = \"font\";\n  const request$2 = {\n    endpoint: {\n      protocol: \"https:\",\n      hostname: \"fonts.googleapis.com\",\n      pathname: \"/css2\",\n      search: \"?family=Rubik+Dirt\"\n    }\n  };\n  var fontRubikDirtJson = {\n    label: label$2,\n    id: id,\n    type: type$2,\n    request: request$2\n  };\n\n  const fontFind = (id) => {\n      const definition = MediaDefaults[FontType].find(object => object.id === id);\n      if (definition)\n          return definition;\n  };\n  const fontDefinition = (object) => {\n      const { id = DefaultFontId } = object;\n      const definition = fontFind(id);\n      if (definition)\n          return definition;\n      const withDefaults = { ...object, type: FontType, id };\n      return new FontMediaClass(withDefaults);\n  };\n  const fontDefault = fontDefinition({ id: DefaultFontId, ...fontDefaultJson });\n  const fontDefinitionFromId = (id) => fontDefinition({ id });\n  MediaFactories[FontType] = fontDefinition;\n  MediaDefaults[FontType].push(fontDefault, fontDefinition(fontButchermanJson), fontDefinition(fontCroissantOneJson), fontDefinition(fontKeniaJson), fontDefinition(fontGermaniaOneJson), fontDefinition(fontLuckiestGuyJson), fontDefinition(fontMonotonJson), fontDefinition(fontOleoScriptJson), fontDefinition(fontShojumaruJson), fontDefinition(fontRubikDirtJson));\n\n  const ImageWithTweenable = TweenableMixin(MediaInstanceBase);\n  const ImageWithContainer = ContainerMixin(ImageWithTweenable);\n  const ImageWithContent = ContentMixin(ImageWithContainer);\n  const ImageWithUpdatableSize = UpdatableSizeMixin(ImageWithContent);\n  class ImageClass extends ImageWithUpdatableSize {\n      visibleCommandFiles(args) {\n          const commandFiles = [];\n          const { visible, time, videoRate } = args;\n          if (!visible)\n              return commandFiles;\n          const files = this.graphFiles(args);\n          const [file] = files;\n          const duration = isTimeRange(time) ? time.lengthSeconds : 0;\n          const options = { loop: 1, framerate: videoRate };\n          if (duration)\n              options.t = duration;\n          const { id } = this;\n          const commandFile = { ...file, inputId: id, options };\n          // console.log(this.constructor.name, \"commandFiles\", id)\n          commandFiles.push(commandFile);\n          commandFiles.push(...this.effectsCommandFiles(args));\n          return commandFiles;\n      }\n      graphFiles(args) {\n          const { visible, editing } = args;\n          const files = [];\n          if (!visible)\n              return files;\n          const { definition } = this;\n          const { request } = definition;\n          const file = endpointUrl(request.endpoint);\n          if (!file)\n              console.log(this.constructor.name, \"graphFiles\", request);\n          assertPopulatedString(file);\n          const graphFile = {\n              input: true, type: ImageType, file, definition\n          };\n          files.push(graphFile);\n          return files;\n      }\n      svgItemForTimelinePromise(rect, time, range) {\n          const { definition } = this;\n          const requestable = definition.preferredTranscoding(ImageType);\n          const { request } = requestable;\n          return requestImagePromise(request).then(orError => {\n              if (isDefiniteError(orError))\n                  return errorThrow(orError.error);\n              const { data: clientImage } = orError;\n              const { src } = clientImage;\n              const svgImageOptions = { ...rect };\n              return svgImagePromiseWithOptions(src, svgImageOptions);\n          });\n      }\n  }\n\n  const ImageMediaWithTweenable = TweenableDefinitionMixin(MediaBase);\n  const ImageMediaWithContainer = ContainerDefinitionMixin(ImageMediaWithTweenable);\n  const ImageMediaWithContent = ContentDefinitionMixin(ImageMediaWithContainer);\n  const ImageMediaWithUpdatable = UpdatableSizeDefinitionMixin(ImageMediaWithContent);\n  class ImageMediaClass extends ImageMediaWithUpdatable {\n      definitionIcon(size) {\n          const transcoding = this.preferredTranscoding(ImageType);\n          return requestImagePromise(transcoding.request).then(orError => {\n              if (isDefiniteError(orError))\n                  return errorThrow(orError.error);\n              const { data: clientImage } = orError;\n              assertSizeAboveZero(clientImage);\n              const { width, height, src } = clientImage;\n              const inSize = { width, height };\n              const coverSize = sizeCover(inSize, size, true);\n              const outRect = { ...coverSize, ...centerPoint(size, coverSize) };\n              const options = { ...outRect };\n              return svgImagePromiseWithOptions(src, options).then(svgImage => {\n                  return svgSvgElement(size, svgImage);\n              });\n          });\n      }\n      instanceFromObject(object = {}) {\n          return new ImageClass(this.instanceArgs(object));\n      }\n      loadPromise(args) {\n          const { editing, visible } = args;\n          if (!visible)\n              return Promise.resolve();\n          const { loadedImage } = this;\n          if (loadedImage)\n              return Promise.resolve();\n          const transcoding = editing ? this.preferredTranscoding(ImageType) : this;\n          const { request } = transcoding;\n          return requestImagePromise(request).then(orError => {\n              if (isDefiniteError(orError))\n                  return errorThrow(orError.error);\n              const { data: clientImage } = orError;\n              this.loadedImage = clientImage;\n          });\n      }\n      loadedImage;\n      type = ImageType;\n  }\n\n  const label$1 = \"Color\";\n  const type$1 = \"image\";\n  const request$1 = {\n    response: {\n      color: \"#FFFFFF\"\n    }\n  };\n  var defaultContent = {\n    label: label$1,\n    type: type$1,\n    request: request$1\n  };\n\n  const label = \"Rectangle\";\n  const type = \"image\";\n  const request = {\n    response: {\n    }\n  };\n  var defaultContainer = {\n    label: label,\n    type: type,\n    request: request\n  };\n\n  const imageDefinition = (object) => {\n      const { id } = object;\n      assertPopulatedString(id, 'imageDefinition id');\n      return new ImageMediaClass(object);\n  };\n  const imageDefinitionFromId = (id) => {\n      const definition = MediaDefaults[ImageType].find(definition => definition.id === id);\n      if (definition)\n          return definition;\n      return imageDefinition({ id });\n  };\n  const imageInstance = (object) => {\n      const { mediaId: id, definition: defined } = object;\n      const definition = defined || imageDefinitionFromId(id);\n      const instance = definition.instanceFromObject(object);\n      return instance;\n  };\n  const imageFromId = (id) => {\n      return imageInstance({ id });\n  };\n  MediaFactories[ImageType] = imageDefinition;\n  MediaDefaults[ImageType].push(new ColorContentDefinitionClass({ id: DefaultContentId, ...defaultContent }), new ShapeContainerDefinitionClass({ id: DefaultContainerId, ...defaultContainer }));\n\n  const SequenceWithTweenable = TweenableMixin(MediaInstanceBase);\n  const SequenceWithContainer = ContainerMixin(SequenceWithTweenable);\n  const SequenceWithContent = ContentMixin(SequenceWithContainer);\n  const SequenceWithUpdatableSize = UpdatableSizeMixin(SequenceWithContent);\n  const SequenceWithUpdatableDuration = UpdatableDurationMixin(SequenceWithUpdatableSize);\n  class SequenceClass extends SequenceWithUpdatableDuration {\n      visibleCommandFiles(args) {\n          const files = super.visibleCommandFiles(args);\n          const { streaming, visible } = args;\n          if (!(visible && streaming))\n              return files;\n          files.forEach(file => {\n              const { options = {} } = file;\n              options.loop = 1;\n              options.re = '';\n              file.options = options;\n          });\n          return files;\n      }\n      graphFiles(args) {\n          const { time, clipTime, editing, visible } = args;\n          const definitionTime = this.definitionTime(time, clipTime);\n          const definitionArgs = { ...args, time: definitionTime };\n          const files = super.graphFiles(definitionArgs);\n          if (visible) {\n              const { definition } = this;\n              if (editing) {\n                  const frames = definition.framesArray(definitionTime);\n                  const files = frames.map(frame => {\n                      const graphFile = {\n                          type: ImageType, file: '',\n                          input: true, definition\n                      };\n                      return graphFile;\n                  });\n                  files.push(...files);\n              }\n              else {\n                  const graphFile = {\n                      type: VideoType, file: '', definition, input: true\n                  };\n                  files.push(graphFile);\n              }\n          }\n          return files;\n      }\n      // iconUrl(size: Size, time: Time, range: TimeRange): string {\n      //   const definitionTime = this.definitionTime(time, range)\n      //   const { definition } = this\n      //   const frames = definition.framesArray(definitionTime)\n      //   const [frame] = frames\n      //   return definition.urlForFrame(frame)\n      // }\n      // preloadUrls(args: PreloadArgs): string[] {\n      //   const { time, clipTime, editing, visible } = args\n      //   const definitionTime = this.definitionTime(time, clipTime)\n      //   const definitionArgs: PreloadArgs = { ...args, time: definitionTime }\n      //   const files = super.preloadUrls(definitionArgs) \n      //   if (visible) {\n      //     const { definition } = this\n      //     if (editing) {\n      //       const frames = definition.framesArray(definitionTime)\n      //       const files = frames.map(frame => {\n      //         const graphFile: GraphFile = {\n      //           type: ImageType, file: definition.urlForFrame(frame), \n      //           input: true, definition\n      //         }\n      //         return graphFile\n      //       })\n      //       files.push(...files)\n      //     } else files.push(definition.source)\n      //   }\n      //   return files\n      // }\n      speed = 1.0;\n      toJSON() {\n          const object = super.toJSON();\n          if (this.speed !== 1.0)\n              object.speed = this.speed;\n          return object;\n      }\n  }\n\n  const SequenceMediaWithTweenable = TweenableDefinitionMixin(MediaBase);\n  const SequenceMediaWithContent = ContentDefinitionMixin(SequenceMediaWithTweenable);\n  const SequenceMediaWithUpdatableSize = UpdatableSizeDefinitionMixin(SequenceMediaWithContent);\n  const SequenceMediaWithUpdatableDuration = UpdatableDurationDefinitionMixin(SequenceMediaWithUpdatableSize);\n  class SequenceMediaClass extends SequenceMediaWithUpdatableDuration {\n      constructor(...args) {\n          const [object] = args;\n          super(object);\n          const { padding, begin, fps, increment, pattern } = object;\n          if (isPositive(begin))\n              this.begin = begin;\n          if (fps)\n              this.fps = fps;\n          if (increment)\n              this.increment = increment;\n          if (pattern)\n              this.pattern = pattern;\n          if (padding)\n              this.padding = padding;\n          else {\n              const lastFrame = this.begin + (this.increment * this.framesMax - this.begin);\n              this.padding = String(lastFrame).length;\n          }\n          // TODO: support speed\n          // this.properties.push(propertyInstance({ name: \"speed\", type: DataType.Number, value: 1.0 }))\n      }\n      begin = Default.definition.videosequence.begin;\n      fps = Default.definition.videosequence.fps;\n      framesArray(start) {\n          const { duration, fps } = this;\n          return start.durationFrames(duration, fps);\n          // const frames : number[] = []\n          // const startFrame = Math.min(framesMax, start.scale(fps, \"floor\").frame)\n          // if (start.isRange) {\n          //   const endFrame = Math.min(framesMax + 1, start.timeRange.endTime.scale(fps, \"ceil\").frame)\n          //   for (let frame = startFrame; frame < endFrame; frame += 1) {\n          //     frames.push(frame)\n          //   }\n          // } else frames.push(startFrame)\n          // // console.log(this.constructor.name, \"framesArray\", start, fps, framesMax, frames)\n          // return frames\n      }\n      get framesMax() {\n          const { fps, duration } = this;\n          // console.log(this.constructor.name, \"framesMax\", fps, duration)\n          return Math.floor(fps * duration) - 2;\n      }\n      increment = Default.definition.videosequence.increment;\n      instanceFromObject(object = {}) {\n          return new SequenceClass(this.instanceArgs(object));\n      }\n      // loadType = ImageType\n      padding;\n      pattern = '%.jpg';\n      toJSON() {\n          const json = super.toJSON();\n          const { videosequence } = Default.definition;\n          const { pattern, increment, begin, fps, padding } = this;\n          if (pattern !== videosequence.pattern)\n              json.pattern = pattern;\n          if (increment !== videosequence.increment)\n              json.increment = increment;\n          if (begin !== videosequence.begin)\n              json.begin = begin;\n          if (fps !== videosequence.fps)\n              json.fps = fps;\n          if (padding !== videosequence.padding)\n              json.padding = padding;\n          return json;\n      }\n      type = SequenceType;\n  }\n\n  const sequenceDefinition = (object) => {\n      const { id } = object;\n      assertPopulatedString(id);\n      return new SequenceMediaClass(object);\n  };\n  const sequenceDefinitionFromId = (id) => {\n      return sequenceDefinition({ id });\n  };\n  const sequenceInstance = (object) => {\n      const { mediaId: id, definition: defined } = object;\n      const definition = defined || sequenceDefinitionFromId(id);\n      const instance = definition.instanceFromObject(object);\n      return instance;\n  };\n  const sequenceFromId = (id) => {\n      return sequenceInstance({ id });\n  };\n  MediaFactories[SequenceType] = sequenceDefinition;\n\n  const VideoWithTweenable = TweenableMixin(MediaInstanceBase);\n  const VideoWithContainer = ContainerMixin(VideoWithTweenable);\n  const VideoWithContent = ContentMixin(VideoWithContainer);\n  const VideoWithUpdatableSize = UpdatableSizeMixin(VideoWithContent);\n  const VideoWithUpdatableDuration = UpdatableDurationMixin(VideoWithUpdatableSize);\n  class VideoClass extends VideoWithUpdatableDuration {\n      _foreignElement;\n      get foreignElement() {\n          const { _foreignElement } = this;\n          if (_foreignElement)\n              return _foreignElement;\n          const { document } = globalThis;\n          const element = document.createElementNS(NamespaceSvg, 'foreignObject');\n          return this._foreignElement = element;\n      }\n      graphFiles(args) {\n          const files = [];\n          const { audible, visible, icon } = args;\n          const { definition } = this;\n          const { request } = definition;\n          const file = endpointUrl(request.endpoint);\n          assertPopulatedString(file);\n          if (visible) {\n              if (!icon) {\n                  const visibleGraphFile = {\n                      input: true, type: VideoType, file, definition\n                  };\n                  files.push(visibleGraphFile);\n              }\n          }\n          if (audible) {\n              const mutable = definition.duration ? this.mutable() : true;\n              if (mutable && !this.muted) {\n                  const audioGraphFile = {\n                      input: true, type: AudioType, definition,\n                      file: '',\n                  };\n                  files.push(audioGraphFile);\n              }\n          }\n          return files;\n      }\n      loadPromise(args) {\n          console.log(this.constructor.name, 'loadPromise', args);\n          const promises = [];\n          const { definition } = this;\n          const { audio } = definition;\n          const { visible, audible } = args;\n          if (audio && audible) {\n              promises.push(definition.preloadAudioPromise);\n          }\n          if (visible) {\n              const visibleTranscoding = definition.preferredTranscoding(SequenceType, VideoType);\n              if (isRequestable(visibleTranscoding)) {\n                  const audibleTranscoding = audio && audible && definition.preferredTranscoding(AudioType, VideoType);\n                  if (visibleTranscoding !== audibleTranscoding) {\n                      const { type, request } = visibleTranscoding;\n                      console.log(this.constructor.name, 'loadPromise visibleTranscoding', visibleTranscoding);\n                      if (type === VideoType) {\n                          promises.push(requestVideoPromise(request).then(orError => {\n                              if (isDefiniteError(orError))\n                                  return errorThrow(orError.error);\n                          }));\n                      }\n                      else\n                          promises.push(this.sequenceImagesPromise(args));\n                  }\n                  else\n                      console.log(this.constructor.name, 'loadPromise', visibleTranscoding, '===', audibleTranscoding);\n              }\n              else\n                  console.log(this.constructor.name, 'loadPromise NOT isTranscoding', visibleTranscoding);\n          }\n          return Promise.all(promises).then(EmptyMethod);\n      }\n      previewVideoPromise(previewTranscoding) {\n          const { loadedVideo } = this;\n          if (loadedVideo)\n              return Promise.resolve(loadedVideo);\n          const { request } = previewTranscoding;\n          return requestVideoPromise(request).then(orError => {\n              if (isDefiniteError(orError))\n                  return errorThrow(orError.error);\n              const { data: clientVideo } = orError;\n              const video = clientVideo.cloneNode();\n              this.loadedVideo = video;\n              this.foreignElement.appendChild(video);\n              return video;\n          });\n      }\n      sequenceImagesPromise(args) {\n          const { time, clipTime: range } = args;\n          const definitionTimes = [];\n          if (time.isRange) {\n              assertTimeRange(time);\n              const { times } = time;\n              const [start, end] = times.map(time => this.definitionTime(time, range));\n              const definitionRange = timeRangeFromTimes(start, end);\n              definitionTimes.push(...definitionRange.frameTimes);\n          }\n          else\n              definitionTimes.push(this.definitionTime(time, range));\n          const promises = definitionTimes.map(definitionTime => {\n              return this.definition.loadedImagePromise(definitionTime);\n          });\n          return Promise.all(promises).then(EmptyMethod);\n      }\n      sequenceItemPromise(rect, definitionTime) {\n          return this.definition.loadedImagePromise(definitionTime).then(loadedImage => {\n              const { src } = loadedImage;\n              const coverSize = sizeCover(sizeCopy(loadedImage), sizeCopy(rect));\n              return svgImagePromiseWithOptions(src, coverSize);\n          });\n      }\n      serverPromise(args) {\n          console.log(this.constructor.name, 'serverPromise', args);\n          const { definition } = this;\n          const { audio } = definition;\n          const { visible } = args;\n          if (visible || audio)\n              return this.definition.serverPromise(args);\n          return Promise.resolve();\n      }\n      svgItemForPlayerPromise(rect, time, range) {\n          const { loadedVideo } = this;\n          const definitionTime = this.definitionTime(time, range);\n          if (loadedVideo)\n              return Promise.resolve(this.videoForPlayerPromise(rect, definitionTime));\n          const { previewTranscoding } = this.definition;\n          const { type } = previewTranscoding;\n          switch (type) {\n              case VideoType: {\n                  return this.videoItemForPlayerPromise(previewTranscoding, rect, definitionTime);\n              }\n              case SequenceType: {\n                  return this.sequenceItemPromise(rect, definitionTime);\n              }\n          }\n          return errorThrow(ErrorName.Type);\n      }\n      svgItemForTimelinePromise(rect, time, range) {\n          const definitionTime = this.definitionTime(time, range);\n          return this.sequenceItemPromise(rect, definitionTime);\n      }\n      loadedVideo;\n      unload() {\n          delete this._foreignElement;\n          delete this.loadedVideo;\n      }\n      videoForPlayerPromise(rect, definitionTime) {\n          const { loadedVideo: video } = this;\n          assertClientVideo(video);\n          const { clientCanMaskVideo } = VideoClass;\n          if (clientCanMaskVideo)\n              svgSetDimensions(this.foreignElement, rect);\n          video.currentTime = definitionTime.seconds;\n          const { width, height } = rect;\n          video.width = width;\n          video.height = height;\n          return clientCanMaskVideo ? this.foreignElement : video;\n      }\n      videoItemForPlayerPromise(previewTranscoding, rect, definitionTime) {\n          console.log(this.constructor.name, 'videoItemForPlayerPromise', definitionTime, previewTranscoding);\n          return this.previewVideoPromise(previewTranscoding).then(() => (this.videoForPlayerPromise(rect, definitionTime)));\n      }\n      // private videoItemForTimelinePromise(previewTranscoding: Requestable, rect: Rect, time: Time, range: TimeRange): Promise<SvgItem> {\n      //   console.log(this.constructor.name, 'videoItemForTimelinePromise')\n      //   return this.previewVideoPromise(previewTranscoding).then(video => {\n      //     const { clientCanMaskVideo } = VideoClass\n      //     if (clientCanMaskVideo) {\n      //       svgSetDimensions(this.foreignElement, rect)\n      //     }\n      //     const { currentTime } = video\n      //     const definitionTime = this.definitionTime(time, range)\n      //     const maxDistance = time.isRange ? 1 : 1.0 / time.fps\n      //     const { seconds } = definitionTime\n      //     if (Math.abs(seconds - currentTime) > maxDistance) {\n      //       video.currentTime = seconds\n      //     }  \n      //     const { width, height } = rect\n      //     video.width = width \n      //     video.height = height\n      //     return clientCanMaskVideo ? this.foreignElement : video\n      //   })\n      // }\n      static _clientCanMaskVideo;\n      static get clientCanMaskVideo() {\n          const { _clientCanMaskVideo } = this;\n          if (isBoolean(_clientCanMaskVideo))\n              return _clientCanMaskVideo;\n          const { navigator } = globalThis;\n          const { userAgent } = navigator;\n          const safari = userAgent.includes('Safari') && !userAgent.includes('Chrome');\n          return this._clientCanMaskVideo = !safari;\n      }\n  }\n\n  const seekingPromises = new Map();\n  const seek = (definitionTime, video) => {\n      video.currentTime = definitionTime.seconds;\n  };\n  const videoImagePromise = (video, outSize) => {\n      console.log('videoImagePromise', video.currentTime);\n      const inSize = sizeCopy(video);\n      const size = sizeAboveZero(outSize) ? sizeCover(inSize, outSize) : inSize;\n      const { width, height } = size;\n      const [canvas, context] = canvasContext(size);\n      context.drawImage(video, 0, 0, width, height);\n      const image = new Image();\n      image.src = canvas.toDataURL();\n      return image.decode().then(() => image);\n  };\n  const canvasContext = (size) => {\n      const { document } = globalThis;\n      const canvas = document.createElement('canvas');\n      const { width, height } = size;\n      canvas.height = height;\n      canvas.width = width;\n      const context = canvas.getContext('2d');\n      assertTrue(context);\n      return [canvas, context];\n  };\n  const seekNeeded = (definitionTime, video) => {\n      const { currentTime } = video;\n      if (!(currentTime || definitionTime.frame))\n          return true;\n      const videoTime = timeFromSeconds(currentTime, definitionTime.fps);\n      return !videoTime.equalsTime(definitionTime);\n  };\n  const imageFromVideoPromise = (video, definitionTime, outSize) => {\n      console.log('imageFromVideoPromise', definitionTime);\n      const promise = new Promise(resolve => {\n          if (!seekNeeded(definitionTime, video)) {\n              console.log('imageFromVideoPromise !seekNeeded', definitionTime);\n              seekingPromises.delete(video);\n              return videoImagePromise(video, outSize);\n          }\n          console.log('imageFromVideoPromise seekNeeded', definitionTime);\n          video.onseeked = () => {\n              console.log('imageFromVideoPromise onseeked', definitionTime);\n              video.onseeked = null;\n              videoImagePromise(video, outSize).then(image => {\n                  console.log('imageFromVideoPromise resolving after videoImagePromise', definitionTime);\n                  seekingPromises.delete(video);\n                  resolve(image);\n              });\n          };\n          seek(definitionTime, video);\n      });\n      const existing = seekingPromises.get(video);\n      seekingPromises.set(video, promise);\n      if (existing) {\n          console.log('imageFromVideoPromise replacing promise', definitionTime);\n          return existing.then(() => promise);\n      }\n      console.log('imageFromVideoPromise setting promise', definitionTime);\n      return promise;\n  };\n\n  const VideoMediaWithTweenable = TweenableDefinitionMixin(MediaBase);\n  const VideoMediaWithContainer = ContainerDefinitionMixin(VideoMediaWithTweenable);\n  const VideoMediaWithContent = ContentDefinitionMixin(VideoMediaWithContainer);\n  const VideoMediaWithUpdatableSize = UpdatableSizeDefinitionMixin(VideoMediaWithContent);\n  const VideoMediaWithUpdatableDuration = UpdatableDurationDefinitionMixin(VideoMediaWithUpdatableSize);\n  class VideoMediaClass extends VideoMediaWithUpdatableDuration {\n      constructor(object) {\n          super(object);\n          const { loadedVideo } = object;\n          if (loadedVideo)\n              this.loadedVideo = loadedVideo;\n          // TODO: support speed\n          // this.properties.push(propertyInstance({ name: \"speed\", type: DataType.Number, value: 1.0 }))\n      }\n      definitionIcon(size) {\n          const { previewTranscoding: transcoding } = this;\n          const time = timeFromArgs(1);\n          return this.imageFromTranscodingPromise(transcoding, time).then(image => {\n              assertSizeAboveZero(image);\n              const { width, height, src } = image;\n              const inSize = { width, height };\n              const coverSize = sizeCover(inSize, size, true);\n              const outRect = { ...coverSize, ...centerPoint(size, coverSize) };\n              const options = {\n                  ...outRect\n              };\n              return svgImagePromiseWithOptions(src, options).then(svgImage => {\n                  return svgSvgElement(size, svgImage);\n              });\n          });\n      }\n      loadedImages = new Map();\n      loadedImage(definitionTime, outSize) {\n          return this.loadedImages.get(this.loadedImageKey(definitionTime, outSize));\n      }\n      loadedImageKey(definitionTime, outSize) {\n          const { frame, fps } = definitionTime;\n          const frameFps = `${frame}@${fps}`;\n          if (!sizeAboveZero(outSize))\n              return frameFps;\n          return `${frameFps}-${sizeString(outSize)}`;\n      }\n      imageFromSequencePromise(previewTranscoding, definitionTime, outSize) {\n          throw new Error();\n      }\n      imageFromTranscodingPromise(transcoding, definitionTime, outSize) {\n          const { type, request } = transcoding;\n          switch (type) {\n              case ImageType: {\n                  return requestImagePromise(request).then(orError => {\n                      if (isDefiniteError(orError))\n                          return errorThrow(orError.error);\n                      return orError.data;\n                  });\n              }\n              case VideoType: {\n                  return this.imageFromVideoTranscodingPromise(transcoding, definitionTime, outSize);\n              }\n              case SequenceType: {\n                  return this.imageFromSequencePromise(transcoding, definitionTime, outSize);\n              }\n          }\n          return errorThrow(ErrorName.Internal);\n      }\n      imageFromVideoTranscodingPromise(previewTranscoding, definitionTime, outSize) {\n          console.log(this.constructor.name, 'imageFromVideoTranscodingPromise', definitionTime);\n          const loaded = this.loadedImage(definitionTime, outSize);\n          if (loaded)\n              return Promise.resolve(loaded);\n          return requestVideoPromise(previewTranscoding.request).then(orError => {\n              if (isDefiniteError(orError))\n                  return errorThrow(orError.error);\n              const { data: clientVideo } = orError;\n              const key = this.loadedImageKey(definitionTime, outSize);\n              return imageFromVideoPromise(clientVideo, definitionTime, outSize).then(image => {\n                  this.loadedImages.set(key, image);\n                  return image;\n              });\n          });\n      }\n      instanceFromObject(object = {}) {\n          return new VideoClass(this.instanceArgs(object));\n      }\n      loadedVideo;\n      pattern = '%.jpg';\n      loadedImagePromise(definitionTime, outSize) {\n          console.log(this.constructor.name, 'loadedImagePromise', definitionTime);\n          const { previewTranscoding: transcoding } = this;\n          return this.imageFromTranscodingPromise(transcoding, definitionTime, outSize);\n      }\n      get iconTranscoding() {\n          return this.preferredTranscoding(ImageType, SequenceType, VideoType);\n      }\n      get previewTranscoding() {\n          return this.preferredTranscoding(SequenceType, VideoType);\n      }\n      type = VideoType;\n  }\n\n  const videoDefinition = (object) => {\n      const { id } = object;\n      assertPopulatedString(id);\n      return new VideoMediaClass(object);\n  };\n  const videoDefinitionFromId = (id) => {\n      return videoDefinition({ id });\n  };\n  const videoInstance = (object) => {\n      const { mediaId: id, definition: defined } = object;\n      const definition = defined || videoDefinitionFromId(id);\n      const instance = definition.instanceFromObject(object);\n      return instance;\n  };\n  const videoFromId = (id) => {\n      return videoInstance({ id });\n  };\n  MediaFactories[VideoType] = videoDefinition;\n\n  const isDecodeOutput = (value) => {\n      return isOutput(value) && \"type\" in value && isDecodingType(value.type);\n  };\n  function assertDecodeOutput(value) {\n      if (!isDecodeOutput(value))\n          errorThrow(value, 'DecodeOutput');\n  }\n\n  const AlphaProbe = 'alpha';\n  const AudibleProbe = 'audible';\n  const DurationProbe = 'duration';\n  const SizeProbe = 'size';\n  const ProbeKinds = [AlphaProbe, AudibleProbe, DurationProbe, SizeProbe];\n\n  const isProbeOptions = (value) => {\n      return isObject(value) && \"types\" in value && isArray(value.types);\n  };\n  function assertProbeOptions(value) {\n      if (!isProbeOptions(value))\n          errorThrow(value, 'ProbeOptions');\n  }\n  const isProbeOutput = (value) => {\n      return isDecodeOutput(value) && \"options\" in value && isProbeOptions(value.options);\n  };\n  function assertProbeOutput(value) {\n      if (!isProbeOutput(value))\n          errorThrow(value, 'ProbeOutput');\n  }\n\n  const LanguageEnglish = 'en';\n\n  const Resolvers = {};\n  const resolverLoad = (mimeType) => {\n      if (!mimeType)\n          return;\n      return Resolvers[mimeType];\n  };\n  const resolverPromise = ((file, mimeType, type) => {\n      const resolver = resolverLoad(mimeType);\n      if (resolver) {\n          const { requestPromise: resolverRequestPromise } = resolver;\n          return resolverRequestPromise(file).then(request => requestPromise(request, type));\n      }\n      const result = { path: file };\n      return Promise.resolve(result);\n  });\n  const resolverPathPromise = (file, mimeType) => {\n      const resolver = resolverLoad(mimeType);\n      if (resolver)\n          return resolver.requestPromise(file).then(requestPromise);\n      return { path: file };\n  };\n  const resolverExtension = (request, mimeType) => {\n      const resolver = resolverLoad(mimeType);\n      return resolver ? resolver.extension : requestExtension(request);\n  };\n\n  const isTranscodeOutput = (value) => {\n      return isOutput(value) && \"type\" in value && isTranscodingType(value.type);\n  };\n\n  exports.Action = Action;\n  exports.ActionFactory = ActionFactory;\n  exports.Actions = Actions;\n  exports.AddClipToTrackAction = AddClipToTrackAction;\n  exports.AddTrackAction = AddTrackAction;\n  exports.AlphaProbe = AlphaProbe;\n  exports.AlphamergeFilter = AlphamergeFilter;\n  exports.Anchors = Anchors;\n  exports.ApiVersion = ApiVersion;\n  exports.AudibleContext = AudibleContext;\n  exports.AudibleContextInstance = AudibleContextInstance;\n  exports.AudibleProbe = AudibleProbe;\n  exports.AudioClass = AudioClass;\n  exports.AudioMediaClass = AudioMediaClass;\n  exports.AudioPreviewClass = AudioPreviewClass;\n  exports.AudioStreamType = AudioStreamType;\n  exports.AudioType = AudioType;\n  exports.BlobProtocol = BlobProtocol;\n  exports.ChangeAction = ChangeAction;\n  exports.ChangeFramesAction = ChangeFramesAction;\n  exports.ChangeMultipleAction = ChangeMultipleAction;\n  exports.ChromaKeyFilter = ChromaKeyFilter;\n  exports.ClassButton = ClassButton;\n  exports.ClassCollapsed = ClassCollapsed;\n  exports.ClassDisabled = ClassDisabled;\n  exports.ClassDropping = ClassDropping;\n  exports.ClassDroppingAfter = ClassDroppingAfter;\n  exports.ClassDroppingBefore = ClassDroppingBefore;\n  exports.ClassItem = ClassItem;\n  exports.ClassSelected = ClassSelected;\n  exports.Clickings = Clickings;\n  exports.ClipClass = ClipClass;\n  exports.ClipSelectTypes = ClipSelectTypes;\n  exports.ColorChannelMixerFilter = ColorChannelMixerFilter;\n  exports.ColorContentClass = ColorContentClass;\n  exports.ColorContentDefinitionClass = ColorContentDefinitionClass;\n  exports.ColorFilter = ColorFilter;\n  exports.ColorizeFilter = ColorizeFilter;\n  exports.ContainerDefinitionMixin = ContainerDefinitionMixin;\n  exports.ContainerMixin = ContainerMixin;\n  exports.ContainerTypes = ContainerTypes;\n  exports.ContentDefinitionMixin = ContentDefinitionMixin;\n  exports.ContentMixin = ContentMixin;\n  exports.ContentTypes = ContentTypes;\n  exports.ContextFactory = ContextFactory;\n  exports.ConvolutionFilter = ConvolutionFilter;\n  exports.CookedTypes = CookedTypes;\n  exports.CropFilter = CropFilter;\n  exports.CssContentType = CssContentType;\n  exports.CssExtension = CssExtension;\n  exports.DataGroups = DataGroups;\n  exports.DataTypes = DataTypes;\n  exports.DecodeType = DecodeType;\n  exports.DecodingClass = DecodingClass;\n  exports.DecodingTypes = DecodingTypes;\n  exports.Default = Default;\n  exports.DefaultContainerId = DefaultContainerId;\n  exports.DefaultContentId = DefaultContentId;\n  exports.DefaultFontId = DefaultFontId;\n  exports.Directions = Directions;\n  exports.DurationProbe = DurationProbe;\n  exports.EditTypes = EditTypes;\n  exports.EditorClass = EditorClass;\n  exports.EditorSelectionClass = EditorSelectionClass;\n  exports.EffectClass = EffectClass;\n  exports.EffectMediaClass = EffectMediaClass;\n  exports.EffectType = EffectType;\n  exports.Emitter = Emitter;\n  exports.EmptyMethod = EmptyMethod;\n  exports.EncodeType = EncodeType;\n  exports.EncodingClass = EncodingClass;\n  exports.EncodingTypes = EncodingTypes;\n  exports.Endpoints = Endpoints;\n  exports.ErrorName = ErrorName;\n  exports.ErrorNames = ErrorNames;\n  exports.EventTypes = EventTypes;\n  exports.ExtJpeg = ExtJpeg;\n  exports.FileProtocol = FileProtocol;\n  exports.FillTypes = FillTypes;\n  exports.FilterClass = FilterClass;\n  exports.FilterDefinitionClass = FilterDefinitionClass;\n  exports.FilterIdPrefix = FilterIdPrefix;\n  exports.FilterType = FilterType;\n  exports.Filters = Filters;\n  exports.FontClass = FontClass;\n  exports.FontMediaClass = FontMediaClass;\n  exports.FontType = FontType;\n  exports.FpsFilter = FpsFilter;\n  exports.GraphFileTypes = GraphFileTypes;\n  exports.HttpProtocol = HttpProtocol;\n  exports.HttpsProtocol = HttpsProtocol;\n  exports.IdPrefix = IdPrefix;\n  exports.IdSuffix = IdSuffix;\n  exports.ImageClass = ImageClass;\n  exports.ImageMediaClass = ImageMediaClass;\n  exports.ImageType = ImageType;\n  exports.JsonExtension = JsonExtension;\n  exports.JsonType = JsonType;\n  exports.LanguageEnglish = LanguageEnglish;\n  exports.LanguageType = LanguageType;\n  exports.LoadTypes = LoadTypes;\n  exports.MashMediaClass = MashMediaClass;\n  exports.MashType = MashType;\n  exports.MediaBase = MediaBase;\n  exports.MediaCollection = MediaCollection;\n  exports.MediaDefaults = MediaDefaults;\n  exports.MediaFactories = MediaFactories;\n  exports.MediaInstanceBase = MediaInstanceBase;\n  exports.MediaTypes = MediaTypes;\n  exports.MoveAction = MoveAction;\n  exports.MoveClipAction = MoveClipAction;\n  exports.Mp4Extension = Mp4Extension;\n  exports.NamespaceLink = NamespaceLink;\n  exports.NamespaceSvg = NamespaceSvg;\n  exports.NamespaceXhtml = NamespaceXhtml;\n  exports.NonePreview = NonePreview;\n  exports.OpacityFilter = OpacityFilter;\n  exports.OrderAscending = OrderAscending;\n  exports.OrderDecending = OrderDecending;\n  exports.Orientations = Orientations;\n  exports.OverlayFilter = OverlayFilter;\n  exports.Parameter = Parameter;\n  exports.Plugins = Plugins;\n  exports.PngExtension = PngExtension;\n  exports.PointZero = PointZero;\n  exports.PreviewClass = PreviewClass;\n  exports.ProbeKinds = ProbeKinds;\n  exports.ProbeType = ProbeType;\n  exports.PropertiedClass = PropertiedClass;\n  exports.PropertyTweenSuffix = PropertyTweenSuffix;\n  exports.PropertyTypesNumeric = PropertyTypesNumeric;\n  exports.ProtocolType = ProtocolType;\n  exports.RawTypes = RawTypes;\n  exports.RecordType = RecordType;\n  exports.RecordsType = RecordsType;\n  exports.RectZero = RectZero;\n  exports.RemoveClipAction = RemoveClipAction;\n  exports.RequestableClass = RequestableClass;\n  exports.ResolveType = ResolveType;\n  exports.Resolvers = Resolvers;\n  exports.ScaleFilter = ScaleFilter;\n  exports.SelectTypes = SelectTypes;\n  exports.SequenceClass = SequenceClass;\n  exports.SequenceMediaClass = SequenceMediaClass;\n  exports.SequenceType = SequenceType;\n  exports.ServerTypes = ServerTypes;\n  exports.SetptsFilter = SetptsFilter;\n  exports.SetsarFilter = SetsarFilter;\n  exports.ShapeContainerClass = ShapeContainerClass;\n  exports.ShapeContainerDefinitionClass = ShapeContainerDefinitionClass;\n  exports.SizeIcon = SizeIcon;\n  exports.SizeOutput = SizeOutput;\n  exports.SizePreview = SizePreview;\n  exports.SizeProbe = SizeProbe;\n  exports.SizeZero = SizeZero;\n  exports.SizingMediaTypes = SizingMediaTypes;\n  exports.Sizings = Sizings;\n  exports.StandardErrorName = StandardErrorName;\n  exports.TextContainerId = TextContainerId;\n  exports.TextExtension = TextExtension;\n  exports.TextFilter = TextFilter;\n  exports.TimeClass = TimeClass;\n  exports.TimeRangeClass = TimeRangeClass;\n  exports.TimingMediaTypes = TimingMediaTypes;\n  exports.Timings = Timings;\n  exports.TrackClass = TrackClass;\n  exports.TrackFactory = TrackFactory;\n  exports.TrackPreviewClass = TrackPreviewClass;\n  exports.TrackPreviewHandleSize = TrackPreviewHandleSize;\n  exports.TrackPreviewLineSize = TrackPreviewLineSize;\n  exports.TranscodeType = TranscodeType;\n  exports.TranscodingClass = TranscodingClass;\n  exports.TranscodingTypes = TranscodingTypes;\n  exports.TriggerTypes = TriggerTypes;\n  exports.TrimFilter = TrimFilter;\n  exports.TweenableDefinitionMixin = TweenableDefinitionMixin;\n  exports.TweenableMixin = TweenableMixin;\n  exports.UpdatableDurationDefinitionMixin = UpdatableDurationDefinitionMixin;\n  exports.UpdatableDurationMediaTypes = UpdatableDurationMediaTypes;\n  exports.UpdatableDurationMixin = UpdatableDurationMixin;\n  exports.UpdatableSizeDefinitionMixin = UpdatableSizeDefinitionMixin;\n  exports.UpdatableSizeMediaType = UpdatableSizeMediaType;\n  exports.UpdatableSizeMixin = UpdatableSizeMixin;\n  exports.VideoClass = VideoClass;\n  exports.VideoMediaClass = VideoMediaClass;\n  exports.VideoStreamType = VideoStreamType;\n  exports.VideoType = VideoType;\n  exports.actionInstance = actionInstance;\n  exports.arrayLast = arrayLast;\n  exports.arrayReversed = arrayReversed;\n  exports.arraySet = arraySet;\n  exports.arrayUnique = arrayUnique;\n  exports.assertAboveZero = assertAboveZero;\n  exports.assertAction = assertAction;\n  exports.assertArray = assertArray;\n  exports.assertBoolean = assertBoolean;\n  exports.assertChangeAction = assertChangeAction;\n  exports.assertClientAudio = assertClientAudio;\n  exports.assertClientFont = assertClientFont;\n  exports.assertClientImage = assertClientImage;\n  exports.assertClientMedia = assertClientMedia;\n  exports.assertClientVideo = assertClientVideo;\n  exports.assertClip = assertClip;\n  exports.assertContainer = assertContainer;\n  exports.assertContainerObject = assertContainerObject;\n  exports.assertContainerType = assertContainerType;\n  exports.assertContent = assertContent;\n  exports.assertContentType = assertContentType;\n  exports.assertConvolutionServerFilter = assertConvolutionServerFilter;\n  exports.assertDataGroup = assertDataGroup;\n  exports.assertDataType = assertDataType;\n  exports.assertDecodeOutput = assertDecodeOutput;\n  exports.assertDecoding = assertDecoding;\n  exports.assertDefined = assertDefined;\n  exports.assertDirection = assertDirection;\n  exports.assertEditType = assertEditType;\n  exports.assertEffect = assertEffect;\n  exports.assertEndpoint = assertEndpoint;\n  exports.assertFilterDefinition = assertFilterDefinition;\n  exports.assertFont = assertFont;\n  exports.assertFontMedia = assertFontMedia;\n  exports.assertIdentified = assertIdentified;\n  exports.assertInteger = assertInteger;\n  exports.assertLoadType = assertLoadType;\n  exports.assertLoaderType = assertLoaderType;\n  exports.assertMashMedia = assertMashMedia;\n  exports.assertMedia = assertMedia;\n  exports.assertMediaType = assertMediaType;\n  exports.assertMethod = assertMethod;\n  exports.assertMoveAction = assertMoveAction;\n  exports.assertNumber = assertNumber;\n  exports.assertObject = assertObject;\n  exports.assertPlugin = assertPlugin;\n  exports.assertPoint = assertPoint;\n  exports.assertPopulatedArray = assertPopulatedArray;\n  exports.assertPopulatedObject = assertPopulatedObject;\n  exports.assertPopulatedString = assertPopulatedString;\n  exports.assertPositive = assertPositive;\n  exports.assertProbeOptions = assertProbeOptions;\n  exports.assertProbeOutput = assertProbeOutput;\n  exports.assertProbing = assertProbing;\n  exports.assertProperty = assertProperty;\n  exports.assertRect = assertRect;\n  exports.assertRequest = assertRequest;\n  exports.assertRgb = assertRgb;\n  exports.assertSelectType = assertSelectType;\n  exports.assertSize = assertSize;\n  exports.assertSizeAboveZero = assertSizeAboveZero;\n  exports.assertString = assertString;\n  exports.assertTime = assertTime;\n  exports.assertTimeRange = assertTimeRange;\n  exports.assertTrack = assertTrack;\n  exports.assertTranscodingType = assertTranscodingType;\n  exports.assertTrue = assertTrue;\n  exports.assertTweenable = assertTweenable;\n  exports.assertTweenableDefinition = assertTweenableDefinition;\n  exports.assertTyped = assertTyped;\n  exports.assertUpdatableDuration = assertUpdatableDuration;\n  exports.assertUpdatableDurationDefinition = assertUpdatableDurationDefinition;\n  exports.assertUpdatableSize = assertUpdatableSize;\n  exports.assertUpdatableSizeDefinition = assertUpdatableSizeDefinition;\n  exports.assertValue = assertValue;\n  exports.assertValueObject = assertValueObject;\n  exports.assertVideo = assertVideo;\n  exports.assertVideoMedia = assertVideoMedia;\n  exports.audioDefinition = audioDefinition;\n  exports.audioDefinitionFromId = audioDefinitionFromId;\n  exports.audioFromId = audioFromId;\n  exports.audioInstance = audioInstance;\n  exports.audioPreviewInstance = audioPreviewInstance;\n  exports.centerPoint = centerPoint;\n  exports.clipInstance = clipInstance;\n  exports.colorBlack = colorBlack;\n  exports.colorBlackOpaque = colorBlackOpaque;\n  exports.colorBlackTransparent = colorBlackTransparent;\n  exports.colorBlue = colorBlue;\n  exports.colorFromRgb = colorFromRgb;\n  exports.colorGreen = colorGreen;\n  exports.colorMixRbg = colorMixRbg;\n  exports.colorMixRbga = colorMixRbga;\n  exports.colorRed = colorRed;\n  exports.colorRgbDifference = colorRgbDifference;\n  exports.colorRgbKeys = colorRgbKeys;\n  exports.colorRgbToHex = colorRgbToHex;\n  exports.colorRgbaKeys = colorRgbaKeys;\n  exports.colorRgbaToHex = colorRgbaToHex;\n  exports.colorToRgb = colorToRgb;\n  exports.colorToRgba = colorToRgba;\n  exports.colorTransparent = colorTransparent;\n  exports.colorValid = colorValid;\n  exports.colorValidHex = colorValidHex;\n  exports.colorWhite = colorWhite;\n  exports.colorWhiteOpaque = colorWhiteOpaque;\n  exports.colorWhiteTransparent = colorWhiteTransparent;\n  exports.colorYellow = colorYellow;\n  exports.commandFilesInput = commandFilesInput;\n  exports.commandFilesInputIndex = commandFilesInputIndex;\n  exports.decodingInstance = decodingInstance;\n  exports.editorArgs = editorArgs;\n  exports.editorInstance = editorInstance;\n  exports.editorSelectionInstance = editorSelectionInstance;\n  exports.effectDefinition = effectDefinition;\n  exports.effectDefinitionFromId = effectDefinitionFromId;\n  exports.effectFromId = effectFromId;\n  exports.effectInstance = effectInstance;\n  exports.encodingInstance = encodingInstance;\n  exports.endpointAbsolute = endpointAbsolute;\n  exports.endpointFromAbsolute = endpointFromAbsolute;\n  exports.endpointFromUrl = endpointFromUrl;\n  exports.endpointIsAbsolute = endpointIsAbsolute;\n  exports.endpointUrl = endpointUrl;\n  exports.error = error;\n  exports.errorCaught = errorCaught;\n  exports.errorMessage = errorMessage;\n  exports.errorName = errorName;\n  exports.errorObject = errorObject;\n  exports.errorObjectCaught = errorObjectCaught;\n  exports.errorPromise = errorPromise;\n  exports.errorThrow = errorThrow;\n  exports.eventStop = eventStop;\n  exports.filePromises = filePromises;\n  exports.filterDefinition = filterDefinition;\n  exports.filterDefinitionFromId = filterDefinitionFromId;\n  exports.filterFromId = filterFromId;\n  exports.filterInstance = filterInstance;\n  exports.fontDefault = fontDefault;\n  exports.fontDefinition = fontDefinition;\n  exports.fontDefinitionFromId = fontDefinitionFromId;\n  exports.fontFind = fontFind;\n  exports.idGenerate = idGenerate;\n  exports.idGenerateString = idGenerateString;\n  exports.idIsTemporary = idIsTemporary;\n  exports.idTemporary = idTemporary;\n  exports.imageDefinition = imageDefinition;\n  exports.imageDefinitionFromId = imageDefinitionFromId;\n  exports.imageFromId = imageFromId;\n  exports.imageFromVideoPromise = imageFromVideoPromise;\n  exports.imageInstance = imageInstance;\n  exports.isAboveZero = isAboveZero;\n  exports.isAction = isAction;\n  exports.isActionEvent = isActionEvent;\n  exports.isActionInit = isActionInit;\n  exports.isArray = isArray;\n  exports.isAudio = isAudio;\n  exports.isAudioMedia = isAudioMedia;\n  exports.isBelowOne = isBelowOne;\n  exports.isBoolean = isBoolean;\n  exports.isChangeAction = isChangeAction;\n  exports.isChangeActionObject = isChangeActionObject;\n  exports.isClientAudio = isClientAudio;\n  exports.isClientFont = isClientFont;\n  exports.isClientImage = isClientImage;\n  exports.isClientMedia = isClientMedia;\n  exports.isClientVideo = isClientVideo;\n  exports.isClip = isClip;\n  exports.isClipObject = isClipObject;\n  exports.isClipSelectType = isClipSelectType;\n  exports.isColorContent = isColorContent;\n  exports.isContainer = isContainer;\n  exports.isContainerDefinition = isContainerDefinition;\n  exports.isContainerObject = isContainerObject;\n  exports.isContainerType = isContainerType;\n  exports.isContent = isContent;\n  exports.isContentDefinition = isContentDefinition;\n  exports.isContentType = isContentType;\n  exports.isConvolutionServerFilter = isConvolutionServerFilter;\n  exports.isCookedType = isCookedType;\n  exports.isDataGroup = isDataGroup;\n  exports.isDataType = isDataType;\n  exports.isDecodeOutput = isDecodeOutput;\n  exports.isDecoding = isDecoding;\n  exports.isDecodingType = isDecodingType;\n  exports.isDefined = isDefined;\n  exports.isDefiniteError = isDefiniteError;\n  exports.isDirection = isDirection;\n  exports.isEditType = isEditType;\n  exports.isEffect = isEffect;\n  exports.isEffectMedia = isEffectMedia;\n  exports.isEndpoint = isEndpoint;\n  exports.isErrorName = isErrorName;\n  exports.isEventType = isEventType;\n  exports.isFillType = isFillType;\n  exports.isFilterDefinition = isFilterDefinition;\n  exports.isFloat = isFloat;\n  exports.isFont = isFont;\n  exports.isFontMedia = isFontMedia;\n  exports.isGraphFileType = isGraphFileType;\n  exports.isIdentified = isIdentified;\n  exports.isImage = isImage;\n  exports.isImageMedia = isImageMedia;\n  exports.isInteger = isInteger;\n  exports.isJsonRecord = isJsonRecord;\n  exports.isJsonRecords = isJsonRecords;\n  exports.isLoadType = isLoadType;\n  exports.isLoaderType = isLoaderType;\n  exports.isMashAndMediaObject = isMashAndMediaObject;\n  exports.isMashMedia = isMashMedia;\n  exports.isMedia = isMedia;\n  exports.isMediaInstance = isMediaInstance;\n  exports.isMediaInstanceObject = isMediaInstanceObject;\n  exports.isMediaObject = isMediaObject;\n  exports.isMediaType = isMediaType;\n  exports.isMethod = isMethod;\n  exports.isMoveAction = isMoveAction;\n  exports.isNan = isNan;\n  exports.isNumber = isNumber;\n  exports.isNumberOrNaN = isNumberOrNaN;\n  exports.isNumeric = isNumeric;\n  exports.isObject = isObject;\n  exports.isOrientation = isOrientation;\n  exports.isOutput = isOutput;\n  exports.isPlugin = isPlugin;\n  exports.isPoint = isPoint;\n  exports.isPopulatedArray = isPopulatedArray;\n  exports.isPopulatedObject = isPopulatedObject;\n  exports.isPopulatedString = isPopulatedString;\n  exports.isPositive = isPositive;\n  exports.isProbeOptions = isProbeOptions;\n  exports.isProbeOutput = isProbeOutput;\n  exports.isProbing = isProbing;\n  exports.isPropertied = isPropertied;\n  exports.isProperty = isProperty;\n  exports.isRawMedia = isRawMedia;\n  exports.isRawType = isRawType;\n  exports.isRect = isRect;\n  exports.isRequest = isRequest;\n  exports.isRequestable = isRequestable;\n  exports.isRequestableObject = isRequestableObject;\n  exports.isRgb = isRgb;\n  exports.isSelectType = isSelectType;\n  exports.isSelectedProperty = isSelectedProperty;\n  exports.isShapeContainer = isShapeContainer;\n  exports.isSize = isSize;\n  exports.isSizingMediaType = isSizingMediaType;\n  exports.isString = isString;\n  exports.isTime = isTime;\n  exports.isTimeRange = isTimeRange;\n  exports.isTimingMediaType = isTimingMediaType;\n  exports.isTrack = isTrack;\n  exports.isTranscodeOutput = isTranscodeOutput;\n  exports.isTranscoding = isTranscoding;\n  exports.isTranscodingType = isTranscodingType;\n  exports.isTriggerType = isTriggerType;\n  exports.isTrueValue = isTrueValue;\n  exports.isTweenable = isTweenable;\n  exports.isTweenableDefinition = isTweenableDefinition;\n  exports.isTyped = isTyped;\n  exports.isUndefined = isUndefined;\n  exports.isUpdatableDuration = isUpdatableDuration;\n  exports.isUpdatableDurationDefinition = isUpdatableDurationDefinition;\n  exports.isUpdatableDurationType = isUpdatableDurationType;\n  exports.isUpdatableSize = isUpdatableSize;\n  exports.isUpdatableSizeDefinition = isUpdatableSizeDefinition;\n  exports.isUpdatableSizeType = isUpdatableSizeType;\n  exports.isValue = isValue;\n  exports.isValueObject = isValueObject;\n  exports.isVideo = isVideo;\n  exports.isVideoMedia = isVideoMedia;\n  exports.mashDefault = mashDefault;\n  exports.mashMedia = mashMedia;\n  exports.mediaDefinition = mediaDefinition;\n  exports.mediaInfo = mediaInfo;\n  exports.mediaTypeFromMime = mediaTypeFromMime;\n  exports.pixelToFrame = pixelToFrame;\n  exports.plugin = plugin;\n  exports.pluginId = pluginId;\n  exports.pluginPromise = pluginPromise;\n  exports.pointCopy = pointCopy;\n  exports.pointNegate = pointNegate;\n  exports.pointRound = pointRound;\n  exports.pointString = pointString;\n  exports.pointValueString = pointValueString;\n  exports.pointsEqual = pointsEqual;\n  exports.propertyInstance = propertyInstance;\n  exports.propertyTypeCoerce = propertyTypeCoerce;\n  exports.propertyTypeDefault = propertyTypeDefault;\n  exports.propertyTypeIsString = propertyTypeIsString;\n  exports.propertyTypeValid = propertyTypeValid;\n  exports.protocolLoadPromise = protocolLoadPromise;\n  exports.rectCopy = rectCopy;\n  exports.rectFromSize = rectFromSize;\n  exports.rectRound = rectRound;\n  exports.rectString = rectString;\n  exports.rectsEqual = rectsEqual;\n  exports.rectsFromSizes = rectsFromSizes;\n  exports.requestAudioPromise = requestAudioPromise;\n  exports.requestExtension = requestExtension;\n  exports.requestFontPromise = requestFontPromise;\n  exports.requestImagePromise = requestImagePromise;\n  exports.requestMediaPromise = requestMediaPromise;\n  exports.requestPromise = requestPromise;\n  exports.requestProtocol = requestProtocol;\n  exports.requestProtocolPromise = requestProtocolPromise;\n  exports.requestRawPromise = requestRawPromise;\n  exports.requestRecordPromise = requestRecordPromise;\n  exports.requestRecordsPromise = requestRecordsPromise;\n  exports.requestVideoPromise = requestVideoPromise;\n  exports.resolverExtension = resolverExtension;\n  exports.resolverLoad = resolverLoad;\n  exports.resolverPathPromise = resolverPathPromise;\n  exports.resolverPromise = resolverPromise;\n  exports.roundMethod = roundMethod;\n  exports.roundWithMethod = roundWithMethod;\n  exports.selectedPropertiesScalarObject = selectedPropertiesScalarObject;\n  exports.selectedPropertyObject = selectedPropertyObject;\n  exports.sequenceDefinition = sequenceDefinition;\n  exports.sequenceDefinitionFromId = sequenceDefinitionFromId;\n  exports.sequenceFromId = sequenceFromId;\n  exports.sequenceInstance = sequenceInstance;\n  exports.sizeAboveZero = sizeAboveZero;\n  exports.sizeCeil = sizeCeil;\n  exports.sizeCopy = sizeCopy;\n  exports.sizeCover = sizeCover;\n  exports.sizeEven = sizeEven;\n  exports.sizeFloor = sizeFloor;\n  exports.sizeFromElement = sizeFromElement;\n  exports.sizeLock = sizeLock;\n  exports.sizeLockNegative = sizeLockNegative;\n  exports.sizeRound = sizeRound;\n  exports.sizeScale = sizeScale;\n  exports.sizeString = sizeString;\n  exports.sizedEven = sizedEven;\n  exports.sizesEqual = sizesEqual;\n  exports.sortByFrame = sortByFrame;\n  exports.sortByIndex = sortByIndex;\n  exports.sortByLabel = sortByLabel;\n  exports.sortByTrack = sortByTrack;\n  exports.stringFamilySizeRect = stringFamilySizeRect;\n  exports.stringPluralize = stringPluralize;\n  exports.stringSeconds = stringSeconds;\n  exports.svgAddClass = svgAddClass;\n  exports.svgAppend = svgAppend;\n  exports.svgDefsElement = svgDefsElement;\n  exports.svgDifferenceDefs = svgDifferenceDefs;\n  exports.svgElement = svgElement;\n  exports.svgElementInitialize = svgElementInitialize;\n  exports.svgFeImageElement = svgFeImageElement;\n  exports.svgFilter = svgFilter;\n  exports.svgFilterElement = svgFilterElement;\n  exports.svgFunc = svgFunc;\n  exports.svgGroupElement = svgGroupElement;\n  exports.svgId = svgId;\n  exports.svgImageElement = svgImageElement;\n  exports.svgImagePromise = svgImagePromise;\n  exports.svgImagePromiseWithOptions = svgImagePromiseWithOptions;\n  exports.svgMaskElement = svgMaskElement;\n  exports.svgPathElement = svgPathElement;\n  exports.svgPatternElement = svgPatternElement;\n  exports.svgPolygonElement = svgPolygonElement;\n  exports.svgRectPoints = svgRectPoints;\n  exports.svgSet = svgSet;\n  exports.svgSetBox = svgSetBox;\n  exports.svgSetChildren = svgSetChildren;\n  exports.svgSetDimensions = svgSetDimensions;\n  exports.svgSetDimensionsLock = svgSetDimensionsLock;\n  exports.svgSetTransform = svgSetTransform;\n  exports.svgSetTransformPoint = svgSetTransformPoint;\n  exports.svgSetTransformRects = svgSetTransformRects;\n  exports.svgSvgElement = svgSvgElement;\n  exports.svgText = svgText;\n  exports.svgTransform = svgTransform;\n  exports.svgUrl = svgUrl;\n  exports.svgUseElement = svgUseElement;\n  exports.timeEqualizeRates = timeEqualizeRates;\n  exports.timeFromArgs = timeFromArgs;\n  exports.timeFromSeconds = timeFromSeconds;\n  exports.timeRangeFromArgs = timeRangeFromArgs;\n  exports.timeRangeFromSeconds = timeRangeFromSeconds;\n  exports.timeRangeFromTime = timeRangeFromTime;\n  exports.timeRangeFromTimes = timeRangeFromTimes;\n  exports.trackInstance = trackInstance;\n  exports.transcodingInstance = transcodingInstance;\n  exports.tweenColorStep = tweenColorStep;\n  exports.tweenColors = tweenColors;\n  exports.tweenCoverPoints = tweenCoverPoints;\n  exports.tweenCoverSizes = tweenCoverSizes;\n  exports.tweenInputTime = tweenInputTime;\n  exports.tweenMaxSize = tweenMaxSize;\n  exports.tweenMinMax = tweenMinMax;\n  exports.tweenMinSize = tweenMinSize;\n  exports.tweenNumberObject = tweenNumberObject;\n  exports.tweenNumberStep = tweenNumberStep;\n  exports.tweenOption = tweenOption;\n  exports.tweenOverPoint = tweenOverPoint;\n  exports.tweenOverRect = tweenOverRect;\n  exports.tweenOverSize = tweenOverSize;\n  exports.tweenPad = tweenPad;\n  exports.tweenPosition = tweenPosition;\n  exports.tweenRectLock = tweenRectLock;\n  exports.tweenRectStep = tweenRectStep;\n  exports.tweenRects = tweenRects;\n  exports.tweenRectsLock = tweenRectsLock;\n  exports.tweenScaleSizeRatioLock = tweenScaleSizeRatioLock;\n  exports.tweenScaleSizeToRect = tweenScaleSizeToRect;\n  exports.tweenableRects = tweenableRects;\n  exports.tweeningPoints = tweeningPoints;\n  exports.urlBase = urlBase;\n  exports.urlBaseInitialize = urlBaseInitialize;\n  exports.urlBaseInitialized = urlBaseInitialized;\n  exports.urlCombine = urlCombine;\n  exports.urlEndpoint = urlEndpoint;\n  exports.urlExtension = urlExtension;\n  exports.urlFilename = urlFilename;\n  exports.urlForEndpoint = urlForEndpoint;\n  exports.urlFromCss = urlFromCss;\n  exports.urlFromEndpoint = urlFromEndpoint;\n  exports.urlHasProtocol = urlHasProtocol;\n  exports.urlIsBlob = urlIsBlob;\n  exports.urlIsHttp = urlIsHttp;\n  exports.urlIsObject = urlIsObject;\n  exports.urlOptions = urlOptions;\n  exports.urlOptionsObject = urlOptionsObject;\n  exports.urlPrependProtocol = urlPrependProtocol;\n  exports.urlProtocol = urlProtocol;\n  exports.urlResolve = urlResolve;\n  exports.videoDefinition = videoDefinition;\n  exports.videoDefinitionFromId = videoDefinitionFromId;\n  exports.videoFromId = videoFromId;\n  exports.videoInstance = videoInstance;\n\n}));\n"],"names":["exports","_exports$SelectType$N","_exports$SelectType$C","_exports$SelectType$M","_exports$SelectType$T","_exports$SelectType$C2","_exports$SelectType$C3","_Endpoints","_MediaFactories","_MediaDefaults","_Plugins","ErrorName","Environment","DecodeProbe","Unknown","Internal","Type","Reference","Range","Syntax","Url","Evaluation","ClientDisabledDelete","ClientDisabledGet","ClientDisabledList","ClientDisabledSave","ImportType","ImportDuration","ImportSize","ImportFile","ServerAuthentication","ServerAuthorization","FilterId","MediaId","Unimplemented","Frame","OutputDuration","OutputDimensions","ErrorNames","Object","values","StandardErrorName","Error","EvalError","InternalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError","isErrorName","value","includes","errorMessage","name","context","errorObject","message","arguments","length","undefined","cause","error","assign","errorObjectCaught","errorName","_error$message","_error$name","String","code","errorCaught","errorPromise","Promise","resolve","errorExpected","expected","prop","type","isDefined","isObject","words","push","constructor","JSON","stringify","concat","join","errorThrow","property","object","console","trace","toString","assertObject","isString","assertString","isUndefined","isNumberOrNaN","assertNumber","isBoolean","assertBoolean","isMethod","assertMethod","assertDefined","isNan","Number","isNaN","isNumber","isInteger","assertInteger","isFloat","isPositive","assertPositive","isBelowOne","isAboveZero","assertAboveZero","isArray","Array","assertArray","isPopulatedString","assertPopulatedString","isPopulatedArray","assertPopulatedArray","isPopulatedObject","keys","assertPopulatedObject","isNumeric","assertTrue","isRgb","assertRgb","isTime","assertTime","isTimeRange","isRange","assertTimeRange","isValue","isTrueValue","assertValue","isValueObject","every","assertValueObject","isJsonRecord","isJsonRecords","isDefiniteError","AudioType","EffectType","FontType","ImageType","MashType","SequenceType","VideoType","AudioStreamType","VideoStreamType","JsonType","RecordType","RecordsType","MediaTypes","isMediaType","assertMediaType","TranscodingTypes","isTranscodingType","assertTranscodingType","CookedTypes","isCookedType","RawTypes","isRawType","LoadTypes","isLoadType","assertLoadType","SizingMediaTypes","isSizingMediaType","TimingMediaTypes","isTimingMediaType","ContainerTypes","isContainerType","assertContainerType","ContentTypes","isContentType","assertContentType","SelectType","AVType","ActionType","DroppingPosition","EditTypes","isEditType","assertEditType","SelectTypes","isSelectType","assertSelectType","OutputFormat","ClipSelectTypes","Content","Container","isClipSelectType","FillType","EncodingTypes","GraphFileType","FillTypes","isFillType","DataType","GraphFileTypes","isGraphFileType","Orientation","DataTypes","isDataType","assertDataType","Direction","Orientations","isOrientation","Anchor","Directions","isDirection","assertDirection","TriggerType","Anchors","EventType","TransformType","TriggerTypes","isTriggerType","ServerType","MasherAction","MoveType","EventTypes","isEventType","Timing","Duration","ServerTypes","Sizing","Timings","Clicking","Sizings","Component","Clickings","ApiVersion","EndpointsApi","servers","callbacks","EndpointsRendering","_objectSpread","start","status","upload","EndpointsCrud","delete","get","put","retrieve","EndpointsData","cast","default","mash","stream","definition","EndpointsFile","store","Endpoints","_defineProperty","Api","Data","File","Rendering","entries","forEach","_ref","_ref2","_slicedToArray","serverType","server","_ref3","_ref4","key1","value1","_ref5","_ref6","key2","isOutput","isIdentified","id","assertIdentified","OrderAscending","OrderDecending","ExtJpeg","JsonExtension","TextExtension","CssExtension","Mp4Extension","PngExtension","CssContentType","EmptyMethod","NamespaceSvg","NamespaceXhtml","NamespaceLink","IdPrefix","IdSuffix","ClassDisabled","ClassItem","ClassButton","ClassCollapsed","ClassSelected","ClassDropping","ClassDroppingBefore","ClassDroppingAfter","arrayLast","array","arraySet","items","splice","apply","_toConsumableArray","arrayReversed","reverse","arrayUnique","Set","urlBaseValue","urlBase","urlBaseInitialized","urlBaseInitialize","base","document","globalThis","baseURI","Boolean","urlEndpoint","endpoint","url","URL","protocol","hostname","port","pathname","result","urlResolve","urlIsObject","startsWith","urlIsHttp","urlIsBlob","urlHasProtocol","urlCombine","path","endsWith","slice","_path","first","second","urlBits","split","component","pop","urlFromEndpoint","mergedEndpoint","search","bits","combined","urlForEndpoint","suffix","slashed","href","urlProtocol","string","colonIndex","indexOf","urlOptionsObject","options","map","pair","_pair$split","_pair$split2","key","fromEntries","urlOptions","entry","urlPrependProtocol","withColon","urlExtension","extension","urlFilename","urlFromCss","exp","matches","matchAll","matchesArray","isEndpoint","assertEndpoint","endpointUrl","absolute","endpointAbsolute","endpointFromAbsolute","urlString","endpointFromUrl","_urlString$split","_urlString$split2","endpointIsAbsolute","isRequest","response","assertRequest","isRequestableObject","isRequestable","request","colorRgbRegex","colorRgbaRegex","colorHexRegex","colorStrip","color","toLowerCase","replace","colorStyle","Option","log","style","colorValidRgba","test","colorValidRgb","getChunksFromString","st","chunkSize","match","RegExp","hex256","hexStr","parseInt","repeat","colorAlpha","Math","max","min","colorHexToRgba","hex","colorValidHex","colorRgba","floor","hexArr","_hexArr$map","_hexArr$map2","r","g","b","a","colorHexToRgb","colorRgb","_hexArr$map3","_hexArr$map4","colorRgbaToRgba","rgbaMatch","colorRgbKeys","colorRgbaKeys","colorTransparent","colorBlack","colorWhite","colorWhiteTransparent","colorBlackTransparent","colorWhiteOpaque","colorBlackOpaque","colorGreen","colorYellow","colorRed","colorBlue","colorRgbToHex","rgb","colorRgbaToHex","round","colorValid","stripped","transformed","styleStripped","colorToRgb","rgbMatch","colorToRgba","colorFromRgb","colorRgbDifference","colorMixRbga","fromRgba","toRgba","amountToMix","colorMixRbg","fromRgb","toRgb","PropertyTypesNumeric","Percent","propertyTypeRepresentedAsNumber","dataType","propertyTypeIsString","propertyTypeDefault","Rgb","propertyTypeValidBoolean","propertyTypeValid","ContainerId","ContentId","FontId","DefinitionId","propertyTypeCoerce","PropertyTweenSuffix","PropertiedClass","_classCallCheck","_createClass","_this$properties","_this","_len","properties","_key","this","propertyTweenSetOrDefault","_this2","find","defaultValue","definedValue","setValue","tweenable","propertySetOrDefault","propertyName","found","propertyFind","p","coerced","_this3","_ref7","_ref8","_this4","flatMap","isPropertied","RequestableClass","_PropertiedClass","_inherits","_super","_createSuper","_this5","call","_assertThisInitialized","kind","createdAt","relativeRequest","_objectWithoutProperties","_excluded","isTranscoding","isMediaInstanceObject","isMediaInstance","isMediaObject","isMedia","assertMedia","MediaFactoriesUnimplemented","_","MediaFactories","mediaDefinition","MediaDefaults","counters","count","MediaCollection","Map","media","_this6","byId","set","list","mediaArraysByType","definitions","_this7","_len2","objects","_key2","fromObject","mediaArray","byType","index","findIndex","shift","installed","mediaType","mediaTypeFromId","predefined","fromId","install","uninstall","updateDefinition","byIdAdd","_console","has","some","oldDefinition","newDefinition","oldId","newId","deleteFromArray","isTyped","assertTyped","isClientVideo","HTMLVideoElement","assertClientVideo","isClientImage","HTMLImageElement","assertClientImage","isClientAudio","AudioBuffer","assertClientAudio","isClientFont","assertClientFont","isLoaderType","assertLoaderType","isClientMedia","assertClientMedia","isRawMedia","AudibleSampleRate","AudibleChannels","AudibleContext","source","sourcesById","_context","Klass","AudioContext","window","webkitAudioContext","seconds","createBuffer","buffer","sourceNode","createBufferSource","createGain","currentTime","_this8","reject","decodeAudioData","audioData","getSource","gainSource","gainNode","disconnect","destination","stop","duration","offset","loops","loop","connect","addSource","AudibleContextInstance","ContextFactory","audible","isMashAndMediaObject","isMashMedia","assertMashMedia","Action","redoSelection","undoSelection","undoMash","redoAction","done","undoAction","isAction","assertAction","isActionInit","action","isActionEvent","CustomEvent","detail","AddTrackAction","_Action","_super2","_this9","createTracks","i","addTrack","removeTrack","AddClipToTrackAction","_AddTrackAction","_super3","_this10","clips","insertIndex","trackIndex","redoFrame","undoFrame","tracks","_get","_getPrototypeOf","prototype","addClipToTrack","removeClipFromTrack","isChangeActionObject","ChangeAction","_Action2","_super4","_this11","redoValue","target","undoValue","redo","isChangeAction","assertChangeAction","ChangeFramesAction","_ChangeAction","_super5","changeTiming","redoValueNumeric","undoValueNumeric","MoveClipAction","_AddTrackAction2","_super6","_this12","clip","undoInsertIndex","undoTrackIndex","frame","addClip","RemoveClipAction","_Action3","_super7","_this13","track","ChangeMultipleAction","_ChangeAction2","_super8","_this14","redoValues","undoValues","_ref9","_ref10","_ref11","_ref12","MoveAction","_Action4","_super9","_this15","redoObjects","undoObjects","_this$objects","_this$objects2","isMoveAction","assertMoveAction","actionInstance","AddClipToTrack","AddTrack","Change","ChangeFrame","ChangeMultiple","MoveClip","Move","RemoveClip","ActionFactory","createFromObject","Actions","editor","remove","instances","canUndo","_object$type","rest","_excluded2","clone","selection","currentActionLast","currentAction","updateAction","handleAction","add","canRedo","undo","isSize","width","height","assertSize","sizesEqual","size","sizeEnd","SizeZero","sizedEven","number","ceil","sizeEven","sizeRound","point","sizeCeil","sizeFloor","sizeScale","horizontally","vertically","sizeCover","inSize","outSize","contain","assertSizeAboveZero","inWidth","inHeight","scaleWidth","scaleHeight","sizeAboveZero","SizeOutput","SizePreview","SizeIcon","sizeCopy","_size$width","_size$height","sizeLock","lockSize","lock","copy","H","V","sizeString","sizeLockNegative","locked","sizeFromElement","element","getAttribute","Emitter","_EventTarget","_super10","_this16","_len3","args","_key3","dispatchEvent","event","trapped","listener","dispatch","_wrapNativeSuper","EventTarget","roundMethod","roundWithMethod","func","timeGreatestCommonDenominator","fps1","fps2","t","timeLowestCommonMultiplier","timeEqualizeRates","time1","time2","rounding","fps","gcf","scale","TimeClass","time","_timeEqualizeRates","_timeEqualizeRates2","frames","timeRange","halfTime","_timeEqualizeRates3","_timeEqualizeRates4","midTime","editorTime","lastTime","startTime","withFrame","_timeEqualizeRates5","_timeEqualizeRates6","rate","framesMax","startFrame","scaledFrame","endTime","endFrame","_timeEqualizeRates7","_timeEqualizeRates8","scaleToTime","_timeEqualizeRates9","_timeEqualizeRates10","subtracted","description","TimeRangeClass","_TimeClass","_super11","_this17","end","_timeEqualizeRates11","_timeEqualizeRates12","range1","range2","from","_timeEqualizeRates13","_timeEqualizeRates14","thisTime","scaledTime","thisRange","other","range","_timeEqualizeRates15","_timeEqualizeRates16","frame1","end1","frame2","end2","frameMax","includesTime","_timeEqualizeRates17","_timeEqualizeRates18","last","position","_timeEqualizeRates19","_timeEqualizeRates20","timeRangeFromArgs","timeRangeFromSeconds","timeRangeFromTime","timeRangeFromTimes","_timeEqualizeRates21","_timeEqualizeRates22","timeFromArgs","timeFromSeconds","rounded","isTweenable","assertTweenable","isTweenableDefinition","assertTweenableDefinition","isEffect","assertEffect","isEffectMedia","isTrack","assertTrack","DefaultMash","label","quantize","gain","Default","volume","precision","autoplay","video","effect","audio","image","audiostream","sequence","videostream","font","textcontainer","shape","visible","videosequence","pattern","increment","begin","padding","isClipObject","isClip","assertClip","None","Clip","Mash","Track","DataGroup","EditorSelectionClass","_object","_this$_object","container","content","_editor","_focus","selectType","selectable","selectables","selectionFromSelectables","_this18","populated","selectionPopulated","originalObject","clear","newObject","oldMash","oldClip","trackNumber","clearPreview","eventTarget","emit","Selection","Loaded","_this19","mashOld","selectTypes","containerId","_this20","types","filteredTypes","filter","selectedItems","actions","editorSelectionInstance","sortByFrame","sortByIndex","sortByTrack","sortByLabel","DataGroups","isDataGroup","assertDataGroup","isProperty","assertProperty","propertyType","propertyValue","propertyInstance","_excluded3","dataValue","dataName","step","IdTemporaryPrefix","IdCountsByPrefix","idGenerateString","components","Date","now","random","idGenerate","prefix","idTemporary","idIsTemporary","DefaultContainerId","TextContainerId","isContainerObject","assertContainerObject","isContainerDefinition","isContainer","assertContainer","DefaultContentId","isContent","assertContent","isContentDefinition","ContentDefinitionMixin","Base","_Base","_class2","_super12","_this21","_len4","_key4","isPoint","x","y","assertPoint","pointsEqual","pointEnd","PointZero","pointCopy","pointRound","pointString","pointValueString","pointNegate","isRect","assertRect","rectsEqual","rect","rectEnd","RectZero","rectFromSize","definedPoint","rectsFromSizes","sizes","points","definedPoints","_sizes","_definedPoints","rectCopy","rectRound","centerPoint","rectString","dimensions","tweenPad","outputDistance","scaledDistance","offE","offW","east","tweenNumberStep","numberEnd","tweenColorStep","valueEnd","tweenRectStep","tweenColors","colorEnd","colors","tweenRects","rects","tweenMaxSize","tweenMinSize","tweenOption","optionStart","optionEnd","pos","tweenableRects","tweenPosition","videoRate","tweenNumberObject","_ref13","_ref14","tweenOverRect","tweenOverPoint","tweenOverSize","tweenScaleSizeToRect","offDirections","outWidth","outHeight","scaledSize","evenSize","E","W","N","S","tweenCoverSizes","scales","outSizes","_outSizes","unscaledSize","unscaledSizeEnd","_scales","scaleEnd","widthEnd","heightEnd","scaledSizeEnd","tweenCoverPoints","scaledSizes","_scaledSizes","coverSize","coverSizeEnd","_outSizes2","_scales2","xEnd","yEnd","tweenRectLock","tweenRectsLock","tweenScaleSizeRatioLock","outputSize","inRatio","forcedScale","tweeningPoints","tweenPoints","tweenMinMax","tweenInputTime","onEdge","nearStart","endDefined","endSelected","commandFilesInputIndex","commandFiles","inputCommandFiles","commandFile","input","inputIndex","inputId","commandFilesInput","aOrV","MediaInstanceBase","_PropertiedClass2","_super13","_this22$properties","_this22","_len5","_key5","propertiesInitialize","mediaId","_id","_label","serverPromise","unload","Parameter","_ref15","_this$values","condition","Filters","isFilterDefinition","assertFilterDefinition","_svgElement","FilterClass","_PropertiedClass3","_super14","_this23$parameters","_this23$properties","_this23","parameters","parameter","existing","commandFilters","_parametersDefined","filterDefinitionSvgs","valueObject","scalarObject","filterDefinitionSvgFilter","_this24","tweening","parametersDefined","FilterDefinitionClass","filterInput","ffmpegFilter","commandFilter","inputs","outputs","_ffmpegFilter","defaults","instanceArgs","svgImageEmitsLoadEvent","svgElement","svgSvgElement","svgElementInitialize","svgId","svgUrl","svgGroupElement","createElementNS","svgSet","svgSetDimensions","svgSetTransformPoint","svgSetTransform","svgRectPoints","_dimensions$x","_dimensions$y","startEndPoint","svgPolygonElement","className","fill","svgAddClass","svgSetBox","boxSize","justSize","viewBox","svgItems","svgAppend","svgSetDimensionsLock","svgImageElement","svgPathElement","svgMaskElement","contentItem","luminance","maskId","maskElement","svgFilter","_excluded4","_ref16","_ref17","kid","appendChild","svgPatternElement","svgDefsElement","svgFeImageElement","svgFilterElement","filters","filtered","units","filterElement","filterId","svgDifferenceDefs","overlayId","filterObject","resultId","differenceFilter","mode","setAttribute","_element$classList","classList","svgUseElement","transform","origin","svgTransform","outX","outY","inX","inY","svgSetTransformRects","svgFunc","svgSetChildren","hasChildNodes","childNodes","nodes","node","removeChild","svgImagePromise","completed","removeEventListener","failed","passed","addEventListener","once","svgText","family","svgItem","append","svgImagePromiseWithOptions","then","item","_excluded5","canvas","createElement","getContext","fillRect","toDataURL","ChromaKeyFilter","_FilterDefinitionClas","_super15","_this25","custom","populateParametersFromProperties","similarity","blend","ColorizeFilter","_FilterDefinitionClas2","_super16","_this26","formatFilter","formatId","formatCommandFilter","pix_fmts","alpha","fromColor","toColor","to","geqFilter","geqFilterId","geqCommandFilter","pixelColor","ColorFilter","_ColorizeFilter","_super17","_this27","tweeningColor","scalars","tweeningSize","startSize","endSize","_scalars","_scalars2","maxSize","fadeFilter","fadeFilterId","fadeCommandFilter","scaleFilter","scaleFilterId","scaleCommandFilter","eval","rectElement","ColorChannelMixerFilterKeys","c","d","ColorChannelMixerFilter","_FilterDefinitionClas3","_super18","_this28","ConvolutionFilter","_FilterDefinitionClas4","_super19","_this29","assertConvolutionServerFilter","optionsFromObject","parse","matrix","bias","multiplier","kernelMatrix","divisor","isConvolutionServerFilter","matrixFromString","trim","biasFromString","parseFloat","multiplierFromString","_components","fromCombined","numbersFromCombined","numberFromCombined","convolutionStringObject","convolutionMatrixObject","stringObject","convolutionBiasObject","convolutionMultiplierObject","convolutionObject","matrixObject","multiplierObject","channel","CropFilter","_FilterDefinitionClas5","_super20","_this30","exact","w","h","OverlayFilter","_FilterDefinitionClas6","_super21","_this31","chainInput","format","yZero","ScaleFilter","_FilterDefinitionClas7","_super22","_this32","OpacityFilter","_FilterDefinitionClas8","_super23","_this33","opacity","lum","cb","cr","opacityEnd","toValue","SetsarFilter","_FilterDefinitionClas9","_super24","_this34","FpsFilter","_FilterDefinitionClas10","_super25","_this35","SetptsFilter","_FilterDefinitionClas11","_super26","_this36","AlphamergeFilter","_FilterDefinitionClas12","_super27","TrimFilter","_FilterDefinitionClas13","_super28","_this37","TextFilter","_ColorizeFilter2","_super29","_this38","transparentFilter","transparentId","contentOutput","textfile","fontfile","stretch","intrinsicWidth","intrinsicHeight","drawtextId","foreColor","backColor","ratio","calculatedWidth","scaling","scaleOptions","textOptions","fontsize","expressions","calc","fontcolor_expr","fontcolor","colorCommand","colorCommandFilter","drawtextFilter","FilterIdPrefix","filterDefinition","filterDefinitionFromId","qualifiedId","filterInstance","instanceFromObject","filterFromId","TweenableMixin","_Base2","_class4","_super30","_this39","_len6","_key6","filterArgs","alphamergeFilter","_alphamergeFilter","normalize","_clip","output","_args$contentColors","contentColors","_contentColors","_contentColors$","_contentColors$2","outputString","colorFilter","colorArgs","cropCommandFilter","_colorFilter","_args$filterInput","initialFilters","initialCommandFilters","containerCommandFilters","contentCommandFilters","_args$contentColors2","containerRects","_containerRects","_colors","_cropFilter","mashTime","clipRange","scaleToFps","graphFileArgs","_this40","files","graphFiles","inputCount","graphFile","editing","clipTime","_this$graphFiles","loadPromise","bottomInput","topInput","overlayArgs","overlayFilter","_overlayFilter","_containerRects2","lengthSeconds","filterCommandFilterArgs","_scaleFilter","_this41","timing","sizing","relevantTiming","relevantSizing","timingBound","sizingBound","changeHandler","Custom","actionObject","create","props","selectedProperty","selectedProperties","_this42","tweenName","selectedPropertEnd","mutable","keyPrefix","rangeFrame","_this$tweenValues","tweenValues","_this$tweenValues2","xEndOrNot","_this$tweenValues3","_this$tweenValues4","yEndOrNot","_this$tweenSizes","tweenSizes","_this$tweenSizes2","_this$tweenPoints","_this$tweenPoints2","_this$tweenValues5","_this$tweenValues6","widthEndOrNot","_this$tweenValues7","_this$tweenValues8","heightEndOrNot","tween","fileCommandFiles","alphamerge","chromakey","colorchannelmixer","colorize","convolution","crop","overlay","setpts","setsar","text","_ref18","_ref19","unqualifiedId","klass","isVideoMedia","assertVideoMedia","isVideo","assertVideo","DecodeType","EncodeType","TranscodeType","ProtocolType","LanguageType","FilterType","ResolveType","Plugins","isPlugin","assertPlugin","pluginId","plugin","pluginType","plugins","safeId","pluginPromise","HttpProtocol","HttpsProtocol","BlobProtocol","FileProtocol","protocolLoadPromise","makeRequestEndpointAbsolute","requestExtension","_endpoint$pathname","requestProtocol","requestAudioPromise","data","requestProtocolPromise","protocolPlugin","promise","onError","setRequestResponse","requestFontPromise","requestImagePromise","orError","requestVideoPromise","requestRecordPromise","requestRecordsPromise","requestRawPromise","requestMediaPromise","requestPromise","ContainerMixin","_Base3","_class6","_super31","_this43","_len7","_key7","addProperties","group","Point","direction","Opacity","_colorizeFilter","colorizeFilter","_colors2","zeroRect","definitionTime","preferredTranscoding","loadedImagePromise","src","clientImage","stylesSrcPromise","styles","containerRect","_this44","containerPoint","updatableContainer","isVector","stylesPromise","div","containerItem","pathElement","clipId","clipElement","svg","_this45","containedPromise","contentPreviewItemPromise","Player","containedVideo","containerPromise","containerSvgItemPromise","defs","updatableContent","polygonElement","useContainerInMask","containerSvgFilter","removeAttribute","contentSvgFilter","colorMaximize","colorBackCommandFilters","alphamergeCommandFilters","containerFinalCommandFilters","opacityFilters","opacityCommandFilters","translateCommandFilters","inRect","_locked","directionObject","transformedRect","forcedScaleEnd","tweenRect","_this$tweenValues9","opacityFilter","filterSvgFilter","_this46","_div","_this$tweenValues11","_this$tweenValues12","setValues","_opacityFilter","_containerRects3","EffectClass","_EffectContainerWithC","_super32","_this47","_len8","_key8","_this48","setFilterValues","_this49","_this50","_this51","filterNames","previewSize","_this52","definitionFilters","TweenableDefinitionMixin","_Base4","_class7","_super33","_this53","_len9","_key9","TranscodingClass","_RequestableClass","_super34","_this54","purpose","transcodingInstance","DecodingClass","decodingInstance","MediaBase","_RequestableClass2","_super35","_this55$decodings","_this55$transcodings","_this55","decodings","transcodings","file","_len10","_key10","transcoding","_this56","_len11","_key11","_loop","_types","_i","v","_ret","_this57","serverPath","ContainerDefinitionMixin","_Base5","_class9","_super36","_this58","_len12","_key12","Size","EffectMediaClass","_EffectContainerDefin","_super37","_this59$properties","_this59$filters","_this59","initializeFilter","finalizeFilter","effectBlurJson","effectDefinition","effectDefinitionFromId","effectInstance","_object$mediaId","effectFromId","isAudio","isAudioMedia","ContentMixin","_Base6","_class11","_super38","_this60$effects","_this60","_len13","_key13","_assertThisInitialize3","isDefaultOrAudio","effects","timeDuration","trimFilter","trimId","trimOptions","delays","adelayFilter","adelayId","adelayCommandFilter","all","amixCommandFilters","effectsCommandFilters","contentSvgItemPromise","loading","tuple","intrinsicsKnown","intrinsicRect","coverSizes","_coverSizes","coverPoints","_coverPoints","svgFilters","definitionIds","isDefault","selectedEffects","removeHandler","removeEffect","bind","moveHandler","moveEffect","addHandler","addEffect","json","effectsCommandFiles","isColorContent","ColorContentClass","_ColorContentWithCont","_super39","_this61","_len14","_key14","Color","_this$tweenValues13","_this$tweenValues14","colorEndOrNot","_this$tweenValues15","_colorFilter$filterSv","filterSvgs","ColorContentIcon","ColorContentSize","ColorContentDefinitionClass","_ColorContentDefiniti","_super40","_this62","_len15","_key15","outRect","pixelToFrame","pixels","perFrame","eventStop","preventDefault","stopPropagation","TrackPreviewHandleSize","TrackPreviewLineSize","TrackPreviewClass","classes","inactive","pointerDownHandler","preview","icon","clickPoint","contentRect","removeWindowHandlers","pointerMoveStart","pointerMove","pointerUp","pointerDown","dragging","redraw","_undoValues2","_redoValues","offN","offS","totalWidth","totalHeight","initialX","initialY","clientX","clientY","localX","localY","clickX","yPos","limitedX","limitedY","pointsTweening","timesEqual","equalsTime","xKey","yKey","closest","goToTime","PointerEvent","_rect","rectInitialize","containerRectArgs","lineClasses","handleClasses","_this63","handle","line","halfLine","directions","lineRect","svgHandlePoint","halfHandle","_String$split","_String$split2","_timeRange","PreviewClass","selectedClip","imageSize","_clips","clipsInitialize","clipsInTimeOfType","Video","sort","unknownClips","promises","_this64","_svgItems","intrinsicSizePromise","Timeline","lastTuple","previewItemsPromise","tupleItems","_trackPreviews","trackPreviewsInitialize","_this65","trackPreviews","tweenTime","filterChainArgs","trackClasses","selectedPreview","hoverItems","trackPreview","editingSvgItem","outlineClasses","hoversSvg","activeSvg","svgBoundsElement","passiveSvg","ClipClass","_PropertiedClass4","_super41","_this66","_len16","_key16","_containerObject","_contentObject","myTiming","mySizing","timingOk","sizingOk","hasIntrinsicTiming","hasIntrinsicSizing","Preview","_track$mash","frameSize","widthAndBuffer","cellCount","previews","pixel","svgItemsPromise","containerSvg","groupItem","contentArgs","fileArgs","contentFiles","visibleCommandFiles","containerFiles","audibleCommandFiles","audibleCommandFilters","hasColorContent","canColor","canColorTween","containerArgs","containerColorCommandFilters","_container","containerInitialize","containerObject","instance","assureTimingAndSizing","_track","resetTiming","_content","contentInitialize","contentObject","contentId","ids","known","intrinsicGraphFile","_quantize","_trim","muted","rectIntrinsic","_this67","selected","isFrames","_this$container","dense","_this$_container","toJSON","_this$_content","clipInstance","defaultContent","defaultContainer","TrackClass","_PropertiedClass5","_super42","_this68","_this68$clips","layer","mashMedia","clipIndex","origIndex","spliceClips","moving","sortClips","clipsArray","changed","ranges","suppliedClips","others","lastFrame","_step","_iterator","_createForOfIteratorHelper","s","n","clipFrames","Unlimited","err","e","f","_identifier","_mash","newClips","_this69","assureFrame","trackInstance","TrackFactory","NonePreview","_PreviewClass","_super43","DefaultFontId","isFont","assertFont","isFontMedia","assertFontMedia","EncodingClass","_RequestableClass3","_super44","encodingInstance","UpdatableDurationMediaTypes","isUpdatableDuration","assertUpdatableDuration","isUpdatableDurationType","isUpdatableDurationDefinition","assertUpdatableDurationDefinition","AudibleGainDelimiter","UpdatableDurationMixin","_Base7","_class13","_super45","_this70","_len17","_key17","floats","z","gainPairs","superTime","startTrim","endTrim","durationFrames","divide","speed","_this$gainPairs","_second","fpsFilter","fpsId","fpsCommandFilter","setptsFilter","setptsCommandFilter","expr","_trimFilter","ProbeType","DecodingTypes","isDecodingType","isDecoding","assertDecoding","isProbing","assertProbing","UpdatableDurationDefinitionMixin","_Base8","_class15","_super46","_this71","_len18","_key18","loadedAudio","_audio","_object$data","_duration","probing","decoding","_this72","UpdatableSizeMediaType","isUpdatableSize","assertUpdatableSize","isUpdatableSizeType","isUpdatableSizeDefinition","assertUpdatableSizeDefinition","UpdatableSizeMixin","_Base9","_class17","_super47","_this73","_len19","_key19","colorInput","fileInput","scaleCommandFilters","overlayCommandFilters","cropArgs","cropFilter","svgItemForTimelinePromise","svgItemForPlayerPromise","contentRects","tweeningContainer","_contentRects","contentRectEnd","maxContainerSize","scaleArgs","setsarFilter","itemContentRect","copyCommandFilter","definitionSize","_this$contentRects","_setsarFilter","UpdatableSizeDefinitionMixin","_Base10","_class19","_super48","_this74","_len20","_key20","sourceSize","clientMedia","AudioPreviewClass","_this75","clipSources","av","adjustSourceGain","_this76","startOptions","cancelScheduledValues","_pair","linearRampToValueAtTime","createSources","destroySources","avs","_this$playingClips","_this77","playing","addingClips","playingClips","okay","hasSource","startSeconds","audibleSource","startAt","_this78","clipsToKeep","deleteSource","_this79","adjustClipGain","contextSecondsWhenStarted","startedMashAt","bufferSource","stopPlaying","audioPreviewInstance","MashMediaClass","_MediaBase","_super49","_this80$encodings","_this80","encodings","mediaCollection","emitter","_media","_buffer","_preview","_this81","trackClips","emitIfFramesChange","_entry","newTrack","oldTrackNumber","removeClips","assureFrames","addClips","_this$emitter","_composition","composition","_this82","_bufferTimer","setInterval","_paused","clipsAudibleInTime","timeToBuffer","bufferClips","clearInterval","propertied","drawInterval","intersects","flat","clipsAudible","notMuted","filterIntersecting","Both","clipsInTime","Audio","clipsVisibleInTime","clipsVisible","_this$emitter2","drawingTime","Draw","_this83","requestAnimationFrame","compositeVisible","paused","clearDrawInterval","compositeVisibleRequest","_this$emitter3","timeChange","drawnTime","drawRequest","Time","method","origFrames","_this$emitter4","seekToTime","_this84","scaled","clipIntersects","_gain","setGain","streaming","definedTime","definedVisible","definedAudible","_this$emitter5","nextFrameTime","Ended","compositionTime","drawTime","_this85","_loadedMashContent","_loadMashContentPromise","_this85$media","define","trackObject","trackArgs","assureTrack","_this86","loadMashContentPromise","preloadOptions","graphFileOptions","preloadArgs","removedPromise","loadingPromises","_this$emitter6","_this87","bufferStop","stopContext","Pause","startContext","_this87$emitter","bufferStart","Play","_playing","_this$emitter7","startPlaying","currentClips","Playing","setDrawInterval","previewInitialize","previewArgs","_this$emitter8","_this88","seeking","_this$emitter9","seekTime","Seeked","stopLoadAndDraw","_this$emitter10","_this$emitter11","Seeking","_this89","_this90","handleDrawInterval","_this91","restartAfterStop","_frame","avType","fullRangeClips","uniqueFrames","uniqueFrame","mashDefault","mashArgs","isImage","isImageMedia","mediaTypeFromMime","mime","audioInfo","imageInfo","videoInfo","_object$audioTracks","videoWidth","clientWidth","videoHeight","clientHeight","mozHasAudio","webkitAudioDecodedByteCount","audioTracks","fontInfo","mediaInfo","filePromises","fileType","createObjectURL","hasDuration","hasSize","info","_info$duration","mediaObject","EditorClass","baseUrl","editType","readOnly","_editType","_fps","_volume","load","editorIndex","_this92","_editorIndex$clip","frameOrIndex","_editorIndex$track","firstClip","assureMash","trackPositive","frameForClipNearFrame","loadMashAndDraw","draw","_this93","filePromise","mediaObjects","addMedia","definitionTypes","Added","_this94","definitionObject","clipObject","selectedMash","masherAction","Save","canSave","Undo","Redo","Remove","Render","_this$mashMedia","objectOrArray","_this95","warn","_this96","destroy","clearActions","undefineAll","_this$mashMedia2","_this$mashMedia3","Fps","_this$mashMedia4","currentFrame","attemptFrame","goFrame","_this97","reload","handleDraw","_this$mashMedia5","_this98","drawTimeout","setTimeout","mashMediaObject","loadMashMediaObject","_this99","mashMediaObjectLoadPromise","mashAndMedia","editorArgs","_this100","mashMediaFromObject","boolean","moveClip","_editorIndex$clip2","_editorIndex$clip3","_editorIndex$track2","undoTrack","creating","undoDense","redoDense","currentIndex","posIndex","spliceIndex","debug","_muted","per","toFixed","_this101","Resize","_this$selection","_excluded6","temporaryIdLookup","_this102","_ref20","_ref21","temporaryId","permanentId","updateDefinitionId","save","_selection","enabled","colorElement","elements","_this$mashMedia6","_this$mashMedia7","idChanged","loadedVideo","loadedImage","Volume","editorSingleton","editorInstance","isSelectedProperty","selectedPropertyObject","nameOveride","selectedPropertiesScalarObject","byName","AudioClass","_AudioWithUpdatableDu","_super50","AudioMediaClass","_AudioMediaWithUpdata","_super51","_this103","_len21","_key21","_this104","clientAudio","audioDefinition","audioDefinitionFromId","audioInstance","audioFromId","isShapeContainer","ShapeContainerClass","_ShapeContainerWithCo","_super52","_this105","_len22","_key22","isTweeningColor","_containerRects5","_contentColors2","tweenSize","noContentFilters","requiresAlpha","argsWithoutColors","_excluded7","superArgs","_excluded8","contentInput","containerInput","formatFilterId","_this$definition","pathHeight","pathWidth","_contentColors3","forecolor","colorContent","isTweeningSize","_args$contentColors3","_containerRects6","maxWidth","maxHeight","dimensionsString","transformAttribute","tags","svgTag","framerate","Svg","ShapeContainerDefinitionClass","_ShapeContainerDefini","_super53","_this106","_len23","_key23","stringSeconds","pad","do_rest","padStart","padEnd","stringFamilySizeRect","ctx","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","actualBoundingBoxLeft","actualBoundingBoxRight","stringPluralize","FontHeight","FontClass","_FontContainerWithCon","_super54","_this107","_len24","_key24","intrinsic","_intrinsicRect","_options","_this108","_args$contentColors4","_containerRects7","merging","textFile","Txt","resolved","fontFile","textFilter","_colors4","_colors4$","intrinsicRatio","textSize","textSizeEnd","textArgs","intrinsicRectInitialize","clipString","_textFilter","textGraphFile","TextHeight","FontMediaClass","_FontContainerDefinit","_super55","_this109","_this110","loadFontPromise","textElement","_family","loadedFont","textObject","_this111","requestable","findTranscoding","fontButchermanJson","fontCroissantOneJson","fontGermaniaOneJson","fontKeniaJson","fontLuckiestGuyJson","fontMonotonJson","fontOleoScriptJson","fontShojumaruJson","fontRubikDirtJson","fontFind","fontDefinition","_object$id","withDefaults","fontDefault","fontDefinitionFromId","ImageClass","_ImageWithUpdatableSi","_super56","svgImageOptions","ImageMediaClass","_ImageMediaWithUpdata","_super57","_this112","_len25","_key25","svgImage","_this113","imageDefinition","imageDefinitionFromId","imageInstance","imageFromId","SequenceClass","_SequenceWithUpdatabl","_super58","_this114","_len26","_key26","_file$options","re","definitionArgs","framesArray","SequenceMediaClass","_SequenceMediaWithUpd","_super59","_this115","_len27","_key27","sequenceDefinition","sequenceDefinitionFromId","sequenceInstance","sequenceFromId","VideoClass","_VideoWithUpdatableDu","_super60","_this116","_len28","_key28","_foreignElement","visibleGraphFile","audioGraphFile","preloadAudioPromise","visibleTranscoding","audibleTranscoding","sequenceImagesPromise","previewTranscoding","_this117","cloneNode","foreignElement","_this118","definitionTimes","_times$map","times","_times$map2","definitionRange","frameTimes","videoForPlayerPromise","videoItemForPlayerPromise","sequenceItemPromise","clientCanMaskVideo","_this119","previewVideoPromise","_clientCanMaskVideo","userAgent","navigator","safari","seekingPromises","seek","videoImagePromise","_canvasContext","canvasContext","_canvasContext2","drawImage","Image","decode","seekNeeded","imageFromVideoPromise","onseeked","VideoMediaClass","_VideoMediaWithUpdata","_super61","_this120","imageFromTranscodingPromise","loadedImages","loadedImageKey","frameFps","imageFromVideoTranscodingPromise","imageFromSequencePromise","_this121","loaded","clientVideo","videoDefinition","videoDefinitionFromId","videoInstance","videoFromId","isDecodeOutput","assertDecodeOutput","AlphaProbe","AudibleProbe","DurationProbe","SizeProbe","ProbeKinds","isProbeOptions","assertProbeOptions","isProbeOutput","assertProbeOutput","LanguageEnglish","Resolvers","resolverLoad","mimeType","resolverPromise","resolver","resolverRequestPromise","resolverPathPromise","resolverExtension","isTranscodeOutput","factory"],"sourceRoot":""}