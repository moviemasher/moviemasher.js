// this file is automatically generated from template at
// workspaces/translate/src/index.ts

import /* type */ { 
  Locale, TranslatePlugin, NestedStringRecord, StringRecord  
} from "@moviemasher/moviemasher.js"

import { 
  ReplaceRegex, isString, TranslateType, Runtime, 
} from "@moviemasher/moviemasher.js"

import PluginTranslateFrenchJson from './locale/fr.json'

const LocaleFrench: Locale = 'fr'

class PluginTranslateFrench implements TranslatePlugin {
  translate(id: string, context?: StringRecord): string {
    const word = this.wordFromId(id)
    if (!context) return word

    let translated = word
    
    const matches = translated.match(ReplaceRegex)
    if (!matches) return translated

    matches.forEach((match, index) => {
      if (!index) return
      const search = `{{${match}}}`
      const replace = this.translate(context[match])
      
      translated = translated.replace(search, replace)
    })
    return translated
  }

  type = TranslateType
  
  locale = LocaleFrench

  private words: NestedStringRecord = PluginTranslateFrenchJson
  private wordFromId = (id: string): string => {
    let object = this.words
    const components = id.split('.') 
    for (const component of components) {
      const child = object[component]
      if (isString(child)) return child

      object = child
    }
    return ''
  }
}

Runtime.plugins[TranslateType][LocaleFrench] = new PluginTranslateFrench()