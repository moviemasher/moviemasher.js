"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("express"),t=require("fluent-ffmpeg"),i=require("@moviemasher/moviemasher.js"),s=require("path"),r=require("fs"),n=require("child_process"),o=require("cors"),a=require("express-basic-auth"),c=require("sqlite"),d=require("sqlite3"),u=require("@bitjourney/uuid-v4"),h=require("multer"),l=require("events"),p=require("http"),m=require("https"),f=require("md5"),g=require("stream"),y=require("net");function S(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var v=S(e),b=S(t),P=S(s),x=S(r),w=S(o),E=S(a),D=S(d),C=S(h),T=S(l),O=S(p),$=S(m),I=S(f),F=S(y);const R=e=>Object.entries(e).map((([e,t])=>{const i=`-${e}`,s=String(t);return s.length?`${i} ${s}`:i})),j=()=>{const e={logger:{warn:console.warn,error:console.error,debug:console.debug,info:console.info}};return b.default(e)},k=e=>{const t=j(),{inputs:s,output:r,commandFilters:n,avType:o}=e;if(o===i.AVType.Video?t.noAudio():o===i.AVType.Audio&&t.noVideo(),s?.forEach((({source:e,options:i})=>{t.addInput(e),i&&t.addInputOptions(R(i))})),n?.length){t.complexFilter((e=>e.map((e=>{const{options:t,ffmpegFilter:s,...r}=e;return{...r,options:Object.entries(t).map((([e,t])=>i.isNumber(t)?`${e}=${t}`:t.length?`${e}=${t.replaceAll(",","\\,").replaceAll(":","\\\\:")}`:e.replaceAll(",","\\,"))).join(":"),filter:s}})))(n));n[n.length-1].outputs.forEach((e=>{t.map(`[${e}]`)}))}o!==i.AVType.Video&&(i.isPopulatedString(r.audioCodec)&&t.audioCodec(r.audioCodec),i.isValue(r.audioBitrate)&&t.audioBitrate(r.audioBitrate),i.isAboveZero(r.audioChannels)&&t.audioChannels(r.audioChannels),i.isAboveZero(r.audioRate)&&t.audioFrequency(r.audioRate)),o!==i.AVType.Audio&&(i.isPopulatedString(r.videoCodec)&&t.videoCodec(r.videoCodec),i.isAboveZero(r.videoRate)&&t.fpsOutput(r.videoRate));const a=r.options||{},c=i.isPopulatedObject(a)?a:{};return c.hide_banner="",c.shortest="",t.addOptions(R(c)),t},A=[/Input frame sizes do not match \([0-9]*x[0-9]* vs [0-9]*x[0-9]*\)/,/Option '[0-9a-z_-]*' not found/,"Error:","Cannot find a matching stream","Unable to parse option value","Invalid too big or non positive size"],L=e=>{if(!e.includes(";"))return e;return e.split(";").map((e=>{const[t,s]=e;return"["!==t||i.isNumeric(s)?`\n${e}`:e})).join(";\n")},M=e=>e.includes(";")?`'${e}'`:e,q=(...e)=>e.flatMap((e=>String(e).split("\n").map((e=>e.trim())).filter((e=>A.some((t=>e.match(t))))))),_=(e,t,...s)=>{let r="";const n=!!s.length,o=[],a=`${P.default.resolve("./")}/`;e.forEach((e=>{if(!i.isPopulatedString(e))return;const t=e.trim();"-"===t.slice(0,1)?(r&&o.push([r,""]),r=t.slice(1)):(r&&o.push([r,t.replaceAll(a,"")]),r="")}));const c=[];n&&t&&(c.push(`${t} failed`),c.push(...q(...s))),c.push("ffmpeg"),c.push(...o.map((([e,t])=>t?`-${e} ${L(t)}\n`:`-${e}\n`))),t&&c.push(t),n||o.unshift(["y",""]);const d=o.map((([e,t])=>t?`-${e} ${M(t)}`:`-${e}`));d.unshift("ffmpeg"),t&&d.push(t);const u=[c.join("\n")];return u.push(...s),u.push(d.join(" ")),u.join("\n\n")},N=(e,t)=>{const s=(e=>{const t=e.match(/%0([0-9]*)d/);if(!t)return e;const i=P.default.dirname(e),s=P.default.extname(e),[r,n]=t,o="0".repeat(Number(n)-1);return P.default.join(i,`${o}1${s}`)})(e),r=P.default.relative("./",e),n=P.default.dirname(s);if(!x.default.existsSync(s))return Promise.reject(`${r} does not exist`);if(!x.default.statSync(s).size)return Promise.reject(`${r} is empty`);const o=t||P.default.join(n,`${P.default.basename(s)}.json`);if(x.default.existsSync(o))return x.default.promises.readFile(o).then((e=>JSON.parse(e.toString())));const a=j();return a.addInput(s),new Promise(((e,t)=>{x.default.promises.mkdir(P.default.dirname(o),{recursive:!0}).then((()=>{a.ffprobe(((t,r)=>{const n={audible:!1,...i.SizeZero,info:r,extension:P.default.extname(s).slice(1)};if(t)n.error=_(a._getArguments(),o,t);else{const{streams:e,format:t}=r,{duration:s=0}=t,o=[],a=[],c=[];for(const t of e){const{rotation:e,width:s,height:r,duration:d,codec_type:u}=t;i.isNumeric(e)&&a.push(Math.abs(Number(e))),"audio"===u&&(n.audible=!0),i.isPositive(d)&&o.push(Number(d)),s&&r&&c.push({width:s,height:r})}if(s||o.length)if(o.length){const e=Math.max(...o);n.duration=s?Math.max(e,s):e}else n.duration=s;if(c.length){const e=a.some((e=>90===e||270===e)),t=e?"width":"height";n[e?"height":"width"]=Math.max(...c.map((e=>e.width))),n[t]=Math.max(...c.map((e=>e.height)))}}x.default.promises.writeFile(o,JSON.stringify(n)).then((()=>{e(n)}))}))}))}))},z=e=>e?e.endsWith(i.ExtText)?H(e):e.startsWith("/")?n.execSync(e).toString().trim():e:"",H=e=>e?x.default.readFileSync(e).toString():"",U=e=>{if(!e)return{};if(e.endsWith(i.ExtJson))return U(H(e));switch(e[0]){case".":case"/":return U(z(e));case"{":return JSON.parse(e)}return{}},W={type:"basic"};class V{args;constructor(e){this.args=e}id="";init(e){return{}}startServer(e,t){const{authentication:i}=this.args;if("basic"===i?.type){const{password:t,users:s}=i,r={users:s,authorizer:(e,i)=>!(!e||!i)&&(!t||E.default.safeCompare(i,t)),challenge:!0,realm:"moviemasher"};e.use(`/${this.id}/*`,E.default(r),((e,t,i)=>{i()}))}}stopServer(){}userFromRequest(e){const t=e,{user:i}=t.auth;return i}}class B extends V{args;constructor(e){super(e),this.args=e}id="api";init(){return{}}activeServers={};callbacks=(e,t)=>{const i=e.body,{id:s}=i,r={},n=Object.keys(this.activeServers),[o,a]=s.split("/");n.includes(a)&&(r[s]={endpoint:{prefix:s}});const c={apiCallbacks:r};t.send(c)};servers=(e,t)=>{const i={};try{const t=this.userFromRequest(e);Object.entries(this.activeServers).forEach((([e,s])=>{i[e]=s.init(t)}))}catch(e){i.error=String(e)}t.send(i)};startServer(e,t){super.startServer(e,t),this.activeServers=t,e.post(i.Endpoints.api.callbacks,this.callbacks),e.post(i.Endpoints.api.servers,this.servers)}}const J=()=>u.generateUUIDv4(),Z=["id","label","icon"],G=["*"],Y=e=>{if(!e)return{};const{json:t,userId:i,...s}=e;return t?{...JSON.parse(t),...s}:s},K=e=>{if(!e)return{};const{json:t,...i}=e;if(!t)return i;const s=JSON.parse(t);return K({...s,...i})},Q=e=>e.map(Y),X=(e,t)=>{const{userId:i,type:s,createdAt:r,icon:n,label:o,id:a,...c}=t,d={json:JSON.stringify(c),userId:e};return a&&(d.id=String(a)),r&&(d.createdAt=String(r)),n&&(d.icon=String(n)),o&&(d.label=String(o)),s&&(d.type=String(s)),d},ee=(e,t)=>{t?.forEach((t=>{if(i.isLayerFolderObject(t))ee(e,t.layers);else if(i.isLayerMashObject(t)){const{mash:s}=t,{id:r}=s,n=e.find((e=>e.id===r));if(!n)throw new Error(i.Errors.internal+"no mash with id "+r+" in "+e.map((e=>e.id)).join(", "));t.mash=n}}))};class te extends V{args;constructor(e){super(e),this.args=e}castInsertPromise(e,t,i){const s={},{id:r}=t,n=r||J(),o=n.startsWith(this.args.temporaryIdPrefix)?J():n;o!==n&&(s[n]=o),t.id=o;return this.castUpdateRelationsPromise(e,t,i).then((t=>{const{cast:i,temporaryIdLookup:r}=t;return this.createPromise("`cast`",X(e,i)).then((()=>({...r,...s})))})).then((e=>({...e,...e})))}castUpdatePromise(e,t,i){const{id:s}=t;if(!s)return Promise.reject(401);return this.castUpdateRelationsPromise(e,t,i).then((e=>{const{cast:t,temporaryIdLookup:i}=e;return this.updatePromise("`cast`",t).then((()=>i))}))}createPromise(e,t){t.createdAt||=(new Date).toISOString();const s=t.id||J();i.assertPopulatedString(s);const r=s.startsWith(this.args.temporaryIdPrefix)?J():s;t.id=r;const n=[],o=[];Object.entries(t).forEach((([e,t])=>{n.push(e),o.push(t)}));const a=((e,t)=>`\n    INSERT INTO ${e}\n    (${t.join(", ")})\n    VALUES(${Array(t.length).fill("?").join(", ")})\n  `)(e,n);return this.db.run(a,...o).then((()=>r))}_db;get db(){if(!this._db)throw i.Errors.internal+"db";return this._db}defaultCast=async(e,t)=>{const i=this.renderingServer?.args.previewSize,s={cast:{},definitions:[],previewSize:i};try{const t=this.userFromRequest(e),i=await this.getLatestPromise(t,"`cast`");if(i.id){const e=await this.selectCastRelationsPromise(i);s.definitions=e.definitions,s.cast=e.cast}}catch(e){s.error=String(e)}t.send(s)};defaultMash=async(e,t)=>{const i=this.renderingServer?.args.previewSize,s={mash:{},definitions:[],previewSize:i};try{const t=this.userFromRequest(e),i="\n        SELECT mash.* FROM mash \n        LEFT JOIN cast_mash \n        ON cast_mash.mashId = mash.id \n        WHERE cast_mash.mashId IS NULL\n        AND mash.userId = ? \n        ORDER BY createdAt DESC\n        LIMIT 1\n      ",r=await this.db.get(i,t).then((e=>{const{userId:i,...s}=K(e);return i===t?s:{}}));r.id&&(s.mash=r,s.definitions=await this.selectMashRelationsPromise(String(r.id)))}catch(e){s.error=String(e)}t.send(s)};deleteCast=async(e,t)=>{const{id:i}=e.body,s={};try{const t=this.userFromRequest(e);await this.rowExists("`cast`",i,t)?await this.deletePromise("`cast`",i):s.error=`Could not find Cast with id: ${i}`}catch(e){s.error=String(e)}t.send(s)};deleteDefinition=async(e,t)=>{const{id:s}=e.body,r={};try{const t=this.userFromRequest(e);if(await this.rowExists("`mash`",s,t)){const e="SELECT * FROM mash_definition WHERE definitionId = ?",t=await this.db.all(e,s);t.length?(r.mashIds=t.map((e=>e.mashid)),r.error=`Referenced by ${i.stringPluralize(t.length,"mash","es")}`):await this.deletePromise("`definition`",s)}else r.error=`Could not find Definition with id: ${s}`}catch(e){r.error=String(e)}t.send(r)};deleteMash=async(e,t)=>{const{id:s}=e.body,r={};try{const t=this.userFromRequest(e);if(await this.rowExists("`mash`",s,t)){const e="SELECT * FROM cast_mash WHERE mashId = ?",t=await this.db.all(e,s);t.length?(r.castIds=t.map((e=>e.castId)),r.error=`Referenced by ${i.stringPluralize(t.length,"cast")}`):await this.deletePromise("`mash`",s)}else r.error=`Could not find Mash with id: ${s}`}catch(e){r.error=String(e)}t.send(r)};deletePromise(e,t){const s=`DELETE FROM ${e} WHERE id = ?`;return this.db.run(s,t).then(i.EmptyMethod)}fileServer;getCast=async(e,t)=>{const{id:i}=e.body,s={cast:{},definitions:[]};try{const t=this.userFromRequest(e),r=await this.jsonPromise("`cast`",t,i);if(r){const e=await this.selectCastRelationsPromise(r);s.definitions=e.definitions,s.cast=e.cast}else s.error=`Could not find cast ${i}`}catch(e){s.error=String(e)}t.send(s)};getDefinition=async(e,t)=>{const{id:i}=e.body,s={definition:{}};try{const t=this.userFromRequest(e),r=await this.jsonPromise("`definition`",t,i);r?s.definition=r:s.error=`Could not find definition ${i}`}catch(e){s.error=String(e)}t.send(s)};getLatestPromise(e,t){const i=`SELECT * FROM ${t} WHERE userId = ? ORDER BY createdAt DESC`;return this.db.get(i,e).then((t=>{const{userId:i,...s}=K(t);return i===e?s:{}}))}getMash=async(e,t)=>{const{id:i}=e.body,s={mash:{},definitions:[]};try{const t=this.userFromRequest(e),r=await this.jsonPromise("`mash`",t,i);r.id!==i?s.error=`Could not find mash ${i}`:(s.mash=r,s.definitions=await this.selectMashRelationsPromise(i))}catch(e){s.error=String(e)}t.send(s)};id="data";init(){return{temporaryIdPrefix:this.args.temporaryIdPrefix}}insertDefinitionPromise(e,t){return this.createPromise("`definition`",X(e,t))}jsonPromise(e,t,i){return!i||i.startsWith(this.args.temporaryIdPrefix)?Promise.resolve():this.db.get(((e,t=G)=>`SELECT ${t.join(", ")} FROM ${e} WHERE id = ?`)(e),i).then(K).then((e=>{if(!e)return;const{userId:i,...s}=e;return i===t?s:void 0}))}mashInsertPromise(e,t,i){const s={},{id:r}=t,n=r||J();t.id=n;return this.createPromise("`mash`",X(e,t)).then((e=>(e!==n&&(s[n]=e),this.mashUpdateRelationsPromise(e,i)))).then((()=>s))}mashUpdatePromise(e,t,i){const{createdAt:s,icon:r,id:n,label:o,...a}=t;if(!n)return Promise.reject(401);const c=JSON.stringify(a),d={userId:e,createdAt:s,icon:r,id:n,label:o,json:c};return this.updatePromise("`mash`",d).then((()=>this.mashUpdateRelationsPromise(n,i)))}putCast=async(e,t)=>{const{cast:i,definitionIds:s}=e.body,r={};try{const t=this.userFromRequest(e);r.temporaryIdLookup=await this.writeCastPromise(t,i,s)}catch(e){r.error=String(e)}t.send(r)};putDefinition=async(e,t)=>{const{definition:i}=e.body,s={id:""};try{const t=this.userFromRequest(e);s.id=await this.writeDefinitionPromise(t,i)}catch(e){s.error=String(e)}t.send(s)};putMash=async(e,t)=>{const{mash:i,definitionIds:s}=e.body,r={};try{const t=this.userFromRequest(e);r.temporaryIdLookup=await this.writeMashPromise(t,i,s)}catch(e){r.error=String(e)}t.send(r)};renderingServer;retrieveCast=async(e,t)=>{const{partial:i}=e.body,s={described:[]};try{const t=this.userFromRequest(e),r=i?Z:G;s.described=await this.selectCastsPromise(t,r)}catch(e){s.error=String(e)}t.send(s)};retrieveDefinition=async(e,t)=>{const i=e.body,{partial:s,types:r}=i,n={definitions:[]};try{const t=this.userFromRequest(e),i=s?Z:G;n.definitions=await this.selectDefinitionsPromise(t,r,i)}catch(e){n.error=String(e)}t.send(n)};retrieveMash=async(e,t)=>{const{partial:i}=e.body,s={described:[]};try{const t=this.userFromRequest(e),r=i?Z:G;s.described=await this.selectMashesPromise(t,r)}catch(e){s.error=String(e)}t.send(s)};rowExists(e,t,i){return new Promise(((s,r)=>{this.userIdPromise(e,t).then((e=>e&&e!==i?r(403):s(!!e)))}))}selectCastsPromise(e,t=G){const i=`SELECT ${t.join(", ")} FROM \`cast\` WHERE userId = ?`;return this.db.all(i,e).then(Q)}selectDefinitionsPromise(e,t,i=G){const s=`\n      SELECT ${i.join(", ")}\n      FROM \`definition\`\n      WHERE (${Array(t.length).fill("type = ?").join(" OR ")})\n      AND (userId = '' OR userId = ?)\n    `;return this.db.all(s,...t,e).then(Q)}selectCastRelationsPromise(e){const{id:t}=e;i.assertPopulatedString(t);return this.db.all("\n      SELECT mash.*\n      FROM cast_mash\n      JOIN mash\n      ON mash.id = mashId\n      WHERE castId = ?\n    ",t).then(Q).then((t=>{ee(t,e.layers);const s={cast:e,definitions:[]};let r=Promise.resolve(s);return t.forEach((e=>{const{id:t}=e;i.assertPopulatedString(t),r=r.then((e=>this.selectMashRelationsPromise(t).then((t=>(e.definitions.push(...t),e)))))})),r}))}selectMashRelationsPromise(e){return this.db.all("\n      SELECT definition.*\n      FROM mash_definition\n      JOIN definition\n      ON definition.id = definitionId\n      WHERE mashId = ?\n    ",e).then(Q)}selectMashesPromise(e,t=G){const i=`SELECT \n      ${t.map((e=>`\`mash\`.${e}`)).join(", ")} \n      FROM \`mash\` \n      LEFT JOIN cast_mash\n      ON cast_mash.mashId = \`mash\`.id\n      WHERE cast_mash.mashId IS NULL\n      AND userId = ?\n    `;return this.db.all(i,e).then(Q)}startDatabase(){const{dbPath:e,dbMigrationsPrefix:t}=this.args;console.debug(this.constructor.name,"startDatabase",e),x.default.mkdirSync(P.default.dirname(e),{recursive:!0}),c.open({filename:e,driver:D.default.Database}).then((e=>{this._db=e,t&&(console.debug(this.constructor.name,"startDatabase migrating...",t),this.db.migrate({migrationsPath:t}).catch((e=>console.error(this.constructor.name,"startDatabase migration failed",e))))}))}startServer(e,t){super.startServer(e,t),this.fileServer=t.file,this.renderingServer=t.rendering,e.post(i.Endpoints.data.cast.default,this.defaultCast),e.post(i.Endpoints.data.cast.delete,this.deleteCast),e.post(i.Endpoints.data.cast.get,this.getCast),e.post(i.Endpoints.data.cast.put,this.putCast),e.post(i.Endpoints.data.cast.retrieve,this.retrieveCast),e.post(i.Endpoints.data.definition.delete,this.deleteDefinition),e.post(i.Endpoints.data.definition.get,this.getDefinition),e.post(i.Endpoints.data.definition.retrieve,this.retrieveDefinition),e.post(i.Endpoints.data.definition.put,this.putDefinition),e.post(i.Endpoints.data.mash.default,this.defaultMash),e.post(i.Endpoints.data.mash.delete,this.deleteMash),e.post(i.Endpoints.data.mash.get,this.getMash),e.post(i.Endpoints.data.mash.put,this.putMash),e.post(i.Endpoints.data.mash.retrieve,this.retrieveMash),this.startDatabase()}stopServer(){this._db?.close()}updatePromise(e,t){const{id:s,...r}=t,n=[],o=[];Object.entries(r).forEach((([e,t])=>{n.push(e),o.push(t)}));const a=((e,t)=>`\n    UPDATE ${e}\n    SET ${t.map((e=>`${e} = ?`)).join(", ")}\n    WHERE id = ?\n  `)(e,n);return this.db.run(a,...o,s).then(i.EmptyMethod)}castUpdateRelationsPromise(e,t,s){const r={},{createdAt:n,icon:o,id:a,label:c,...d}=t;i.assertPopulatedString(a);const{layers:u=[]}=t,h=e=>{const{temporaryIdPrefix:t}=this.args;return e.flatMap((e=>{if(i.isLayerMashObject(e)){const{mash:s}=e,n=s.id;i.assertPopulatedString(n);const o=n.startsWith(t)?J():n;return n!==o&&(r[n]=o,s.id=o),e.mash={id:o},[s]}if(i.isLayerFolderObject(e)){const{layers:t}=e;if(t)return h(t)}return[]}))},l=h(u);let p=Promise.resolve(r);const m=l.map((e=>e.id));return l.forEach((t=>{const i=t.id,r=s?s[i]:[];p=p.then((i=>this.writeMashPromise(e,t,r).then((e=>({...i,...e})))))})),p.then((e=>this.updateRelationsPromise("cast","mash",a,m).then((t=>{const i=JSON.stringify(d);return{cast:{createdAt:n,icon:o,id:a,label:c,json:i},temporaryIdLookup:{...t,...e}}}))))}updateDefinitionPromise(e){const{type:t,createdAt:s,icon:r,id:n,label:o,...a}=e;if(!n)return Promise.reject(401);const c={createdAt:s,icon:r,id:n,label:o,json:JSON.stringify(a)};return this.updatePromise("`definition`",c).then(i.EmptyMethod)}mashUpdateRelationsPromise(e,t){return this.updateRelationsPromise("mash","definition",e,t)}updateRelationsPromise(e,t,s,r){const n={};if(!r)return Promise.resolve(n);const o=r.map((e=>e.startsWith(this.args.temporaryIdPrefix)?n[e]=J():e)),a=`${e}_${t}`,c=`${e}Id`,d=`${t}Id`,u=`SELECT * FROM ${a} WHERE ${c} = ?`;return this.db.all(u,s).then((e=>{const t=[],r=[];e.forEach((e=>{const i=String(e[d]);o.includes(i)?r.push(i):t.push(e.id)}));const n=o.filter((e=>!r.includes(e))),u=[...t.map((e=>this.deletePromise(a,e))),...n.map((e=>this.createPromise(a,{[d]:e,[c]:s}).then(i.EmptyMethod)))];switch(u.length){case 0:return Promise.resolve();case 1:return u[0];default:return Promise.all(u).then(i.EmptyMethod)}})).then((()=>n))}userIdPromise(e,t){return this.db.get(`SELECT userId FROM ${e} WHERE id = ?`,t).then((e=>e?.userId||""))}writeCastPromise(e,t,i){const{id:s}=t;return this.jsonPromise("`cast`",e,s).then((s=>s?(Object.assign(s,t),this.castUpdatePromise(e,s,i)):this.castInsertPromise(e,t,i)))}writeDefinitionPromise(e,t){const{id:i}=t;return i?this.rowExists("`definition`",i,e).then((s=>s?this.updateDefinitionPromise(t).then((()=>i)):this.insertDefinitionPromise(e,t))):this.insertDefinitionPromise(e,t)}writeMashPromise(e,t,i){const{id:s}=t;return this.jsonPromise("`mash`",e,s).then((s=>s?(Object.assign(s,t),this.mashUpdatePromise(e,s,i)):this.mashInsertPromise(e,t,i)))}}class ie extends V{args;constructor(e){super(e),this.args=e}constructCallback(e,t,s){const r={id:s};return{endpoint:{prefix:i.Endpoints.file.store},request:{body:r,headers:{"Content-Type":"multipart/form-data"}}}}get extensions(){return Object.values(this.args.extensions).flat()}extensionLoadType(e){return i.UploadTypes.find((t=>this.args.extensions[t].includes(e)))}id="file";init(e){const t=`/${P.default.join(this.args.uploadsRelative,e)}/`,{extensions:i,uploadLimits:s}=this.args;return{prefix:t,extensions:i,uploadLimits:s}}property="file";startServer(e,t){super.startServer(e,t);const s=1048576*Math.max(...Object.values(this.args.uploadLimits)),{uploadsPrefix:r}=this.args,{extensions:n}=this,o={storage:C.default.diskStorage({destination:function(e,t,s){const{id:n}=e.body,o=e,{user:a}=o.auth;if(a){const e=`${r}/${a}/${n}`;x.default.mkdirSync(e,{recursive:!0}),s(null,e)}else s(new Error(i.Errors.invalid.user),"")},filename:function(e,t,i){const{originalname:s}=t,r=P.default.extname(s).slice(1).toLowerCase();n.includes(r)?i(null,`original.${r}`):i(new Error(`Invalid extension ${r}`),"")}}),limits:{fileSize:s}},a=C.default(o);e.post(i.Endpoints.file.store,a.single(this.property),this.store)}store=async(e,t)=>{const s=e.body,r={};try{if(this.userFromRequest(e)){const{id:t}=s;if(t){const{file:t}=e;t||(r.error="No file supplied")}else r.error=i.Errors.id}else r.error=i.Errors.invalid.user}catch(e){r.error=String(e)}t.send(r)};userUploadPrefix(e,t){return i.assertPopulatedString(e,"upload id"),e}withinLimits(e,t){if(!e)throw i.Errors.invalid.size;if(!t)throw i.Errors.invalid.type;const s=this.args.uploadLimits[t];if(!s)throw i.Errors.invalid.type;return s>e/1048576}}class se extends T.default{constructor(e,t){super(),this.id=e;const{commandFilters:s,inputs:r,output:n,avType:o}=t;if(this.avType=o,s&&(this.commandFilters=s),r&&(this.commandInputs=r),!this.commandInputs.length&&!this.commandFilters.length)throw console.trace(this.constructor.name,"with no inputs or commandFilters"),i.Errors.invalid.argument+"inputs";this.output=n}_commandProcess;get command(){if(this._commandProcess)return this._commandProcess;const{commandInputs:e,commandFilters:t,output:i,avType:s}=this,r={commandFilters:t,inputs:e,output:i,avType:s};return this._commandProcess=k(r)}avType;commandFilters=[];id;commandInputs=[];kill(){console.debug(this.constructor.name,"kill",this.id),this._commandProcess?.kill("SIGKILL")}makeDirectory(e){x.default.mkdirSync(P.default.dirname(e),{recursive:!0})}output={};run(e){this.command.on("error",((...t)=>{const s=i.isPopulatedString(e)?e:"",r=this.runError(s,...t);console.error(this.constructor.name,"run on error",r),this.emit("error",r)})),this.command.on("start",((...e)=>{this.emit("start",...e)})),this.command.on("end",((...e)=>{this.emit("end",...e)})),i.isPopulatedString(e)&&this.makeDirectory(e);try{this.command.output(e),this.command.run()}catch(e){console.error(this.constructor.name,"run received error",e)}}runError(e,...t){return _(this.command._getArguments(),e,...t)}runPromise(e){i.assertPopulatedString(e);const t={};return new Promise(((i,s)=>{const{command:r}=this;r.on("error",((...t)=>{s({error:this.runError(e,...t)})})),r.on("end",(()=>{i(t)}));try{this.makeDirectory(e),r.save(e)}catch(t){s({error:this.runError(e,t)})}}))}}const re={},ne=e=>re[e],oe=e=>{const t=ne(e);t&&(delete re[e],t.kill())},ae=(e,t)=>{const i=new se(e,t);return re[e]=i,i};class ce extends i.LoaderClass{cacheDirectory;filePrefix;defaultDirectory;validDirectories;constructor(e,t,s,r){if(super(),this.cacheDirectory=e,this.filePrefix=t,this.defaultDirectory=s,this.validDirectories=r,!e)throw i.Errors.invalid.url+"cacheDirectory";if(!t)throw i.Errors.invalid.url+"filePrefix";if(!s)throw i.Errors.invalid.url+"defaultDirectory"}browsing=!1;cachePromise(e,t,s){if(x.default.existsSync(e))return this.updateSources(e,s,t);const{filePrefix:r}=this;if(e.startsWith(r))throw i.Errors.uncached+" cachePromise "+e;return this.writePromise(t,e).then((()=>this.updateSources(e,s,t)))}graphType=i.GraphType.Mash;graphFileTypeBasename(e,t){if(e!==i.GraphFileType.SvgSequence)return`cached.${e}`;const s=t.split("\n").length;return`%0${String(s).length}.svg`}infoPath(e){return P.default.join(this.cacheDirectory,`${I.default(e)}.info.txt`)}key(e){const{type:t,file:s,content:r,resolved:n}=e;if(n)return n;i.assertPopulatedString(s,"file");const{cacheDirectory:o,filePrefix:a,defaultDirectory:c,validDirectories:d}=this;if(!i.isLoadType(t)){t||console.trace(this.constructor.name,"key NOT LOADTYPE",t,s,r),i.assertPopulatedString(r,"content");const e=this.graphFileTypeBasename(t,r);return P.default.resolve(o,s,e)}if(s.includes("://")){const e=P.default.extname(s)||this.typeExtension(t);return P.default.resolve(o,I.default(s),`cached${e}`)}const u=P.default.resolve(a,c,s),h=[c,...d];if(![P.default.resolve(o),...h.map((e=>P.default.resolve(a,e)))].some((e=>u.startsWith(e))))throw i.Errors.invalid.url+u;return e.resolved=u,u}loadGraphFilePromise(e){let t=this.cacheGet(e,!0);i.assertObject(t);const{definition:s}=e;if(i.isDefinition(s)){const{definitions:e}=t;e.includes(s)||e.push(s)}const{promise:r}=t;return i.assertObject(r),r}remoteLocalFile(e,t,s){if(!i.isPopulatedString(s)||s.startsWith(t))return e;if(t!==i.LoadType.Font||!s.startsWith("text/css"))return e;const r=P.default.dirname(e),n=P.default.extname(e),o=P.default.basename(e,n);return P.default.join(r,`${o}.css`)}remotePromise(e,t,i){const s=new Promise(((s,r)=>{const{request:n}=i.startsWith("https")?$.default:O.default,o=n(i,(i=>{const{"content-type":n}=i.headers,o=this.remoteLocalFile(t,e,n),a=x.default.createWriteStream(o);i.pipe(a),a.on("finish",(()=>{a.close(),o===t?s():x.default.promises.readFile(o).then((i=>{const r=i.toString(),n=this.lastCssUrl(r);this.remotePromise(e,t,n).then(s)}))})),a.on("error",(e=>{console.error(this.constructor.name,"remotePromise.callback error",e),r(e)}))}));o.on("error",(e=>{console.error(e),r(e)})),o.end()}));return s}typeExtension(e){switch(e){case i.LoadType.Font:return".ttf";case i.LoadType.Image:return".png";case i.LoadType.Audio:return".mp3";case i.LoadType.Video:return".mp4"}}updateableDefinitions(e){return[...e.definitions].filter((e=>i.isPreloadableDefinition(e))).filter((e=>!(!i.isUpdatableDurationDefinition(e)||i.isAboveZero(e.duration))||i.isUpdatableSizeDefinition(e)&&!i.sizeAboveZero(e.sourceSize)))}updateSources(e,t,s){const{definitions:r}=t;t.loaded=!0,r.forEach((t=>{i.isPreloadableDefinition(t)&&(t.source.startsWith("http")||(t.source=e))}));const{type:n}=s;if(!i.isLoadType(n))return Promise.resolve();if(!this.updateableDefinitions(t).length)return Promise.resolve();const o=this.infoPath(e);return N(e,o).then((e=>{this.updateDefinitions(s,e)}))}writePromise(e,t){const{file:s,type:r,content:n}=e,o=P.default.dirname(t);let a=x.default.promises.mkdir(o,{recursive:!0}).then(i.EmptyMethod);if(i.isLoadType(r)){if(i.urlIsHttp(s))return a.then((()=>this.remotePromise(r,t,s)));throw i.Errors.uncached+s}return i.assertPopulatedString(n),r===i.GraphFileType.SvgSequence?a.then((()=>{const e=n.split("\n"),{length:t}=e,s=String(t).length;return Promise.all(e.map(((e,t)=>{const i=`${String(t).padStart(s,"0")}.svg`,r=P.default.join(o,i);return x.default.promises.writeFile(r,e)}))).then(i.EmptyMethod)})):a.then((()=>x.default.promises.writeFile(t,n)))}}const de=(e,t={})=>{const{type:s,id:r}=e,n={...e,type:s===i.DefinitionType.VideoSequence?i.DefinitionType.Video:s},o=[n];return{mash:{...{id:r},tracks:[{dense:!0,clips:[le(n,t)]}]},definitions:o}},ue=e=>{const t={};return e.map((e=>{const{outputType:s}=e,r=i.outputDefaultPopulate(e);return t[s]?(r.basename||=`${s}-${t[s]}`,t[s]++):t[s]=1,r}))},he=(e,t,s)=>{const{basename:r,format:n,extension:o,outputType:a}=t,c=s||o||n;i.assertPopulatedString(c);const d=[r||a];return e&&!r&&d.push(String(e)),d.push(c),d.join(".")},le=(e,t={})=>{const{id:s,type:r}=e,{id:n,containerId:o,...a}=t,c=s||r,d=o?String(o):void 0,u="audio"===r?"":d,h={definitionId:i.clipDefault.id,contentId:c,content:{...a},containerId:u};return r===i.DefinitionType.Image&&(h.timing=i.Timing.Custom,h.frames=1),h},pe=(e,t,i,s)=>{const r=me(e);return{id:i||J(),type:r,source:t,label:s}},me=e=>{switch(e){case i.LoadType.Audio:return i.DefinitionType.Audio;case i.LoadType.Video:return i.DefinitionType.VideoSequence;case i.LoadType.Image:return i.DefinitionType.Image;case i.LoadType.Font:return i.DefinitionType.Font}};class fe{args;constructor(e){this.args=e,i.Defined.define(...this.args.definitions)}combinedRenderingDescriptionPromise(e,t){const{visibleCommandDescriptions:s,commandOutput:r,audibleCommandDescription:n}=t,o=s?.length;if(!o||1===o)return Promise.resolve(t);const a=i.ExtTs,{options:c={},audioBitrate:d,audioChannels:u,audioCodec:h,audioRate:l,outputType:p,...m}=r,f={...m,options:{...c,an:"",qp:0},extension:a,outputType:i.OutputType.Video},{outputDirectory:g}=this.args,y=he(e,r,"concat"),S=P.default.join(g,y);let v=this.createDirectoryPromise(S);const b=s.map(((e,t)=>{const s=`concat-${t}`,r=`${s}.${a}`,n=P.default.join(S,r),o=P.default.join(S,`${s}.commands.txt`),c=P.default.join(S,`${s}.info.txt`),{duration:d}=e;i.assertAboveZero(d,"duration");const u=[r,d];return v=v.then((()=>this.renderResultPromise(n,o,c,f,e).then(i.EmptyMethod))),u})),x=this.concatFile(b),w=P.default.join(S,"concat.txt");return v=v.then((()=>this.createFilePromise(w,x))),v.then((()=>{i.assertSize(f);const{width:e,height:t}=f,s={source:w},o=b.map((([e,t])=>t)),a=o.reduce(((e,t)=>e+t),0),d=n?.inputs||[],u={inputs:[s],duration:a,avType:i.AVType.Video};d.length&&(u.commandFilters=[{inputs:[`${d.length}:v`],ffmpegFilter:"copy",options:{},outputs:[]}]);return{audibleCommandDescription:n,visibleCommandDescriptions:[u],commandOutput:{...r,width:e,height:t,options:{...c,"c:v":"copy"}}}}))}commandDescriptionMerged(e){const{visibleCommandDescriptions:t,audibleCommandDescription:s}=e,r=[],n=t?.length;if(n){i.assertTrue(1===n,"flat");const[e]=t;r.push(e)}if(s&&r.push(s),!r.length)return;const[o]=r;return r.length>1?this.commandDescriptionsMerged(r):o}commandDescriptionsMerged(e){const t=[],s=[],r=[],n=new Set;e.forEach((e=>{const{duration:i,inputs:o,commandFilters:a,avType:c}=e;n.add(c),o&&t.push(...o),a&&s.push(...a),i&&r.push(i)}));const o=1===n.size?[...n.values()].pop():i.AVType.Both,a={inputs:t,commandFilters:s,avType:o};return i.assertTrue(r.length===e.length,"each description has duration"),a.duration=Math.max(...r),a}concatFile(e){const t=["ffconcat version 1.0"];return t.push(...e.flatMap((e=>{const[t,i]=e;return[`file '${t}'`,`duration ${i}`]}))),t.join("\n")}createDirectoryPromise(e){return x.default.promises.mkdir(e,{recursive:!0}).then(i.EmptyMethod)}createFilePromise(e,t){return x.default.promises.writeFile(e,t).then(i.EmptyMethod)}directoryPromise(){const{outputsPopulated:e,args:t,id:i}=this,{outputDirectory:s,mash:r,definitions:n,upload:o}=t,a=JSON.stringify({id:i,outputs:e,mash:r,definitions:n,upload:o},null,2);return this.createDirectoryPromise(s).then((()=>{const e=P.default.join(s,"rendering.json");return this.createFilePromise(e,a)}))}fileName(e,t,s){const{outputType:r,videoRate:n}=t;if(r!==i.OutputType.ImageSequence)return he(e,t);if(!n)throw i.Errors.internal+"videoRate";const{format:o,extension:a,basename:c}=t,d=c||"",u=a||o,{duration:h}=s,l=Math.floor(n*h)-2;return`${d}%0${String(l-1+1).length}d.${u}`}_id;get id(){return this._id?this._id:this._id=this.args.id||i.idGenerateString()}_mashInstance;get mashInstance(){if(this._mashInstance)return this._mashInstance;const{args:e,preloader:t}=this,{mash:s}=e,r={...s,preloader:t};return this._mashInstance=i.mashInstance(r)}outputInstance(e){const{outputType:t}=e,{cacheDirectory:s,upload:r}=this.args,{mashInstance:n}=this,o={commandOutput:e,cacheDirectory:s,mash:n,upload:r};return i.OutputFactory[t](o)}_outputsPopulated;get outputsPopulated(){return this._outputsPopulated||=ue(this.args.outputs)}_preloader;get preloader(){return this._preloader||=this.preloaderInitialize}get preloaderInitialize(){const{args:e}=this,{cacheDirectory:t,validDirectories:i,defaultDirectory:s,filePrefix:r}=e;return new ce(t,r,s,i)}renderResultPromise(e,t,s,r,n){const{outputType:o,avType:a}=r,{duration:c,inputs:d}=n,u={output:r,...n},h=r.options;switch(o){case i.OutputType.Image:case i.OutputType.Waveform:h["frames:v"]=1;break;default:c&&(h.t=c)}a===i.AVType.Audio?(delete r.videoCodec,delete r.videoRate):a===i.AVType.Video&&(delete r.audioCodec,delete r.audioBitrate,delete r.audioChannels,delete r.audioRate);const l=ae(this.id,u),p=_(l.command._getArguments(),e);return x.default.promises.writeFile(t,p).then((()=>l.runPromise(e))).then((t=>{const i={...t,destination:e,outputType:o},{error:r}=t;return r?x.default.promises.writeFile(s,JSON.stringify(i)).then((()=>i)):N(e,s).then((()=>i))}))}rendered(e,t=0,s=.1){if(!x.default.existsSync(e))return!1;if(!t)return!0;const r=P.default.dirname(e),n=P.default.extname(e),o=P.default.basename(e,n),a=P.default.join(r,`${o}.info.txt`);if(!x.default.existsSync(a))return!1;const c=x.default.readFileSync(a);if(!i.isDefined(c))return!1;const d=JSON.parse(c.toString()),u=Math.round(d.duration/s),h=Math.round(t/s),l=u===h;return l||console.log(this.constructor.name,"rendered",u,l?"===":"!==",h),l}runPromise(){const e=[],t={runResult:{results:e},countsByType:{}};let s=this.directoryPromise().then((()=>t));const{outputsPopulated:r}=this,{outputDirectory:n,upload:o}=this.args;return r.forEach((t=>{const{optional:r,outputType:o}=t,a={options:{},...t},c=o!==i.OutputType.Image,d=this.outputInstance(a);s=s.then((t=>{const{countsByType:s}=t;i.isDefined(s[o])||(s[o]=-1),s[o]++;const a=s[o];return d.renderingDescriptionPromise(e).then((e=>this.combinedRenderingDescriptionPromise(a,e))).then((t=>{const{commandOutput:s}=t,u=he(a,s,"info.txt"),h=P.default.join(n,u),l=this.commandDescriptionMerged(t);if(!l){if(!r)throw`required ${o} failed`;e.push({outputType:o});const t={warning:`found no ${o}`};return x.default.promises.writeFile(h,JSON.stringify(t))}if(c){const{duration:e,inputs:t}=l;if(!e)throw i.Errors.invalid.duration}const p=he(a,s,"commands.txt"),m=this.fileName(a,s,d),f=P.default.join(n,p),g=P.default.join(n,m);return this.renderResultPromise(g,f,h,s,l).then((t=>{e.push(t)}))})).then((()=>t))}))})),s.then((({runResult:e})=>{if(o){const[t]=this.mashInstance.tracks[0].clips,{contentId:s}=t,r=i.Defined.fromId(s);if(i.isPreloadableDefinition(r)){const{source:t,loadType:s}=r,{preloader:n,args:o}=this,{outputDirectory:a}=o,c={input:!0,definition:r,type:s,file:t};i.assertLoadType(s);const d=n.key(c),u=n.infoPath(d);if(x.default.existsSync(u))return x.default.promises.copyFile(u,P.default.join(a,"upload.info.txt")).then((()=>e))}}return e}))}}const ge=e=>new fe(e);class ye extends V{args;constructor(e){super(e),this.args=e}dataPutCallback(e,t,s,r,n){const o=this.definitionFilePath(t,s);if(e){i.assertTrue(x.default.existsSync(o),o);const e=H(o),s=JSON.parse(e);this.populateDefinition(t,r,s,n);return{endpoint:{prefix:i.Endpoints.data.definition.put},request:{body:{definition:s}}}}const[a]=n,c={id:s,rendering:`${s}/${r}/${a.outputType}.${a.extension||a.format}`};return{endpoint:{prefix:i.Endpoints.data.mash.put},request:{body:{mash:c}}}}definitionFilePath(e,t){const i=this.outputDirectory(e,t);return P.default.join(i,"definition.json")}definitionTypeCommandOutputs(e){const t=[],{previewSize:s,iconSize:r}=this;switch(e){case i.DefinitionType.Audio:t.push({outputType:i.OutputType.Audio});break;case i.DefinitionType.Image:t.push({outputType:i.OutputType.Image,...s}),t.push({outputType:i.OutputType.Image,...r,basename:"icon"});break;case i.DefinitionType.VideoSequence:t.push({outputType:i.OutputType.Audio,optional:!0}),t.push({outputType:i.OutputType.Image,...r,basename:"icon"}),t.push({outputType:i.OutputType.ImageSequence,...s});case i.DefinitionType.Font:}return t}directoryPromise(e,t){const{id:i}=t,s=this.definitionFilePath(e,i),r=P.default.dirname(s);return x.default.promises.mkdir(r,{recursive:!0}).then((()=>x.default.promises.writeFile(s,JSON.stringify(t,null,2))))}fileServer;id="rendering";outputDirectory(e,t,i){const s=[this.fileServer.args.uploadsPrefix];return e&&s.push(e),t&&s.push(t),i&&s.push(i),P.default.resolve(...s)}populateDefinition(e,t,s,r){const{fileServer:n}=this;i.assertTrue(n);const{id:o,source:a,type:c}=s;i.assertPopulatedString(o),i.assertDefinitionType(c),i.assertPopulatedString(a);const d=P.default.join(n.userUploadPrefix(o,e),t),u=this.outputDirectory(e,o),h=P.default.join(u,t,"upload.info.txt"),l=x.default.existsSync(h)?U(h):{},{width:p,height:m,duration:f,audible:g,label:y}=l;i.isUpdatableDurationType(c)&&i.isAboveZero(f)&&(s.duration=f),i.isUpdatableSizeType(c)&&i.isAboveZero(p)&&i.isAboveZero(m)&&(s.sourceSize={width:p,height:m});const S={};r.forEach((e=>{const{outputType:r}=e;i.isDefined(S[r])||(S[r]=-1),S[r]++;const n=S[r],o=he(n,e,"info.txt"),a=P.default.join(u,t,o),h=U(a),{width:l,height:p,duration:m,audible:f,extension:g}=h,y=he(n,e,g),v=P.default.join(d,y);switch(r){case i.OutputType.ImageSequence:i.isAboveZero(l)&&i.isAboveZero(p)&&(s.fps=e.videoRate,s.previewSize={width:l,height:p},s.url=d+"/");break;case i.OutputType.Audio:{const{duration:e}=s;if(i.isAboveZero(m)&&i.isAboveZero(e)){s.audio=!0,s.duration=Math.min(e,m);c===i.DefinitionType.Audio?s.url=v:s.audioUrl=v}break}case i.OutputType.Image:if(i.isAboveZero(l)&&i.isAboveZero(p)){const e={width:l,height:p};c===i.DefinitionType.Image&&!n?(s.previewSize=e,s.url=v):s.icon=v}}}))}get previewSize(){return this.args.previewSize||i.SizePreview}get outputSize(){return this.args.outputSize||i.SizeOutput}get iconSize(){return this.args.iconSize||i.SizeIcon}_renderingCommandOutputs;get renderingCommandOutputs(){if(this._renderingCommandOutputs)return this._renderingCommandOutputs;const{previewSize:e,outputSize:t}=this,s=this.args.commandOutputs||{},r=Object.fromEntries(i.OutputTypes.map((r=>{const n={outputType:r};switch(r){case i.OutputType.Image:case i.OutputType.ImageSequence:n.width=e.width,n.height=e.height,n.cover=!0;break;case i.OutputType.Video:n.width=t.width,n.height=t.height}const o=s[r]||{};return[r,{...n,...o}]})));return this._renderingCommandOutputs=r}start=async(e,t)=>{const s=e.body,{mash:r={},outputs:n=[],definitions:o=[],upload:a=!1,...c}=s,d=n.map((e=>{const{outputType:t}=e,s={...this.renderingCommandOutputs[t],...e};return i.outputDefaultPopulate(s)})),u=r.id||J(),h=J(),l={apiCallback:this.statusCallback(u,h)};try{const t=this.userFromRequest(e),{cacheDirectory:i}=this.args,s=this.fileServer.args.uploadsPrefix,n=this.outputDirectory(t,u,h),l={...c,upload:a,mash:r,defaultDirectory:t,validDirectories:["shared"],cacheDirectory:i,outputDirectory:n,filePrefix:s,definitions:o,outputs:d};ge(l).runPromise()}catch(e){l.error=String(e)}t.send(l)};startCallback(e){const{id:t,type:s}=e;if(!t)throw i.Errors.id;i.assertDefinitionType(s);const r=this.definitionTypeCommandOutputs(s),n={body:{...de(e,{}),outputs:r,upload:!0}};return{endpoint:{prefix:i.Endpoints.rendering.start},request:n}}status=async(e,t)=>{const s=e.body,{id:r,renderingId:n}=s,o={};try{const t=this.userFromRequest(e),s=this.outputDirectory(t,r,n),a=P.default.join(s,"rendering.json"),c=H(a),d=JSON.parse(c),{outputs:u,upload:h}=d,l=x.default.readdirSync(s),p={},m=u.map((e=>{const{outputType:t}=e;i.isDefined(p[t])||(p[t]=-1),p[t]++;const s=p[t];o[t]||={total:0,completed:0};const r=o[t];r.total++;const n=he(s,e,"info.txt");return l.includes(n)?(r.completed++,0):1}));Math.max(...m)?o.apiCallback=this.statusCallback(r,n):o.apiCallback=this.dataPutCallback(!!h,t,r,n,u)}catch(e){o.error=String(e)}t.send(o)};statusCallback(e,t){return{endpoint:{prefix:i.Endpoints.rendering.status},request:{body:{id:e,renderingId:t}}}}startServer(e,t){super.startServer(e,t),this.fileServer=t.file,this.fileServer&&e.post(i.Endpoints.rendering.upload,this.upload),e.post(i.Endpoints.rendering.start,this.start),e.post(i.Endpoints.rendering.status,this.status)}upload=async(e,t)=>{const s=e.body,{name:r,type:n,size:o}=s,a={};try{const t=this.userFromRequest(e),{fileServer:c}=this;i.assertTrue(c,"fileServer");const d=P.default.extname(r).slice(1).toLowerCase();let u=n.split("/").pop();if(u&&!i.isLoadType(u)&&(u=""),u||=c.extensionLoadType(d),u)if(c.withinLimits(o,u)){const e=u;a.loadType=e;const i=J(),n=c.userUploadPrefix(i,t),o=P.default.join(n,`original.${d}`),h=pe(e,o,i,r);await this.directoryPromise(t,h),a.id=i,a.fileProperty=c.property,a.fileApiCallback=c.constructCallback(s,t,i),a.apiCallback=this.startCallback(h)}else a.error=i.Errors.invalid.size;else a.error=i.Errors.invalid.type}catch(e){a.error=String(e)}t.send(a)}}class Se{constructor(e,t,i,s="stream"){this.id=t,this.type=s;try{x.default.mkdirSync(this.socketDir,{recursive:!0}),x.default.statSync(this.socketDir),x.default.statSync(this.socketPath),x.default.unlinkSync(this.socketPath)}catch(e){}const r=F.default.createServer(i);e.on("finish",(()=>{r.close()})),e.on("error",(e=>{console.error(this.constructor.name,"error",e),r.close()})),r.listen(this.socketPath)}id;get socketDir(){return P.default.resolve("./temporary/streams/Sockets",this.type)}get socketPath(){return`${this.socketDir}/${this.id}.sock`}type;get url(){return`unix:${this.socketPath}`}}const ve=(e,t,i="input")=>new Se(e,t,(t=>{e.pipe(t)}),i),be=require("wrtc"),{RTCPeerConnection:Pe}=be,{RTCAudioSink:xe,RTCVideoSink:we}=be.nonstandard;class Ee extends T.default{constructor(e,t,i){super(),this.id=e,this.state="open",i&&(this.commandOutput=i),t&&(this.outputPrefix=t),this.onIceConnectionStateChange=this.onIceConnectionStateChange.bind(this),this.onAudioData=this.onAudioData.bind(this),this.onFrameData=this.onFrameData.bind(this),this.beforeOffer()}async applyAnswer(e){await this.peerConnection.setRemoteDescription(e)}beforeOffer(){const e=this.createAudioSink(),t=this.createVideoSink();t.addEventListener("frame",this.onFrameData),e.addEventListener("data",this.onAudioData);const{close:i}=this.peerConnection,{stream:s}=this;s?.audio.on("end",(()=>{e.removeEventListener("data",this.onAudioData)})),this.peerConnection.close=function(){if(e.stop(),t.stop(),!s)return;const{audio:r,video:n,end:o}=s;return o?void 0:(r&&r.end(),n.end(),i.apply(this))}}createAudioSink(){const e=this.peerConnection.addTransceiver("audio");return new xe(e.receiver.track)}createVideoSink(){const e=this.peerConnection.addTransceiver("video");return new we(e.receiver.track)}close(){this.peerConnection.removeEventListener("iceconnectionstatechange",this.onIceConnectionStateChange),this.connectionTimer&&(clearTimeout(this.connectionTimer),this.connectionTimer=void 0),this.reconnectionTimer&&(clearTimeout(this.reconnectionTimer),this.reconnectionTimer=void 0),this.peerConnection.close(),this.state="closed",this.emit("closed")}connectionTimer=setTimeout((()=>{"connected"!==this.peerConnection.iceConnectionState&&"completed"!==this.peerConnection.iceConnectionState&&this.close()}),1e4);async doOffer(){const e=await this.peerConnection.createOffer();await this.peerConnection.setLocalDescription(e);try{await this.waitUntilIceGatheringStateComplete()}catch(e){throw this.close(),e}}get iceConnectionState(){return this.peerConnection.iceConnectionState}id;inputAudio(e){return{source:ve(e,this.id,"audio").url,options:{f:"s16le",ar:"48k",ac:1}}}inputVideo(e,t){const{width:i,height:s}=t;return{source:ve(e,this.id,"video").url,options:{f:"rawvideo",pix_fmt:"yuv420p",s:`${i}x${s}`,r:"30"}}}get localDescription(){const e=this.peerConnection.localDescription;if(!e)return e;const{sdp:t,...i}=e;return{...i,sdp:t.replace(/\r\na=ice-options:trickle/g,"")}}onAudioData({samples:{buffer:e}}){this.stream&&!this.stream.end&&this.stream.audio.push(Buffer.from(e))}onFrameData(e){const{frame:{width:t,height:i,data:s}}=e,r=this.streamForSize({width:t,height:i});this.streams.forEach((e=>{e===r||e.end||(e.end=!0,e.audio&&e.audio.end(),e.video.end())})),r.video.push(Buffer.from(s))}onIceConnectionStateChange(){["connected","completed"].includes(this.peerConnection.iceConnectionState)?(this.connectionTimer&&(clearTimeout(this.connectionTimer),this.connectionTimer=void 0),this.reconnectionTimer&&(clearTimeout(this.reconnectionTimer),this.reconnectionTimer=void 0)):"disconnected"!==this.peerConnection.iceConnectionState&&"failed"!==this.peerConnection.iceConnectionState||this.connectionTimer||this.reconnectionTimer||(this.reconnectionTimer=setTimeout((()=>{this.close()}),1e4))}commandOutput=i.outputDefaultHls();outputPrefix="./temporary/streams/webrtc";_peerConnection;get peerConnection(){if(this._peerConnection)return this._peerConnection;const e=new Pe({sdpSemantics:"unified-plan"});return e.addEventListener("iceconnectionstatechange",this.onIceConnectionStateChange),this._peerConnection=e,e}reconnectionTimer;get remoteDescription(){return this.peerConnection.remoteDescription}get signalingState(){return this.peerConnection.signalingState}state;get stream(){return this.streams[0]}streamForSize(e){const{width:t,height:s}=e,r=this.stream;if(r&&i.sizesEqual(r.size,e))return r;console.log("streamForSize",t,s);const n=P.default.resolve(this.outputPrefix,this.id);x.default.mkdirSync(n,{recursive:!0});const o=new g.PassThrough,a=new g.PassThrough;let c="";const{commandOutput:d}=this,u=String(this.streams.length).padStart(4,"0");switch(d.format){case i.OutputFormat.Hls:{c=`${n}/${u}-${e}.m3u8`;const{options:t}=d;t&&!Array.isArray(t)&&(t.hls_segment_filename=`${n}/${e}-%06d.ts`);break}case i.OutputFormat.Flv:c=`${n}/${u}-${e}.flv`;break;case i.OutputFormat.Rtmp:c="rtmps://..."}console.log("streamForSize commandOutput",d);const h={destination:c,size:e,video:o,audio:a,command:ae(this.id,{inputs:[this.inputVideo(o,e),this.inputAudio(a)],commandFilters:[],output:d,avType:i.AVType.Both})};return this.streams.unshift(h),h.command.run(c),h}streams=[];toJSON(){return{id:this.id,state:this.state,iceConnectionState:this.iceConnectionState,localDescription:this.localDescription,remoteDescription:this.remoteDescription,signalingState:this.signalingState}}async waitUntilIceGatheringStateComplete(){if("complete"===this.peerConnection.iceGatheringState)return;const e=new Promise(((e,t)=>{const i=t=>{t.candidate||(clearTimeout(s),this.peerConnection.removeEventListener("icecandidate",i),e())},s=setTimeout((()=>{this.peerConnection.removeEventListener("icecandidate",i),t(new Error(`Timed out waiting for host candidates ${this.peerConnection}`))}),2e3);this.peerConnection.addEventListener("icecandidate",i)}));await e}static close(){this.getConnections().forEach((e=>{this.deleteConnection(e)}))}static connectionsById=new Map;static callbacksByConnection=new Map;static create(e,t,i){const s=new Ee(e,t,i),r=()=>{this.deleteConnection(s)};return this.callbacksByConnection.set(s,r),s.once("closed",r),this.connectionsById.set(s.id,s),s}static deleteConnection(e){this.connectionsById.delete(e.id);const t=this.callbacksByConnection.get(e);t&&(this.callbacksByConnection.delete(e),e.removeListener("closed",t))}static getConnection(e){return this.connectionsById.get(e)||null}static getConnections(){return[...this.connectionsById.values()]}static toJSON(){return this.getConnections().map((e=>e.toJSON()))}}const De=(e,t)=>{if(!x.default.existsSync(e))return;const i=x.default.readdirSync(e).filter((e=>e.endsWith(t))).sort(),s=i.length,r=s&&i[s-1];return r?`${e}/${r}`:void 0},Ce={latest:De};class Te extends T.default{constructor(e){super(),this.args=e;const{id:t}=e;this.id=t,this.state="open"}args;close(){this.state="closed",this.emit("closed")}command;cut(e){const{cacheDirectory:t,filePrefix:s,defaultDirectory:r,validDirectories:n}=this.args,{mashObjects:o,definitionObjects:a}=e,c=new ce(t,s,r,n),d=o.map((e=>i.mashInstance({...e,definitionObjects:a,preloader:c}))),u={commandOutput:{...this.args.commandOutput,options:this.currentOptions},cacheDirectory:t,mashes:d},h=new i.VideoStreamOutputClass(u),l=h.args.commandOutput.videoRate,{pathPrefix:p,destination:m}=this;x.default.mkdirSync(p,{recursive:!0});try{this.command&&oe(this.command.id),h.streamingDescription().then((e=>{const{commandOutput:t,inputs:s}=e;if(!s?.length){const t={source:"./img/c.png",options:{r:l,loop:1}};e.inputs=[t]}e.inputs?.forEach((e=>{const{source:t}=e;if(!t)throw"no source";if(!i.isString(t))return;if(t.includes("://"))return;const s=`file://${P.default.resolve("../example-express-react",t)}`;if(!x.default.existsSync(t))throw console.error(this.constructor.name,"could not find",t,s),`NOT FOUND ${s}`;e.source=s}));const r={...e,output:t};this.command=ae(J(),r),this.command.addListener("error",this.error.bind(this)),this.command.run(m)}))}catch(e){return console.error(this.constructor.name,"update CATCH",e),{error:String(e)}}return{}}defaultContent(){const e="../shared/image/favicon.ico",t="image";return{mashObjects:[{tracks:[{clips:[{contentId:t,width:.2}]}]}],definitionObjects:[{source:e,id:t,type:i.DefinitionType.Image,url:e}]}}get destination(){return`${this.pathPrefix}/${this.args.file}`}error(e){String(e).includes("SIGKILL")||(console.error("StreamingProcessClass","errorCallback",e),this.cut(this.defaultContent()))}id;get currentOptions(){const{options:e,format:t}=this.args.commandOutput;if(t!==i.OutputFormat.Hls)return e;const{id:s,pathPrefix:r}=this;if(De(r,i.ExtHls)){e.hls_flags||="",e.hls_flags+=(e.hls_flags?"+":"")+"append_list";const t=this.latestTsNumber;i.isNumber(t)&&(e.start_number=t+1)}const{hls_segment_filename:n}=e;return i.isString(n)&&(n.includes("/")||(e.hls_segment_filename=`${r}/${n}`)),e}get latestTsNumber(){const e=De(this.pathPrefix,i.ExtTs);if(e)return Number(P.default.basename(e,`.${i.ExtTs}`))}get pathPrefix(){return P.default.resolve(this.args.directory,this.id)}state;toJSON(){return{id:this.id,state:this.state}}}const Oe=new Map,$e=new Map,Ie=()=>{[...Oe.values()].forEach((e=>{Re(e)}))},Fe=e=>{const t=new Te(e),i=()=>{Re(t)};return $e.set(t,i),t.once("closed",i),Oe.set(t.id,t),t},Re=e=>{Oe.delete(e.id);const t=$e.get(e);t&&($e.delete(e),e.removeListener("closed",t))},je=e=>Oe.get(e)||null,ke={deleteAll:Ie,delete:Re,get:je,create:Fe},Ae=require("node-media-server");class Le extends V{args;constructor(e){super(e),this.args=e}cut=(e,t)=>{const s=e.body,{id:r,mashObjects:n,definitionObjects:o}=s,a=je(r);if(a)try{console.log(i.Endpoints.streaming.cut,"request",s);const e={definitionObjects:o,mashObjects:n},r=a.cut(e);t.send(r)}catch(e){t.send({error:String(e)}),console.error(e)}else t.send({error:"stream not found"})};delete=(e,t)=>{const{id:i}=e.body,s=Ee.getConnection(i);if(!s)return void t.send({error:`no connection ${i}`});s.close();t.send({})};fileServer;local=(e,t)=>{const{id:i}=e.body,s=Ee.getConnection(i);if(!s)return void t.send({error:`no connection ${i}`});const{localDescription:r}=s;if(!r)return t.send({error:`no localDescription for connection ${i}`});const n=s.toJSON().localDescription;if(!n)return t.send({error:`no local description for connection ${i}`});const o={localDescription:n};t.send(o)};remote=async(e,t)=>{const s=e.body;console.log(i.Endpoints.streaming.remote,"request",s);const{id:r,localDescription:n}=s,o=Ee.getConnection(r);if(o)try{await o.applyAnswer(n);const{remoteDescription:e}=o;if(!e)return t.send({error:`no remoteDescription for connection ${r}`});const i=o.toJSON().remoteDescription;if(!i)return t.send({error:`no remote description for connection ${r}`});const s={localDescription:i};t.send(s)}catch(e){t.send({error:String(e)}),console.error(e)}else t.send({error:`no connection ${r}`})};id="streaming";preload=(e,t)=>{e.body;t.send({})};start=(e,t)=>{const s=e.body;console.log(i.Endpoints.streaming.start,"request",s);const{width:r,height:n,videoRate:o,format:a}=s,c=a||i.StreamingFormat.Hls,d=J(),u=this.args.streamingFormatOptions[c],{commandOutput:h,directory:l,file:p}=u,m={...h};r&&(m.width=r),n&&(m.height=n),o&&(m.videoRate=o);const f=i.outputDefaultStreaming(m),{width:g,height:y,videoRate:S,options:v}=f,b={width:g,height:y,videoRate:S,format:c,id:d,readySeconds:10};if(c===i.StreamingFormat.Hls){const{hls_time:e}=v;i.isPositive(e)&&(b.readySeconds=e)}try{const t=this.userFromRequest(e),{cacheDirectory:i}=this.args,s=this.fileServer.args.uploadsPrefix,r=Fe({filePrefix:s,defaultDirectory:t,validDirectories:["shared"],cacheDirectory:i,id:d,directory:l,file:p,commandOutput:f});r.cut(r.defaultContent())}catch(e){b.error=String(e)}t.send(b)};startMediaServer(){this.args.appName;const{videoCodec:e,width:t,height:s,audioCodec:r,audioBitrate:n,audioChannels:o,audioRate:a,format:c}=this.args.streamingFormatOptions[i.StreamingFormat.Hls].commandOutput;i.OutputFormat.Hls;const d={http:this.args.httpOptions};new Ae(d).run()}startServer(e,t){super.startServer(e,t),this.fileServer=t.file,e.post(i.Endpoints.streaming.start,this.start),e.post(i.Endpoints.streaming.preload,this.preload),e.post(i.Endpoints.streaming.status,this.status),e.post(i.Endpoints.streaming.cut,this.cut),e.post(i.Endpoints.streaming.local,this.local),e.post(i.Endpoints.streaming.remote,this.remote),e.post(i.Endpoints.streaming.webrtc,this.webrtc),e.post(i.Endpoints.streaming.delete,this.delete),e.get("/webrtc/:id",((e,t)=>{const{id:i}=e.params,s=Ee.getConnection(i);s?t.send(s):t.send({error:`no connection ${i}`})})),e.get(`/hls/:id/*.${i.ExtTs}`,(async(e,t)=>{const i=this.args.streamingFormatOptions.hls,{params:s,path:r}=e,n=P.default.basename(r),{id:o}=s,a=`${i.directory}/${o}/${n}`;try{t.send(x.default.readFileSync(a))}catch(e){t.sendStatus(500)}})),e.get(`/hls/:id/*.${i.ExtHls}`,(async(e,t)=>{const{id:s}=e.params,r=this.args.streamingFormatOptions.hls;try{const e=De(P.default.join(r.directory,s),i.ExtHls);if(!e)return console.error(`404 /hls/:id/*.${i.ExtHls}`,s),void t.sendStatus(404);t.send(x.default.readFileSync(e))}catch(e){console.error(e),t.sendStatus(500)}})),this.startMediaServer()}status=(e,t)=>{const{body:i}=e,{id:s}=i,r={},n=je(s);if(n){const{format:e}=n.args.commandOutput,t=e;this.streamReady(s,t)&&(r.streamUrl=this.streamUrl(s,t))}else r.error="stream not found";t.send(r)};stopServer(){Ee.close()}streamReady(e,t){const s=this.args.streamingFormatOptions[t],r=[];switch(t){case i.StreamingFormat.Hls:r.push(P.default.resolve(s.directory,e,s.segmentFile)),r.push(P.default.resolve(s.directory,e,s.file));break;case i.StreamingFormat.Rtmp:default:r.push(P.default.resolve(s.directory,e,s.file))}return!!r.length&&r.every((e=>x.default.existsSync(e)))}streamUrl(e,t){const i=this.args.streamingFormatOptions[t],{url:s,file:r}=i;return`${s}/${e}/${r}`}webrtc=async(e,t)=>{try{const s=e.body;console.log(i.Endpoints.streaming.webrtc,"request",s);const r=this.args.streamingFormatOptions[i.StreamingFormat.Hls],n=Ee.create(J(),this.args.webrtcStreamingDir,r.commandOutput);await n.doOffer();const{localDescription:o,id:a}=n;if(!o)return void t.send({error:"could not create connection"});const c={localDescription:o,id:a};t.send(c)}catch(e){t.send({error:String(e)}),console.error(e)}}}class Me extends V{args;constructor(e){super(e),this.args=e}startServer(e,t){super.startServer(e,t),Object.entries(this.args.sources).forEach((([t,i])=>{const s=P.default.resolve(i),r=x.default.existsSync(s),n=r&&x.default.lstatSync(s).isDirectory();if(!r)throw`${this.constructor.name}.startServer ${s}`;const o=n?"index.html":P.default.basename(s),a=n?s:P.default.dirname(s);e.use(t,v.default.static(a,{index:o})),console.debug(this.constructor.name,"serving",t,"from",a,"with",o,"index")}))}}exports.ApiServerClass=B,exports.Authenticator=(t,i,s)=>{t.httpVersion?s():(console.warn("Authenticator blocked"),e.response.statusCode=401,i.end(""))},exports.BasenameCache="cached",exports.BasenameDefinition="definition",exports.BasenameRendering="rendering",exports.DataServerClass=te,exports.Directory=Ce,exports.ExtensionCommands="commands.txt",exports.ExtensionLoadedInfo="info.txt",exports.FileServerClass=ie,exports.FileServerFilename="original",exports.Host=class{constructor(e){this.args=e}args;start(){const{corsOptions:e,host:t,port:s,api:r,file:n,data:o,rendering:a,streaming:c,web:d}=this.args,u={};r&&(u[i.ServerType.Api]=new B(r)),o&&(u[i.ServerType.Data]=new te(o)),n&&(u[i.ServerType.File]=new ie(n)),a&&(u[i.ServerType.Rendering]=new ye(a)),c&&(u[i.ServerType.Streaming]=new Le(c)),d&&(u[i.ServerType.Web]=new Me(d));const h=Object.values(u);if(!h.length)return void console.warn(this.constructor.name,"nothing configured");const l=v.default();l.use(v.default.json()),e&&l.use(w.default(e)),h.forEach((e=>{e.startServer(l,u)}));l.listen(s,t,(()=>{console.log(`Listening on port ${s}`)})).once("close",(()=>{h.forEach((e=>e.stopServer()))}))}},exports.HostDefaultOptions=(e={})=>{const{previewSize:t,outputSize:s,outputRate:r,port:n,auth:o,webServerHome:a,temporaryDirectory:c,fileUploadDirectory:d,dataMigrationsDirectory:u,dataBaseFile:h,renderingCacheDirectory:l,host:p,version:m,renderingCommandOutputs:f}=e,g=p||"0.0.0.0",y={},S=n||8570;if(s){const{width:e,height:t}=s;y.width=e,y.height=t}r&&(y.videoRate=r);const v=c||"./temporary",b=l||`${v}/cache`,x=u||"./workspaces/example-express-react/host/data-migrations",w=a||"./workspaces/example-express-react/host/public/index.html",E=P.default.dirname(w),D=h||`${P.default.dirname(x)}/sqlite.db`,C=d||`${E}/media`,T=f||{};if(!C.startsWith(E))throw"fileUploadDirectory must be under webServerHome";const O=P.default.relative(E,C),$=o||W;"basic"===$.type&&($.password=z($.password));return{port:S,host:g,version:m,corsOptions:{origin:"*"},api:{authentication:$},data:{temporaryIdPrefix:"temporary-",dbPath:D,dbMigrationsPrefix:x,authentication:$},file:{uploadLimits:{video:100,audio:50,image:5},uploadsPrefix:C,uploadsRelative:O,extensions:{[i.LoadType.Audio]:["aiff","mp3"],[i.LoadType.Image]:["jpeg","jpg","png","svg"],[i.LoadType.Video]:["mov","mp4","mpeg","mpg"]},authentication:$},rendering:{cacheDirectory:b,authentication:$,commandOutputs:T,previewSize:t,outputSize:s},streaming:{streamingFormatOptions:{[i.StreamingFormat.Hls]:{commandOutput:i.outputDefaultHls(y),segmentFile:`000000.${i.ExtTs}`,url:"/hls",directory:`${v}/streams`,file:`index.${i.ExtHls}`},[i.StreamingFormat.Rtmp]:{commandOutput:i.outputDefaultRtmp(y),segmentFile:"",file:`index.${i.ExtRtmp}`,url:"/rtmp",directory:`${v}/streams/rtmp`},[i.StreamingFormat.Mdash]:{commandOutput:i.outputDefaultDash(y),segmentFile:"",file:`index.${i.ExtDash}`,url:"/rtmp",directory:`${v}/streams/mdash`}},commandOutput:i.outputDefaultHls(y),appName:i.StreamingFormat.Rtmp,cacheDirectory:`${v}/cache`,webrtcStreamingDir:`${v}/streams/webrtc`,rtmpOptions:{port:1935,chunk_size:6e4,gop_cache:!0,ping:30,ping_timeout:60},httpOptions:{port:S+1,mediaroot:`${v}/streams`,allow_origin:"*"},authentication:$},web:{sources:{"/":w},authentication:$}}},exports.HostDefaultPort=8570,exports.NodeLoader=ce,exports.RenderingProcessClass=fe,exports.RenderingServerClass=ye,exports.RunningCommandClass=se,exports.ServerClass=V,exports.StreamInput=ve,exports.StreamOutput=(e,t,i="output")=>new Se(e,t,(t=>{t.pipe(e)}),i),exports.StreamUnix=Se,exports.StreamingProcessClass=Te,exports.StreamingProcessFactory=ke,exports.StreamingServerClass=Le,exports.WebServerClass=Me,exports.WebrtcConnection=Ee,exports.commandArgsString=_,exports.commandErrors=q,exports.commandExpandComplex=L,exports.commandInstance=k,exports.commandPath=(e="ffmpeg")=>{b.default.setFfmpegPath(e)},exports.commandProcess=j,exports.commandQuoteComplex=M,exports.definitionTypeFromRaw=me,exports.directoryLatest=De,exports.expandCommand=z,exports.expandFile=H,exports.expandPath=e=>e.startsWith(".")?P.default.resolve(e):e,exports.expandToJson=U,exports.idUnique=J,exports.probingInfoPromise=N,exports.renderingClipFromDefinition=le,exports.renderingCommandOutputs=ue,exports.renderingDefinitionObject=pe,exports.renderingInput=de,exports.renderingInputFromRaw=(e,t,i={})=>{const s=i.id||t,r=pe(e,t,String(s),String(i.label));return de(r,i)},exports.renderingOutputFile=he,exports.renderingProcessInstance=ge,exports.renderingSource=e=>{if(!e)return"";const{format:t,extension:s,outputType:r}=e,n=s||t;return r===i.OutputType.ImageSequence?"":`${r}.${n}`},exports.runningCommandDelete=oe,exports.runningCommandGet=ne,exports.runningCommandInstance=ae,exports.streamingProcessCreate=Fe,exports.streamingProcessDelete=Re,exports.streamingProcessDeleteAll=Ie,exports.streamingProcessGet=je;
