{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/declarations.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/hello.test.e2e.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asset/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Base/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./composer/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./component/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./control/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./declarations.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./icon/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./importer/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./inspector/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utility/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./selector/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./viewer/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./movie-masher.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/movie-masher.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MovieMasherElement",
          "cssProperties": [
            {
              "description": "component of oklch base color",
              "name": "--hue"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "_assetObject",
              "type": {
                "text": "AssetObject | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "assetObject",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "attribute": "icon"
            },
            {
              "kind": "field",
              "name": "imports",
              "privacy": "public",
              "type": {
                "text": "string | undefined | undefined"
              },
              "attribute": "imports"
            },
            {
              "kind": "field",
              "name": "masher",
              "type": {
                "text": "Masher | undefined | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_masherPromise",
              "type": {
                "text": "Promise<void> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "masherPromise",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "masherPromiseInitialize",
              "type": {
                "text": "Promise<void>"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "core",
              "type": {
                "text": "CoreLib | undefined | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_sharedPromise",
              "type": {
                "text": "Promise<void> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "sharedPromise",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "sharedPromiseInitialize",
              "type": {
                "text": "Promise<void>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssVariablesLayout",
              "static": true,
              "default": "css`\n    :host {\n      --max-dimension: 480px;\n      --ratio-preview: 0.25;\n      --control-size: 24px;\n      --control-padding: 10px;\n      --control-spacing: 5px;\n\n      --label-size: var(--control-size);\n\n      --content-padding: 10px;\n      --content-spacing: 10px;\n\n\n      --viewer-width: 270px;\n      --viewer-height: 480px;\n      --scrubber-height: 16px;\n      --scrubber-width: 16px;\n      --inspector-width: 240px;\n      --track-width: 34px;\n      --track-height: 60px;\n      --footer-height: 38px;\n      --gap: 20px;\n      --header-height: 38px;\n      --flex-direction: row;\n      --dialog-height: 50vh;\n      --dialog-width: 50vw;\n      --padding: 40px;\n      --spacing: 20px;\n      --icon-size: 24px;\n      \n      --inspector-spacing: 5px;\n      --inspector-padding: 10px;\n    }\n  `"
            },
            {
              "kind": "field",
              "name": "cssVariables",
              "static": true,
              "default": "css`\n    :host {\n    \n      --border-radius: 5px;\n      --border-size: 1px;\n      --border: var(--border-size) solid;\n      --button-size: 24px;\n\n\n      --button-transition:\n          background-color 0.25s ease-out,\n          border-color 0.25s ease-out,\n          color 0.25s ease-out;\n\n      --hue: 281;\n      \n      --chroma-primary: 0.085;\n      /* --chroma-secondary: 0.1; */\n      /* --chroma-tertiary: 0.125; */\n\n      --lightness-back-primary: 95%;\n      --lightness-back-secondary: 75%;\n      --lightness-back-tertiary: 55%;\n\n      --lightness-fore-primary: 45%;\n      --lightness-fore-secondary: 35%;\n      --lightness-fore-tertiary: 25%;\n    \n      --darkness-back-primary: 5%;\n      --darkness-back-secondary: 25%;\n      --darkness-back-tertiary: 30%;\n\n      --darkness-fore-primary: 45%;\n      --darkness-fore-secondary: 60%;\n      --darkness-fore-tertiary: 75%;\n\n      \n      \n      --drop-size: 2px;\n      \n      --dropping-shadow: \n        var(--drop-size) var(--drop-size) 0 0 var(--color-drop) inset,\n        calc(-1 * var(--drop-size)) calc(-1 * var(--drop-size)) 0 0 var(--color-drop) inset;\n      ;\n\n      --div-pad: 20px;\n      --div-space: 20px;\n      --div-back: oklch(var(--lightness-back-primary) 0 0);\n      --div-fore: oklch(var(--lightness-fore-primary) 0 0);\n\n      --section-padding: 5px;\n      --section-spacing: 5px;\n      --section-fore: oklch(var(--lightness-fore-tertiary) 0 0);\n      --section-back: oklch(var(--lightness-back-tertiary) 0 0);\n        \n      --label-fore: red;\n      --label-back: black;\n\n      --control-back: oklch(var(--lightness-back-secondary) 0 0);\n      --control-back-disabled: var(--control-back);\n      --control-back-hover: var(--control-back);\n      --control-back-selected: var(--control-back);\n\n      --control-hover-selected: oklch(var(--lightness-fore-primary) var(--chroma-primary) var(--hue));\n      --control-fore-disabled: oklch(var(--lightness-fore-secondary) 0 0);\n\n      --control-fore-hover: var(--control-hover-selected);\n      --control-fore-selected:var(--control-hover-selected);\n      --control-fore: var(--fore-secondary);\n      --control-padding: 5px;\n      --control-spacing: 5px;\n\n      --item-fore: var(--control-fore);\n      --item-fore-selected: var(--control-fore-selected);\n      --item-fore-hover: var(--control-fore-hover);\n      --item-back: var(--control-back);\n      --item-back-hover-selected: oklch(var(--lightness-back-primary) var(--chroma-primary) var(--hue));\n\n      --item-back-selected: var(--item-back-hover-selected);\n      --item-back-hover:  var(--item-back-hover-selected);\n\n      --color-drop: red;\n    }\n  `"
            },
            {
              "kind": "field",
              "name": "cssDarkMediaQuery",
              "static": true,
              "default": "css`\n    @media(prefers-color-scheme: dark) {\n      :host {\n        --lightness-back-primary: var(--darkness-back-primary);\n        --lightness-back-secondary: var(--darkness-back-secondary);\n        --lightness-back-tertiary: var(--darkness-back-tertiary);\n        --lightness-fore-primary: var(--darkness-fore-primary);\n        --lightness-fore-secondary: var(--darkness-fore-secondary);\n        --lightness-fore-tertiary: var(--darkness-fore-tertiary);\n      } \n    }\n  `"
            },
            {
              "kind": "field",
              "name": "cssGrid",
              "static": true,
              "default": "css`\n    :host {\n      --areas:\n        \"preview media media\"\n        \"compose compose inspect\"\n      ;\n      --columns:\n        min-content\n        1fr\n      ;\n      --rows:\n        min-content\n        1fr\n      ;\n\n      flex-grow: 1;\n      display: grid;\n      gap: var(--gap);\n      grid-template-areas: var(--areas);\n      grid-template-columns: var(--columns);\n      grid-template-rows: var(--rows);\n    }\n    \n      /* \n      @media (max-width: 999px) {\n        :host {\n          display: block;\n          grid-template-areas: \"preview\" \"compose\" \"inspect\" \"media\";\n        }\n      } */\n      \n  `"
            },
            {
              "description": "icon - id of icon to use for viewer section",
              "name": "(String)",
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "imports",
              "type": {
                "text": "string | undefined | undefined"
              },
              "fieldName": "imports"
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "fieldName": "icon"
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Slotted",
            "module": "/src/Base/Slotted.js"
          },
          "tagName": "movie-masher",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MovieMasherElement",
          "declaration": {
            "name": "MovieMasherElement",
            "module": "src/movie-masher.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher",
          "declaration": {
            "name": "MovieMasherElement",
            "module": "src/movie-masher.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-client/declarations.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-client/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Client/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./declarations.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Helpers/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Protocol/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Translate/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Utility/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Components"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Contexts"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Framework"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Hooks"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Setup"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Types"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Utilities"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/Component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ]
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `"
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `"
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`"
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit-element/lit-element.js"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Component",
          "declaration": {
            "name": "Component",
            "module": "src/Base/Component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/ControlGroupMixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "ControlGroupMixin",
          "members": [
            {
              "kind": "method",
              "name": "addOrRemoveEnd",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "addOrRemove",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "propertyNamePrefix",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "controlContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "icon",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "controlInputContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "propertyId",
                  "optional": true,
                  "type": {
                    "text": "PropertyId"
                  }
                },
                {
                  "name": "dataType",
                  "optional": true,
                  "type": {
                    "text": "DataType"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "controlInputContentEnd",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "namePrefix",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "currentValue",
              "return": {
                "type": {
                  "text": "Scalar | undefined"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "addOrRemove",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChangedClipId",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "namePropertyId",
              "return": {
                "type": {
                  "text": "PropertyId | undefined"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "propertyIds",
              "type": {
                "text": "PropertyIds | undefined"
              }
            },
            {
              "kind": "method",
              "name": "selectedProperty",
              "return": {
                "type": {
                  "text": "SelectedProperty | undefined"
                }
              },
              "parameters": [
                {
                  "name": "propertyId",
                  "type": {
                    "text": "PropertyId"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "propertyIdValue",
              "return": {
                "type": {
                  "text": "Scalar | undefined"
                }
              },
              "parameters": [
                {
                  "name": "found",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "propertyNameContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "T"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "ControlGroupStyles",
          "type": {
            "text": "CSSResultGroup"
          },
          "default": "[\n  css`\n    fieldset {\n      flex-grow: 1;\n      line-height: var(--control-size);\n      font-size: var(--control-size);\n      padding: var(--control-spacing);\n      background-color: initial;\n    }\n    \n    fieldset > div {\n      display: flex;\n      gap: var(--control-spacing);\n      grid-auto-flow: column;\n      margin-bottom: var(--control-spacing);\n    }\n  `\n]"
        },
        {
          "kind": "variable",
          "name": "ControlGroupProperties",
          "type": {
            "text": "PropertyDeclarations"
          },
          "default": "{\n  propertyIds: { type: Array },\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ControlGroupMixin",
          "declaration": {
            "name": "ControlGroupMixin",
            "module": "src/Base/ControlGroupMixin.ts"
          }
        },
        {
          "kind": "js",
          "name": "ControlGroupStyles",
          "declaration": {
            "name": "ControlGroupStyles",
            "module": "src/Base/ControlGroupMixin.ts"
          }
        },
        {
          "kind": "js",
          "name": "ControlGroupProperties",
          "declaration": {
            "name": "ControlGroupProperties",
            "module": "src/Base/ControlGroupMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/ControlMixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "ControlMixin",
          "members": [
            {
              "kind": "field",
              "name": "endValueDefined",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "method",
              "name": "handleChanged",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChanged"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChangedValue",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Scalar"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleInput",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "ControlInput | undefined"
              }
            },
            {
              "kind": "field",
              "name": "inputSelectContent",
              "type": {
                "text": "OptionalContent"
              }
            },
            {
              "kind": "field",
              "name": "inputValue",
              "type": {
                "text": "Scalar | undefined"
              }
            },
            {
              "kind": "field",
              "name": "property",
              "type": {
                "text": "Property | undefined"
              }
            },
            {
              "kind": "field",
              "name": "selectedProperty",
              "type": {
                "text": "SelectedProperty | undefined"
              }
            },
            {
              "kind": "field",
              "name": "selectedPropertyOrLoad",
              "type": {
                "text": "SelectedProperty | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "selectedPropertyInitialize",
              "type": {
                "text": "SelectedProperty | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setInputValue",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Scalar"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValues<this>"
                  }
                }
              ]
            },
            {
              "kind": "field"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "T"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "ControlProperties",
          "type": {
            "text": "PropertyDeclarations"
          },
          "default": "{\n  ...ControlPropertyProperties,\n  // selectedProperty: { type: Object, attribute: false },\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ControlMixin",
          "declaration": {
            "name": "ControlMixin",
            "module": "src/Base/ControlMixin.ts"
          }
        },
        {
          "kind": "js",
          "name": "ControlProperties",
          "declaration": {
            "name": "ControlProperties",
            "module": "src/Base/ControlMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/ControlPropertyMixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "ControlPropertyMixin",
          "members": [
            {
              "kind": "method",
              "name": "handleChangedAssetObject",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedAssetObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChangedClipId",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedClipId"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChangedMashAsset",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedMashAsset"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "propertyId",
              "type": {
                "text": "PropertyId | undefined"
              }
            },
            {
              "kind": "field",
              "name": "selectedId",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "selectedIdDefined",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "targetId",
              "type": {
                "text": "TargetId | undefined"
              }
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "T"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "ControlPropertyProperties",
          "type": {
            "text": "PropertyDeclarations"
          },
          "default": "{\n  propertyId: { type: String, attribute: 'property-id' },\n  selectedId: { type: String, attribute: false },\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ControlPropertyMixin",
          "declaration": {
            "name": "ControlPropertyMixin",
            "module": "src/Base/ControlPropertyMixin.ts"
          }
        },
        {
          "kind": "js",
          "name": "ControlPropertyProperties",
          "declaration": {
            "name": "ControlPropertyProperties",
            "module": "src/Base/ControlPropertyMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/DisablableMixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "DisablableMixin",
          "members": [
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "true"
            },
            {
              "kind": "method",
              "name": "handleChangedMashAsset",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedMashAsset"
                  }
                }
              ]
            },
            {
              "kind": "field"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "T"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "DisablableProperties",
          "type": {
            "text": "PropertyDeclarations"
          },
          "default": "{\n  disabled: { type: Boolean, attribute: false },\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DisablableMixin",
          "declaration": {
            "name": "DisablableMixin",
            "module": "src/Base/DisablableMixin.ts"
          }
        },
        {
          "kind": "js",
          "name": "DisablableProperties",
          "declaration": {
            "name": "DisablableProperties",
            "module": "src/Base/DisablableMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/DropTargetMixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "DropTargetMixin",
          "members": [
            {
              "kind": "field",
              "name": "acceptsClip",
              "type": {
                "text": "boolean"
              },
              "default": "true"
            },
            {
              "kind": "method",
              "name": "handleDragged",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "mashIndex",
              "return": {
                "type": {
                  "text": "MashIndex"
                }
              },
              "parameters": [
                {
                  "name": "_event",
                  "type": {
                    "text": "DragEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "ondragenter"
            },
            {
              "kind": "field",
              "name": "ondragleave"
            },
            {
              "kind": "field",
              "name": "ondragover"
            },
            {
              "kind": "field",
              "name": "ondrop"
            },
            {
              "kind": "field",
              "name": "_over",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "over",
              "type": {
                "text": "boolean"
              },
              "privacy": "private"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DropTargetMixin",
          "declaration": {
            "name": "DropTargetMixin",
            "module": "src/Base/DropTargetMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/IconString.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "IconString",
          "members": [
            {
              "kind": "field",
              "name": "detail",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "detail"
            },
            {
              "kind": "field",
              "name": "emit",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "emit"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "icon"
            },
            {
              "kind": "method",
              "name": "iconContent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "_htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "string",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "string"
            },
            {
              "kind": "method",
              "name": "stringContent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "_htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "cssControl",
              "static": true,
              "default": "css`\n    :hover {\n      --back: var(--back-hover);\n      --fore: var(--fore-hover);\n    }\n\n    :host(.disabled), :host(.disabled):hover,\n    button:disabled, button:disabled:hover {\n      --back: var(--back-disabled);\n      --cursor: default;\n      --fore: var(--fore-disabled);\n    }\n    \n    :host(.selected){\n      --back: var(--back-selected);\n      --fore: var(--fore-selected);\n    }\n\n    :host(.selected):hover {\n      --fore: var(--back-selected);\n      --back: var(--fore-selected);\n    }\n  `"
            },
            {
              "kind": "field",
              "name": "cssControls",
              "static": true,
              "default": "css`\n    a, button {\n      color: var(--fore);\n      cursor: var(--cursor);\n      display: inline-flex;\n      gap: var(--spacing);\n      height: var(--size);\n    }\n\n    a {\n      font-size: var(--size);\n      line-height: var(--size);\n      transition: var(--button-transition);\n    }\n\n    button {\n      --pad-height: calc(var(--size) - (4 * var(--padding)));\n      align-items: center;\n      appearance: none;\n      background-color: var(--back);\n      border-color: var(--fore);\n      border-radius: var(--border-radius);\n      border: var(--border);\n      font-size: var(--pad-height);\n      font-weight: 500;\n      line-height: var(--pad-height);\n      min-width: var(--size);\n      outline: none;\n      padding: var(--padding);\n      transition: var(--button-transition);\n    }\n  `"
            },
            {
              "kind": "field",
              "name": "cssHost",
              "static": true,
              "default": "css`\n    :host {\n      --back-disabled: var(--control-back-disabled);\n      --back-hover: var(--control-back-hover);\n      --back-selected: var(--control-back-selected);\n      --back: var(--control-back);\n      --cursor: pointer;\n      --fore-disabled: var(--control-fore-disabled);\n      --fore-hover: var(--control-fore-hover);\n      --fore-selected: var(--control-fore-selected);\n      --fore: var(--control-fore);\n      --padding: 2px;\n      --size: var(--control-size);\n      --spacing: var(--control-spacing);\n      display: inline-block;\n    }\n  `"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "detail",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "detail"
            },
            {
              "name": "emit",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "emit"
            },
            {
              "name": "string",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "string"
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "icon"
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Slotted",
            "module": "/src/Base/Slotted.js"
          },
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "IconString",
          "declaration": {
            "name": "IconString",
            "module": "src/Base/IconString.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/ImporterComponent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ImporterComponent",
          "members": [
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()"
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Component",
            "module": "/src/Base/Component"
          },
          "attributes": [
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ImporterComponent",
          "declaration": {
            "name": "ImporterComponent",
            "module": "src/Base/ImporterComponent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/LeftCenterRight.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LeftCenterRight",
          "members": [
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `"
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `"
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Slotted",
            "module": "/src/Base/Slotted.js"
          },
          "attributes": [
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "Header",
          "members": [
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "icon"
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "icon"
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "LeftCenterRight",
            "module": "src/Base/LeftCenterRight.ts"
          },
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "Footer",
          "members": [
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "LeftCenterRight",
            "module": "src/Base/LeftCenterRight.ts"
          },
          "attributes": [
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "Div",
          "members": [
            {
              "kind": "field",
              "name": "cssDivHostBackground",
              "static": true,
              "default": "css`\n    :host {\n      background-color: var(--div-back);\n      color: var(--div-fore);\n    }\n  `"
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "LeftCenterRight",
            "module": "src/Base/LeftCenterRight.ts"
          },
          "attributes": [
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LeftCenterRight",
          "declaration": {
            "name": "LeftCenterRight",
            "module": "src/Base/LeftCenterRight.ts"
          }
        },
        {
          "kind": "js",
          "name": "Header",
          "declaration": {
            "name": "Header",
            "module": "src/Base/LeftCenterRight.ts"
          }
        },
        {
          "kind": "js",
          "name": "Footer",
          "declaration": {
            "name": "Footer",
            "module": "src/Base/LeftCenterRight.ts"
          }
        },
        {
          "kind": "js",
          "name": "Div",
          "declaration": {
            "name": "Div",
            "module": "src/Base/LeftCenterRight.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/RectObserverMixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "RectObserverMixin",
          "members": [
            {
              "kind": "method",
              "name": "handleResize"
            },
            {
              "kind": "field",
              "name": "rect",
              "type": {
                "text": "Rect | undefined"
              }
            },
            {
              "kind": "field",
              "name": "resizeObserver",
              "type": {
                "text": "ResizeObserver | undefined"
              },
              "privacy": "private"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RectObserverMixin",
          "declaration": {
            "name": "RectObserverMixin",
            "module": "src/Base/RectObserverMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/Scroller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Scroller",
          "members": [
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleScrollRoot",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "ScrollRootEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "cssDivDropping",
              "static": true,
              "default": "css`\n    div.drop-box {\n      top: 0;\n      left: 0;\n      pointer-events: none;\n      color: transparent;\n      right: 0px;\n      bottom: 0px;\n      position: absolute;\n      display: block;\n    }\n\n    :host(.dropping) div.drop-box {\n      box-shadow: var(--dropping-shadow);\n    }\n  `"
            },
            {
              "kind": "field",
              "name": "cssDivRoot",
              "static": true,
              "default": "css`\n    div.root {\n      padding: 0px;\n      flex-grow: 1;\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n    }\n  `"
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "ImporterComponent",
            "module": "/src/Base/ImporterComponent.js"
          },
          "attributes": [
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Scroller",
          "declaration": {
            "name": "Scroller",
            "module": "src/Base/Scroller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/Section.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "HeaderSlot",
          "type": {
            "text": "HeaderSectionSlot"
          },
          "default": "'header'"
        },
        {
          "kind": "variable",
          "name": "FooterSlot",
          "type": {
            "text": "FooterSectionSlot"
          },
          "default": "'footer'"
        },
        {
          "kind": "variable",
          "name": "DivSlot",
          "type": {
            "text": "DivSectionSlot"
          },
          "default": "'div'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "Section",
          "members": [
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "divContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "_htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "footerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "_htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "headerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "_htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "attribute": "icon"
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "styleHost",
              "static": true,
              "default": "css`\n    :host {\n      flex-grow: 1;\n      display: flex;\n    }\n  `"
            },
            {
              "kind": "field",
              "name": "styleSection",
              "static": true,
              "default": "css`\n    section {\n      flex-grow: 1;\n      overflow: hidden;\n      display: grid;\n      grid-template-rows: var(--header-height) 1fr var(--footer-height);\n      grid-template-columns: 1fr;\n      border: var(--border);\n      border-color: var(--section-back);\n      border-radius: var(--border-radius);\n    }\n  `"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "fieldName": "icon"
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Slotted",
            "module": "/src/Base/Slotted.js"
          },
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderSlot",
          "declaration": {
            "name": "HeaderSlot",
            "module": "src/Base/Section.ts"
          }
        },
        {
          "kind": "js",
          "name": "FooterSlot",
          "declaration": {
            "name": "FooterSlot",
            "module": "src/Base/Section.ts"
          }
        },
        {
          "kind": "js",
          "name": "DivSlot",
          "declaration": {
            "name": "DivSlot",
            "module": "src/Base/Section.ts"
          }
        },
        {
          "kind": "js",
          "name": "Section",
          "declaration": {
            "name": "Section",
            "module": "src/Base/Section.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/SizeReactiveMixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "SizeReactiveMixin",
          "members": [
            {
              "kind": "method",
              "name": "handleChangedSize",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedSize"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "Size | undefined"
              }
            },
            {
              "kind": "field"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "T"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "SizeReactiveProperties",
          "type": {
            "text": "PropertyDeclarations"
          },
          "default": "{\n  size: { type: Object, attribute: false },\n\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SizeReactiveMixin",
          "declaration": {
            "name": "SizeReactiveMixin",
            "module": "src/Base/SizeReactiveMixin.ts"
          }
        },
        {
          "kind": "js",
          "name": "SizeReactiveProperties",
          "declaration": {
            "name": "SizeReactiveProperties",
            "module": "src/Base/SizeReactiveMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/Slotted.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Slotted",
          "members": [
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "_part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts"
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts"
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "ImporterComponent",
            "module": "/src/Base/ImporterComponent"
          },
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Slotted",
          "declaration": {
            "name": "Slotted",
            "module": "src/Base/Slotted.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Component.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DisablableMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DropTargetMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./IconString.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ImporterComponent.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./LeftCenterRight.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./RectObserverMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Scroller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Section.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Slotted.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ControlGroupMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ControlPropertyMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./SizeReactiveMixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./color/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./mash/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./object/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./objects/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./raw/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./shape/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./text/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/component-a.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AElement",
          "members": [
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "detail",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "detail",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "emit",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "emit",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "method",
              "name": "iconContent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "_htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "string",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "string",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "method",
              "name": "stringContent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "_htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssControl",
              "static": true,
              "default": "css`\n    :hover {\n      --back: var(--back-hover);\n      --fore: var(--fore-hover);\n    }\n\n    :host(.disabled), :host(.disabled):hover,\n    button:disabled, button:disabled:hover {\n      --back: var(--back-disabled);\n      --cursor: default;\n      --fore: var(--fore-disabled);\n    }\n    \n    :host(.selected){\n      --back: var(--back-selected);\n      --fore: var(--fore-selected);\n    }\n\n    :host(.selected):hover {\n      --fore: var(--back-selected);\n      --back: var(--fore-selected);\n    }\n  `",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssControls",
              "static": true,
              "default": "css`\n    a, button {\n      color: var(--fore);\n      cursor: var(--cursor);\n      display: inline-flex;\n      gap: var(--spacing);\n      height: var(--size);\n    }\n\n    a {\n      font-size: var(--size);\n      line-height: var(--size);\n      transition: var(--button-transition);\n    }\n\n    button {\n      --pad-height: calc(var(--size) - (4 * var(--padding)));\n      align-items: center;\n      appearance: none;\n      background-color: var(--back);\n      border-color: var(--fore);\n      border-radius: var(--border-radius);\n      border: var(--border);\n      font-size: var(--pad-height);\n      font-weight: 500;\n      line-height: var(--pad-height);\n      min-width: var(--size);\n      outline: none;\n      padding: var(--padding);\n      transition: var(--button-transition);\n    }\n  `",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHost",
              "static": true,
              "default": "css`\n    :host {\n      --back-disabled: var(--control-back-disabled);\n      --back-hover: var(--control-back-hover);\n      --back-selected: var(--control-back-selected);\n      --back: var(--control-back);\n      --cursor: pointer;\n      --fore-disabled: var(--control-fore-disabled);\n      --fore-hover: var(--control-fore-hover);\n      --fore-selected: var(--control-fore-selected);\n      --fore: var(--control-fore);\n      --padding: 2px;\n      --size: var(--control-size);\n      --spacing: var(--control-spacing);\n      display: inline-block;\n    }\n  `",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "IconString",
            "module": "/src/Base/IconString.js"
          },
          "tagName": "movie-masher-component-a",
          "customElement": true,
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "detail",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "detail",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "emit",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "emit",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "string",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "string",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AElement",
          "declaration": {
            "name": "AElement",
            "module": "src/component/component-a.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-component-a",
          "declaration": {
            "name": "AElement",
            "module": "src/component/component-a.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/component-action.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ActionElement",
          "members": [
            {
              "kind": "method",
              "name": "handleChanged",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleChangedMashAsset",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedMashAsset"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "emit"
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "DisablableProperties",
              "privacy": "public",
              "attribute": "DisablableProperties"
            }
          ],
          "attributes": [
            {
              "name": "DisablableProperties",
              "fieldName": "DisablableProperties"
            }
          ],
          "superclass": {
            "name": "WithDisablable",
            "module": "src/component/component-action.ts"
          },
          "tagName": "movie-masher-component-action",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ActionElement",
          "declaration": {
            "name": "ActionElement",
            "module": "src/component/component-action.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-component-action",
          "declaration": {
            "name": "ActionElement",
            "module": "src/component/component-action.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/component-button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ButtonElement",
          "members": [
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "detail",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "detail",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "emit",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "emit",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "method",
              "name": "iconContent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "_htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "string",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "string",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "method",
              "name": "stringContent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "_htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssControl",
              "static": true,
              "default": "css`\n    :hover {\n      --back: var(--back-hover);\n      --fore: var(--fore-hover);\n    }\n\n    :host(.disabled), :host(.disabled):hover,\n    button:disabled, button:disabled:hover {\n      --back: var(--back-disabled);\n      --cursor: default;\n      --fore: var(--fore-disabled);\n    }\n    \n    :host(.selected){\n      --back: var(--back-selected);\n      --fore: var(--fore-selected);\n    }\n\n    :host(.selected):hover {\n      --fore: var(--back-selected);\n      --back: var(--fore-selected);\n    }\n  `",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssControls",
              "static": true,
              "default": "css`\n    a, button {\n      color: var(--fore);\n      cursor: var(--cursor);\n      display: inline-flex;\n      gap: var(--spacing);\n      height: var(--size);\n    }\n\n    a {\n      font-size: var(--size);\n      line-height: var(--size);\n      transition: var(--button-transition);\n    }\n\n    button {\n      --pad-height: calc(var(--size) - (4 * var(--padding)));\n      align-items: center;\n      appearance: none;\n      background-color: var(--back);\n      border-color: var(--fore);\n      border-radius: var(--border-radius);\n      border: var(--border);\n      font-size: var(--pad-height);\n      font-weight: 500;\n      line-height: var(--pad-height);\n      min-width: var(--size);\n      outline: none;\n      padding: var(--padding);\n      transition: var(--button-transition);\n    }\n  `",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHost",
              "static": true,
              "default": "css`\n    :host {\n      --back-disabled: var(--control-back-disabled);\n      --back-hover: var(--control-back-hover);\n      --back-selected: var(--control-back-selected);\n      --back: var(--control-back);\n      --cursor: pointer;\n      --fore-disabled: var(--control-fore-disabled);\n      --fore-hover: var(--control-fore-hover);\n      --fore-selected: var(--control-fore-selected);\n      --fore: var(--control-fore);\n      --padding: 2px;\n      --size: var(--control-size);\n      --spacing: var(--control-spacing);\n      display: inline-block;\n    }\n  `",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "detail",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "detail",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "emit",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "emit",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "string",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "string",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "IconString",
            "module": "/src/Base/IconString.js"
          },
          "tagName": "movie-masher-component-button",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ButtonElement",
          "declaration": {
            "name": "ButtonElement",
            "module": "src/component/component-button.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-component-button",
          "declaration": {
            "name": "ButtonElement",
            "module": "src/component/component-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/component-dialog.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "DialogElement",
          "members": [
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "dialog",
              "type": {
                "text": "HTMLDialogElement"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "dialogClose",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "dialogOpen",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "dialogOpened",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "dialogOpening",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleClose",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleDialog",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventDialog"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "section",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "section"
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "section",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "section"
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Slotted",
            "module": "/src/Base/Slotted.js"
          },
          "tagName": "movie-masher-component-dialog",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DialogElement",
          "declaration": {
            "name": "DialogElement",
            "module": "src/component/component-dialog.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-component-dialog",
          "declaration": {
            "name": "DialogElement",
            "module": "src/component/component-dialog.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/component-icon.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "IconElement",
          "members": [
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "attribute": "icon"
            },
            {
              "kind": "field",
              "name": "iconContent",
              "type": {
                "text": "OptionalContent | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_iconPromise",
              "type": {
                "text": "Promise<Icon | void> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "iconPromise",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "iconPromiseInitialize",
              "type": {
                "text": "Promise<Icon | void>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "iconEventPromise",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "svgStringClean",
              "privacy": "private",
              "parameters": [
                {
                  "name": "svgString",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "svgStringNode",
              "privacy": "private",
              "parameters": [
                {
                  "name": "svgString",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "fieldName": "icon"
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Component",
            "module": "/src/Base/Component.js"
          },
          "tagName": "movie-masher-component-icon",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "IconElement",
          "declaration": {
            "name": "IconElement",
            "module": "src/component/component-icon.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-component-icon",
          "declaration": {
            "name": "IconElement",
            "module": "src/component/component-icon.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/component-span.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SpanElement",
          "members": [
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Component",
            "module": "/src/Base/Component.js"
          },
          "tagName": "movie-masher-component-span",
          "customElement": true,
          "attributes": [
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SpanElement",
          "declaration": {
            "name": "SpanElement",
            "module": "src/component/component-span.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-component-span",
          "declaration": {
            "name": "SpanElement",
            "module": "src/component/component-span.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/component-string.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "StringElement",
          "members": [
            {
              "kind": "field",
              "name": "contentOrVoid",
              "type": {
                "text": "Text | string | void | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "stringContent",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "contentInitialize",
              "type": {
                "text": "Text | string | void"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "string",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "attribute": "string"
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "string",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "fieldName": "string"
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Component",
            "module": "/src/Base/Component.js"
          },
          "tagName": "movie-masher-component-string",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "StringElement",
          "declaration": {
            "name": "StringElement",
            "module": "src/component/component-string.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-component-string",
          "declaration": {
            "name": "StringElement",
            "module": "src/component/component-string.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./component-a.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./component-action.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./component-button.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./component-dialog.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./component-icon.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./component-span.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./component-string.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/composer/composer-clip.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ComposerClipElement",
          "members": [
            {
              "kind": "field",
              "name": "clipId",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "clip-id"
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "draggable",
              "type": {
                "text": "boolean"
              },
              "default": "true"
            },
            {
              "kind": "method",
              "name": "drawBackgroundAndUpdate",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "gap",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "2"
            },
            {
              "kind": "field",
              "name": "waitingPromise",
              "type": {
                "text": "Promise<SvgOrImageDataOrError> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleChanged",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChanged"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleIntersection",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "entries",
                  "type": {
                    "text": "IntersectionObserverEntry[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleResize",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Size"
                }
              },
              "parameters": [
                {
                  "name": "entries",
                  "type": {
                    "text": "ResizeObserverEntry[]"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "handleTimeout",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "hasChanged",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "iconFromFramePromise",
              "type": {
                "text": "Promise<void> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "intersectionController",
              "type": {
                "text": "IntersectionController<boolean> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "intersecting",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "label",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "maxWidth",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "max-width"
            },
            {
              "kind": "field",
              "name": "onclick"
            },
            {
              "kind": "field",
              "name": "ondragend"
            },
            {
              "kind": "field",
              "name": "ondragstart"
            },
            {
              "kind": "method",
              "name": "mashIndex",
              "return": {
                "type": {
                  "text": "MashIndex"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "DragEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "onpointerdown"
            },
            {
              "kind": "field",
              "name": "resizeController",
              "type": {
                "text": "ResizeController<Size> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "scale",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "scale"
            },
            {
              "kind": "field",
              "name": "scrollRoot",
              "type": {
                "text": "Element | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "clipSize",
              "type": {
                "text": "object"
              },
              "privacy": "private",
              "default": "{ ...SIZE_ZERO }"
            },
            {
              "kind": "field",
              "name": "sizeWhenUpdated",
              "type": {
                "text": "object"
              },
              "privacy": "private",
              "default": "{ ...SIZE_ZERO }"
            },
            {
              "kind": "field",
              "name": "trackIndex",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "attribute": "track-index"
            },
            {
              "kind": "field",
              "name": "trackWidth",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "track-width"
            },
            {
              "kind": "field",
              "name": "startTimeout",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "timeout",
              "type": {
                "text": "Timeout | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "timeoutRate",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "100"
            },
            {
              "kind": "field",
              "name": "x",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "x"
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "clip-id",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "clipId"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label"
            },
            {
              "name": "scale",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "scale"
            },
            {
              "name": "track-width",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "trackWidth"
            },
            {
              "name": "track-index",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "fieldName": "trackIndex"
            },
            {
              "name": "max-width",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "maxWidth"
            },
            {
              "name": "x",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "x"
            }
          ],
          "superclass": {
            "name": "WithSizeReactiveMixin",
            "module": "src/composer/composer-clip.ts"
          },
          "tagName": "movie-masher-composer-clip",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ComposerClipElement",
          "declaration": {
            "name": "ComposerClipElement",
            "module": "src/composer/composer-clip.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-composer-clip",
          "declaration": {
            "name": "ComposerClipElement",
            "module": "src/composer/composer-clip.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/composer/composer-content.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ComposerContentElement",
          "members": [
            {
              "kind": "field",
              "name": "clientXRef",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "-1"
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "frame",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "frames",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "framesWidth",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "method",
              "name": "handleDuration",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "NumberEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChangedMashAsset",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedMashAsset"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleResize",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_entries",
                  "type": {
                    "text": "ResizeObserverEntry[]"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "handleScrubberDragOver",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleScrubberPointerDown",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleScrubberPointerMove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleScrubberPointerUp",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChangedFrame",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedFrame"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTracks",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "NumberEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleZoom",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "NumberEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "left",
              "privacy": "protected",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "mashAsset",
              "type": {
                "text": "MashAsset | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onclick"
            },
            {
              "kind": "method",
              "name": "recalculateLeft",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "resizeObserver",
              "type": {
                "text": "ResizeObserver | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "scale",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "tracksLength",
              "privacy": "protected",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "width",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "x",
              "privacy": "protected",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "zoom",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "1.0"
            },
            {
              "kind": "field"
            }
          ],
          "superclass": {
            "name": "WithDropTargetMixin",
            "module": "src/composer/composer-content.ts"
          },
          "tagName": "movie-masher-composer-content",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ComposerContentElement",
          "declaration": {
            "name": "ComposerContentElement",
            "module": "src/composer/composer-content.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-composer-content",
          "declaration": {
            "name": "ComposerContentElement",
            "module": "src/composer/composer-content.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/composer/composer-div.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ComposerDivElement",
          "members": [
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssDivHostBackground",
              "static": true,
              "default": "css`\n    :host {\n      background-color: var(--div-back);\n      color: var(--div-fore);\n    }\n  `",
              "inheritedFrom": {
                "name": "Div",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Div",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-composer-div",
          "customElement": true,
          "attributes": [
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ComposerDivElement",
          "declaration": {
            "name": "ComposerDivElement",
            "module": "src/composer/composer-div.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-composer-div",
          "declaration": {
            "name": "ComposerDivElement",
            "module": "src/composer/composer-div.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/composer/composer-footer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ComposerFooterElement",
          "members": [
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Footer",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-composer-footer",
          "customElement": true,
          "attributes": [
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ComposerFooterElement",
          "declaration": {
            "name": "ComposerFooterElement",
            "module": "src/composer/composer-footer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-composer-footer",
          "declaration": {
            "name": "ComposerFooterElement",
            "module": "src/composer/composer-footer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/composer/composer-header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ComposerHeaderElement",
          "superclass": {
            "name": "Header",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-composer-header",
          "customElement": true,
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ComposerHeaderElement",
          "declaration": {
            "name": "ComposerHeaderElement",
            "module": "src/composer/composer-header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-composer-header",
          "declaration": {
            "name": "ComposerHeaderElement",
            "module": "src/composer/composer-header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/composer/composer-icon.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ComposerIconElement",
          "members": [
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "dense",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "dense"
            },
            {
              "kind": "method",
              "name": "mashIndex",
              "return": {
                "type": {
                  "text": "MashIndex"
                }
              },
              "parameters": [
                {
                  "name": "_event",
                  "type": {
                    "text": "DragEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "trackIndex",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "attribute": "track-index"
            }
          ],
          "attributes": [
            {
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "dense"
            },
            {
              "name": "track-index",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "fieldName": "trackIndex"
            }
          ],
          "superclass": {
            "name": "WithDropTargetMixin",
            "module": "src/composer/composer-icon.ts"
          },
          "tagName": "movie-masher-composer-icon",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ComposerIconElement",
          "declaration": {
            "name": "ComposerIconElement",
            "module": "src/composer/composer-icon.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-composer-icon",
          "declaration": {
            "name": "ComposerIconElement",
            "module": "src/composer/composer-icon.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/composer/composer-section.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ComposerSectionElement",
          "members": [
            {
              "kind": "method",
              "name": "divContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "footerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "headerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "styleHost",
              "static": true,
              "default": "css`\n    :host {\n      flex-grow: 1;\n      display: flex;\n    }\n  `",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "styleSection",
              "static": true,
              "default": "css`\n    section {\n      flex-grow: 1;\n      overflow: hidden;\n      display: grid;\n      grid-template-rows: var(--header-height) 1fr var(--footer-height);\n      grid-template-columns: 1fr;\n      border: var(--border);\n      border-color: var(--section-back);\n      border-radius: var(--border-radius);\n    }\n  `",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Section",
            "module": "/src/Base/Section.js"
          },
          "tagName": "movie-masher-composer-section",
          "customElement": true,
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ComposerSectionElement",
          "declaration": {
            "name": "ComposerSectionElement",
            "module": "src/composer/composer-section.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-composer-section",
          "declaration": {
            "name": "ComposerSectionElement",
            "module": "src/composer/composer-section.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/composer/composer-track.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ComposerTrackElement",
          "members": [
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "handleChanged",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_event",
                  "type": {
                    "text": "EventChanged"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleResize",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "entries",
                  "type": {
                    "text": "ResizeObserverEntry[]"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "height",
              "privacy": "protected",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "maxWidth",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "max-width"
            },
            {
              "kind": "method",
              "name": "mashIndex",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "DragEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "resizeController",
              "type": {
                "text": "ResizeController<number> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "scale",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "1.0",
              "attribute": "scale"
            },
            {
              "kind": "field",
              "name": "trackIndex",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "attribute": "track-index"
            },
            {
              "kind": "field",
              "name": "width",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "width"
            },
            {
              "kind": "field",
              "name": "x",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "x"
            },
            {
              "kind": "field"
            }
          ],
          "attributes": [
            {
              "name": "track-index",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "fieldName": "trackIndex"
            },
            {
              "name": "scale",
              "type": {
                "text": "number"
              },
              "default": "1.0",
              "fieldName": "scale"
            },
            {
              "name": "width",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "width"
            },
            {
              "name": "max-width",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "maxWidth"
            },
            {
              "name": "x",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "x"
            }
          ],
          "superclass": {
            "name": "WithDropTargetMixin",
            "module": "src/composer/composer-track.ts"
          },
          "tagName": "movie-masher-composer-track",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ComposerTrackElement",
          "declaration": {
            "name": "ComposerTrackElement",
            "module": "src/composer/composer-track.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-composer-track",
          "declaration": {
            "name": "ComposerTrackElement",
            "module": "src/composer/composer-track.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/composer/composer-zoom.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ComposerZoomElement",
          "members": [
            {
              "kind": "field",
              "name": "zoom",
              "privacy": "protected",
              "type": {
                "text": "number"
              },
              "default": "1.0"
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            }
          ],
          "superclass": {
            "name": "WithDisablable",
            "module": "src/composer/composer-zoom.ts"
          },
          "tagName": "movie-masher-composer-zoom",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ComposerZoomElement",
          "declaration": {
            "name": "ComposerZoomElement",
            "module": "src/composer/composer-zoom.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-composer-zoom",
          "declaration": {
            "name": "ComposerZoomElement",
            "module": "src/composer/composer-zoom.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/composer/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./composer-clip.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./composer-content.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./composer-div.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./composer-footer.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./composer-header.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./composer-icon.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./composer-section.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./composer-track.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./composer-zoom.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/asset.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "AssetControlElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-control-asset'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "AssetControlElement",
          "members": [
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "EventControlDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleNode",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventControl"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            }
          ],
          "superclass": {
            "name": "WithControl",
            "module": "src/control/asset.ts"
          },
          "tagName": "AssetControlElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AssetControlElement",
          "declaration": {
            "name": "AssetControlElement",
            "module": "src/control/asset.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "AssetControlElementName",
          "declaration": {
            "name": "AssetControlElement",
            "module": "src/control/asset.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/boolean.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "BooleanControlElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-control-boolean'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "BooleanControlElement",
          "members": [
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "inputValue",
              "type": {
                "text": "Scalar | undefined"
              }
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "EventControlDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleNode",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventControl"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            }
          ],
          "superclass": {
            "name": "WithControl",
            "module": "src/control/boolean.ts"
          },
          "tagName": "BooleanControlElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BooleanControlElement",
          "declaration": {
            "name": "BooleanControlElement",
            "module": "src/control/boolean.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "BooleanControlElementName",
          "declaration": {
            "name": "BooleanControlElement",
            "module": "src/control/boolean.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/control-input.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ControlInputElement",
          "members": [
            {
              "kind": "field",
              "name": "_control",
              "type": {
                "text": "Node | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "control",
              "type": {
                "text": "Node | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "controlInitialize",
              "type": {
                "text": "Node | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "dataType",
              "type": {
                "text": "DataType | undefined"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "propertyDataType",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "DataType | undefined"
                }
              },
              "parameters": [
                {
                  "name": "propertyId",
                  "type": {
                    "text": "PropertyId"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "dataTypeDeclaration",
              "type": {
                "text": "PropertyDeclarations"
              },
              "static": true,
              "default": "{\n    dataType: { type: String, attribute: 'data-type' },\n  }"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "attribute": ""
            }
          ],
          "superclass": {
            "name": "WithControlProperty",
            "module": "src/control/control-input.ts"
          },
          "tagName": "movie-masher-control-input",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ControlInputElement",
          "declaration": {
            "name": "ControlInputElement",
            "module": "src/control/control-input.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-control-input",
          "declaration": {
            "name": "ControlInputElement",
            "module": "src/control/control-input.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/control-row.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ControlRowElement",
          "members": [
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataType",
              "type": {
                "text": "DataType | undefined"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "DataType | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "propertyId",
              "privacy": "public",
              "type": {
                "text": "PropertyId | undefined"
              },
              "attribute": "property-id"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "property-id",
              "type": {
                "text": "PropertyId | undefined"
              },
              "fieldName": "propertyId"
            },
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "ImporterComponent",
            "module": "/src/Base/ImporterComponent.js"
          },
          "tagName": "movie-masher-control-row",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ControlRowElement",
          "declaration": {
            "name": "ControlRowElement",
            "module": "src/control/control-row.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-control-row",
          "declaration": {
            "name": "ControlRowElement",
            "module": "src/control/control-row.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./boolean.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./control-input.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./control-row.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./group/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./numeric.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./rgb.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./string.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asset.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/numeric.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "NumericControlElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-control-numeric'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "NumericControlElement",
          "members": [
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "inputValue",
              "type": {
                "text": "Scalar | undefined"
              }
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "detail",
                  "type": {
                    "text": "EventControlDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleNode",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventControl"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "types",
              "type": {
                "text": "array"
              },
              "privacy": "private",
              "static": true,
              "default": "[DataTypeFrame, DataTypeNumber, DataTypePercent]"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            }
          ],
          "superclass": {
            "name": "WithControl",
            "module": "src/control/numeric.ts"
          },
          "tagName": "NumericControlElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NumericControlElement",
          "declaration": {
            "name": "NumericControlElement",
            "module": "src/control/numeric.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "NumericControlElementName",
          "declaration": {
            "name": "NumericControlElement",
            "module": "src/control/numeric.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/rgb.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "RgbControlElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-control-rgb'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "RgbControlElement",
          "members": [
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "detail",
                  "type": {
                    "text": "EventControlDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleNode",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventControl"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            }
          ],
          "superclass": {
            "name": "WithControl",
            "module": "src/control/rgb.ts"
          },
          "tagName": "RgbControlElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RgbControlElement",
          "declaration": {
            "name": "RgbControlElement",
            "module": "src/control/rgb.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "RgbControlElementName",
          "declaration": {
            "name": "RgbControlElement",
            "module": "src/control/rgb.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/string.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "StringControlElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-control-string'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "StringControlElement",
          "members": [
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "detail",
                  "type": {
                    "text": "EventControlDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleNode",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventControl"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            }
          ],
          "superclass": {
            "name": "WithControl",
            "module": "src/control/string.ts"
          },
          "tagName": "StringControlElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "StringControlElement",
          "declaration": {
            "name": "StringControlElement",
            "module": "src/control/string.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "StringControlElementName",
          "declaration": {
            "name": "StringControlElement",
            "module": "src/control/string.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/icon/fetch.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/icon/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./fetch.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/importer/importer-div.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ImporterDivElement",
          "members": [
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleImporter",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "StringEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "importer",
              "type": {
                "text": "ClientImporter | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "importerId",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "importer-id"
            },
            {
              "kind": "field",
              "name": "_importers",
              "type": {
                "text": "ClientImporters | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "importers",
              "type": {
                "text": "ClientImporters"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "importersInitialize",
              "type": {
                "text": "ClientImporters"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_importerElements",
              "type": {
                "text": "Htmls | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "importerElements",
              "type": {
                "text": "Htmls"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "importerElementsInitialize",
              "type": {
                "text": "Htmls"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            },
            {
              "kind": "field",
              "name": "cssDivHostBackground",
              "static": true,
              "default": "css`\n    :host {\n      background-color: var(--div-back);\n      color: var(--div-fore);\n    }\n  `",
              "inheritedFrom": {
                "name": "Div",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "importer-id",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "importerId"
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Div",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-importer-div",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ImporterDivElement",
          "declaration": {
            "name": "ImporterDivElement",
            "module": "src/importer/importer-div.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-importer-div",
          "declaration": {
            "name": "ImporterDivElement",
            "module": "src/importer/importer-div.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/importer/importer-footer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ImporterFooterElement",
          "members": [
            {
              "kind": "field",
              "name": "assetObjects",
              "privacy": "public",
              "type": {
                "text": "AssetObjects"
              },
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "handleImporterComplete",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleImporterChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "ImportAssetObjectsEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Footer",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-importer-footer",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ImporterFooterElement",
          "declaration": {
            "name": "ImporterFooterElement",
            "module": "src/importer/importer-footer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-importer-footer",
          "declaration": {
            "name": "ImporterFooterElement",
            "module": "src/importer/importer-footer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/importer/importer-header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ImporterHeaderElement",
          "superclass": {
            "name": "Header",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-importer-header",
          "customElement": true,
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ImporterHeaderElement",
          "declaration": {
            "name": "ImporterHeaderElement",
            "module": "src/importer/importer-header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-importer-header",
          "declaration": {
            "name": "ImporterHeaderElement",
            "module": "src/importer/importer-header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/importer/importer-section.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ImporterSectionElement",
          "members": [
            {
              "kind": "method",
              "name": "divContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "footerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "headerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "styleHost",
              "static": true,
              "default": "css`\n    :host {\n      flex-grow: 1;\n      display: flex;\n    }\n  `",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "styleSection",
              "static": true,
              "default": "css`\n    section {\n      flex-grow: 1;\n      overflow: hidden;\n      display: grid;\n      grid-template-rows: var(--header-height) 1fr var(--footer-height);\n      grid-template-columns: 1fr;\n      border: var(--border);\n      border-color: var(--section-back);\n      border-radius: var(--border-radius);\n    }\n  `",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Section",
            "module": "/src/Base/Section.js"
          },
          "tagName": "movie-masher-importer-section",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ImporterSectionElement",
          "declaration": {
            "name": "ImporterSectionElement",
            "module": "src/importer/importer-section.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-importer-section",
          "declaration": {
            "name": "ImporterSectionElement",
            "module": "src/importer/importer-section.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/importer/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./importer-div.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./importer-footer.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./importer-header.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./importer-section.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/inspector/SelectConstants.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "selectorTypeBest",
          "return": {
            "type": {
              "text": "SelectorType"
            }
          },
          "parameters": [
            {
              "name": "selectorType",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "selectorTypes",
              "type": {
                "text": "Strings"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "selectorTypeBest",
          "declaration": {
            "name": "selectorTypeBest",
            "module": "src/inspector/SelectConstants.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/inspector/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./inspector-chooser.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./inspector-content.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./inspector-div.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./inspector-footer.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./inspector-header.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./inspector-section.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./inspector-target.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./SelectConstants.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/inspector/inspector-chooser.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "InspectorChooserName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-inspector-chooser'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "InspectorChooserElement",
          "members": [
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "dispatchChanged",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleInspectorChooser",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "StringEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleInspectorSelectors",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventInspectorSelectors"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "partSelectorTypes",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "SelectorTypes"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "selectedPart",
              "privacy": "protected",
              "type": {
                "text": "string"
              },
              "default": "TypeMash"
            },
            {
              "kind": "field",
              "name": "selectors",
              "privacy": "public",
              "type": {
                "text": "Strings"
              },
              "default": "[]",
              "attribute": "selectors"
            },
            {
              "kind": "field",
              "name": "parts"
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "selectors",
              "type": {
                "text": "Strings"
              },
              "default": "[]",
              "fieldName": "selectors"
            }
          ],
          "superclass": {
            "name": "WithDisablable",
            "module": "src/inspector/inspector-chooser.ts"
          },
          "tagName": "InspectorChooserName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectorChooserElement",
          "declaration": {
            "name": "InspectorChooserElement",
            "module": "src/inspector/inspector-chooser.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "InspectorChooserName",
          "declaration": {
            "name": "InspectorChooserElement",
            "module": "src/inspector/inspector-chooser.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/inspector/inspector-content.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "InspectorContentElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-inspector-content'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "InspectorContentElement",
          "members": [
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "filter",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "filter"
            },
            {
              "kind": "method",
              "name": "handleChangedInspectorSelectors",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedInspectorSelectors"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChangedMashAsset",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedMashAsset"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "selectors",
              "privacy": "public",
              "type": {
                "text": "SelectorTypes"
              },
              "default": "[]",
              "attribute": "selectors"
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "selectors",
              "type": {
                "text": "SelectorTypes"
              },
              "default": "[]",
              "fieldName": "selectors"
            },
            {
              "name": "filter",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "filter"
            }
          ],
          "superclass": {
            "name": "WithDisablable",
            "module": "src/inspector/inspector-content.ts"
          },
          "tagName": "InspectorContentElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectorContentElementName",
          "declaration": {
            "name": "InspectorContentElementName",
            "module": "src/inspector/inspector-content.ts"
          }
        },
        {
          "kind": "js",
          "name": "InspectorContentElement",
          "declaration": {
            "name": "InspectorContentElement",
            "module": "src/inspector/inspector-content.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "InspectorContentElementName",
          "declaration": {
            "name": "InspectorContentElement",
            "module": "src/inspector/inspector-content.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/inspector/inspector-div.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "InspectorDivElement",
          "members": [
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssDivHostBackground",
              "static": true,
              "default": "css`\n    :host {\n      background-color: var(--div-back);\n      color: var(--div-fore);\n    }\n  `",
              "inheritedFrom": {
                "name": "Div",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Div",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-inspector-div",
          "customElement": true,
          "attributes": [
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectorDivElement",
          "declaration": {
            "name": "InspectorDivElement",
            "module": "src/inspector/inspector-div.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-inspector-div",
          "declaration": {
            "name": "InspectorDivElement",
            "module": "src/inspector/inspector-div.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/inspector/inspector-footer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "InspectorFooterElement",
          "members": [
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Footer",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-inspector-footer",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectorFooterElement",
          "declaration": {
            "name": "InspectorFooterElement",
            "module": "src/inspector/inspector-footer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-inspector-footer",
          "declaration": {
            "name": "InspectorFooterElement",
            "module": "src/inspector/inspector-footer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/inspector/inspector-header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "InspectorHeaderElement",
          "members": [
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Header",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-inspector-header",
          "customElement": true,
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectorHeaderElement",
          "declaration": {
            "name": "InspectorHeaderElement",
            "module": "src/inspector/inspector-header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-inspector-header",
          "declaration": {
            "name": "InspectorHeaderElement",
            "module": "src/inspector/inspector-header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/inspector/inspector-section.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "InspectorSectionElement",
          "members": [
            {
              "kind": "method",
              "name": "divContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "footerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "headerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "styleHost",
              "static": true,
              "default": "css`\n    :host {\n      flex-grow: 1;\n      display: flex;\n    }\n  `",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "styleSection",
              "static": true,
              "default": "css`\n    section {\n      flex-grow: 1;\n      overflow: hidden;\n      display: grid;\n      grid-template-rows: var(--header-height) 1fr var(--footer-height);\n      grid-template-columns: 1fr;\n      border: var(--border);\n      border-color: var(--section-back);\n      border-radius: var(--border-radius);\n    }\n  `",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Section",
            "module": "/src/Base/Section.js"
          },
          "tagName": "movie-masher-inspector-section",
          "customElement": true,
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectorSectionElement",
          "declaration": {
            "name": "InspectorSectionElement",
            "module": "src/inspector/inspector-section.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-inspector-section",
          "declaration": {
            "name": "InspectorSectionElement",
            "module": "src/inspector/inspector-section.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/inspector/inspector-target.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "InspectorTargetElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-inspector-target'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "InspectorTargetElement",
          "members": [
            {
              "kind": "method",
              "name": "resetListeners",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "selectedPropertyIds",
              "type": {
                "text": "PropertyIds"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "targetId",
              "privacy": "public",
              "type": {
                "text": "TargetId | undefined"
              },
              "attribute": "target-id"
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "target-id",
              "type": {
                "text": "TargetId | undefined"
              },
              "fieldName": "targetId"
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "ImporterComponent",
            "module": "/src/Base/ImporterComponent.js"
          },
          "tagName": "InspectorTargetElementName",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectorTargetElementName",
          "declaration": {
            "name": "InspectorTargetElementName",
            "module": "src/inspector/inspector-target.ts"
          }
        },
        {
          "kind": "js",
          "name": "InspectorTargetElement",
          "declaration": {
            "name": "InspectorTargetElement",
            "module": "src/inspector/inspector-target.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "InspectorTargetElementName",
          "declaration": {
            "name": "InspectorTargetElement",
            "module": "src/inspector/inspector-target.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/selector/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./selector-div.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./selector-footer.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./selector-header.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./selector-section.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./selector-content.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./selector-asset.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/selector/selector-asset.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "SelectorAssetName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-selector-asset'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "SelectorAssetElement",
          "members": [
            {
              "kind": "field",
              "name": "_asset",
              "type": {
                "text": "ClientAsset | undefined | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "ClientAsset | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "assetId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "assetInitialize",
              "type": {
                "text": "ClientAsset | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "assetObject",
              "privacy": "public",
              "type": {
                "text": "AssetObject | undefined"
              },
              "attribute": "asset-object"
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleChangedAssetObject",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedAssetObject"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_icon",
              "type": {
                "text": "SVGSVGElement | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "SVGSVGElement | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_iconPromise",
              "type": {
                "text": "Promise<void> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "iconPromise",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "iconPromiseInitialize",
              "type": {
                "text": "Promise<void>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "icons",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "kind": "field",
              "name": "labels",
              "privacy": "public",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "kind": "field",
              "name": "onpointerdown"
            },
            {
              "kind": "field",
              "name": "ondragstart"
            },
            {
              "kind": "field",
              "name": "_selected",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "selectedAssetId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "size",
              "privacy": "public",
              "type": {
                "text": "Size | undefined"
              }
            },
            {
              "kind": "field",
              "name": "timeout",
              "type": {
                "text": "Timeout | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleNode",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAssetObjectNode"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "detail",
                  "type": {
                    "text": "EventAssetObjectNodeDetail"
                  }
                }
              ]
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "asset-object",
              "type": {
                "text": "AssetObject | undefined"
              },
              "fieldName": "assetObject"
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Component",
            "module": "/src/Base/Component.js"
          },
          "tagName": "SelectorAssetName",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SelectorAssetName",
          "declaration": {
            "name": "SelectorAssetName",
            "module": "src/selector/selector-asset.ts"
          }
        },
        {
          "kind": "js",
          "name": "SelectorAssetElement",
          "declaration": {
            "name": "SelectorAssetElement",
            "module": "src/selector/selector-asset.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "SelectorAssetName",
          "declaration": {
            "name": "SelectorAssetElement",
            "module": "src/selector/selector-asset.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/selector/selector-content.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SelectorContentElement",
          "members": [
            {
              "kind": "field",
              "name": "assetObjectsFetched",
              "type": {
                "text": "AssetObjects"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "assetObjectsImported",
              "privacy": "protected",
              "type": {
                "text": "AssetObjects"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "assetObjectsCombined",
              "type": {
                "text": "AssetObjects"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "assetObjectsPromise",
              "type": {
                "text": "Promise<DataOrError<AssetObjects>> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "assetObjectsPromiseRefresh",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "assetType",
              "privacy": "public",
              "type": {
                "text": "AssetType | undefined"
              },
              "attribute": "assetType"
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleAssetObjectFromId",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "AssetObjectFromIdEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleAssetType",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<AssetType>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChangedSize",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedSize"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleImportAssetObjects",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "ImportAssetObjectsEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSourceType",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<Source>"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "size",
              "privacy": "public",
              "type": {
                "text": "Size | undefined"
              }
            },
            {
              "kind": "field",
              "name": "sourceType",
              "privacy": "public",
              "type": {
                "text": "Source | undefined"
              },
              "attribute": "sourceType"
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            },
            {
              "kind": "method",
              "name": "handleScrollRoot",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "ScrollRootEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Scroller",
                "module": "src/Base/Scroller.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssDivDropping",
              "static": true,
              "default": "css`\n    div.drop-box {\n      top: 0;\n      left: 0;\n      pointer-events: none;\n      color: transparent;\n      right: 0px;\n      bottom: 0px;\n      position: absolute;\n      display: block;\n    }\n\n    :host(.dropping) div.drop-box {\n      box-shadow: var(--dropping-shadow);\n    }\n  `",
              "inheritedFrom": {
                "name": "Scroller",
                "module": "src/Base/Scroller.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssDivRoot",
              "static": true,
              "default": "css`\n    div.root {\n      padding: 0px;\n      flex-grow: 1;\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "Scroller",
                "module": "src/Base/Scroller.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "assetType",
              "type": {
                "text": "AssetType | undefined"
              },
              "fieldName": "assetType"
            },
            {
              "name": "sourceType",
              "type": {
                "text": "Source | undefined"
              },
              "fieldName": "sourceType"
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Scroller",
            "module": "/src/Base/Scroller.js"
          },
          "tagName": "movie-masher-selector-content",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SelectorContentElement",
          "declaration": {
            "name": "SelectorContentElement",
            "module": "src/selector/selector-content.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-selector-content",
          "declaration": {
            "name": "SelectorContentElement",
            "module": "src/selector/selector-content.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/selector/selector-div.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SelectorDivElement",
          "members": [
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssDivHostBackground",
              "static": true,
              "default": "css`\n    :host {\n      background-color: var(--div-back);\n      color: var(--div-fore);\n    }\n  `",
              "inheritedFrom": {
                "name": "Div",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Div",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-selector-div",
          "customElement": true,
          "attributes": [
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SelectorDivElement",
          "declaration": {
            "name": "SelectorDivElement",
            "module": "src/selector/selector-div.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-selector-div",
          "declaration": {
            "name": "SelectorDivElement",
            "module": "src/selector/selector-div.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/selector/selector-footer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SelectorFooterElement",
          "members": [
            {
              "kind": "field",
              "name": "assetType",
              "privacy": "public",
              "type": {
                "text": "AssetType | undefined"
              },
              "attribute": "assetType"
            },
            {
              "kind": "method",
              "name": "handleAssetType",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<AssetType>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "assetType",
              "type": {
                "text": "AssetType | undefined"
              },
              "fieldName": "assetType"
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Footer",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-selector-footer",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SelectorFooterElement",
          "declaration": {
            "name": "SelectorFooterElement",
            "module": "src/selector/selector-footer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-selector-footer",
          "declaration": {
            "name": "SelectorFooterElement",
            "module": "src/selector/selector-footer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/selector/selector-header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SelectorHeaderElement",
          "superclass": {
            "name": "Header",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-selector-header",
          "customElement": true,
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SelectorHeaderElement",
          "declaration": {
            "name": "SelectorHeaderElement",
            "module": "src/selector/selector-header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-selector-header",
          "declaration": {
            "name": "SelectorHeaderElement",
            "module": "src/selector/selector-header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/selector/selector-section.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SelectorSectionElement",
          "members": [
            {
              "kind": "method",
              "name": "divContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "footerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "headerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "styleHost",
              "static": true,
              "default": "css`\n    :host {\n      flex-grow: 1;\n      display: flex;\n    }\n  `",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "styleSection",
              "static": true,
              "default": "css`\n    section {\n      flex-grow: 1;\n      overflow: hidden;\n      display: grid;\n      grid-template-rows: var(--header-height) 1fr var(--footer-height);\n      grid-template-columns: 1fr;\n      border: var(--border);\n      border-color: var(--section-back);\n      border-radius: var(--border-radius);\n    }\n  `",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Section",
            "module": "/src/Base/Section.js"
          },
          "tagName": "movie-masher-selector-section",
          "customElement": true,
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SelectorSectionElement",
          "declaration": {
            "name": "SelectorSectionElement",
            "module": "src/selector/selector-section.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-selector-section",
          "declaration": {
            "name": "SelectorSectionElement",
            "module": "src/selector/selector-section.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utility/ClientAssetManagerClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClientAssetManagerClass",
          "members": [
            {
              "kind": "method",
              "name": "asset",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "ClientAsset"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "AssetObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "byType",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "ClientAssets"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "AssetType"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "context",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "'client'"
            },
            {
              "kind": "method",
              "name": "define",
              "return": {
                "type": {
                  "text": "ClientAsset"
                }
              },
              "parameters": [
                {
                  "name": "media",
                  "type": {
                    "text": "string | AssetObject"
                  }
                },
                {
                  "name": "manageType",
                  "optional": true,
                  "type": {
                    "text": "ManageType"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "fromId",
              "return": {
                "type": {
                  "text": "ClientAsset"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "install",
              "return": {
                "type": {
                  "text": "ClientAssets"
                }
              },
              "parameters": [
                {
                  "name": "media",
                  "type": {
                    "text": "ClientAsset | ClientAssets"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleManagedAsset",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventManagedAsset"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleManagedAssetIcon",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventManagedAssetIcon"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleManagedAssetId",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventManagedAssetId"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleManagedAssetScalar",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventManagedAssetScalar"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleReleaseAssets",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventReleaseManagedAssets"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_instance",
              "type": {
                "text": "ClientAssetManagerClass | undefined"
              },
              "privacy": "private",
              "static": true
            },
            {
              "kind": "field",
              "name": "instance",
              "type": {
                "text": "ClientAssetManagerClass"
              },
              "static": true
            }
          ],
          "superclass": {
            "name": "AssetManagerClass",
            "package": "@moviemasher/runtime-shared"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientAssetManagerClass",
          "declaration": {
            "name": "ClientAssetManagerClass",
            "module": "src/utility/ClientAssetManagerClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utility/draganddrop.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "TransferTypeFiles",
          "type": {
            "text": "string"
          },
          "default": "'Files'"
        },
        {
          "kind": "function",
          "name": "isTransferType",
          "return": {
            "type": {
              "text": "value is TransferType"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "dropType",
          "return": {
            "type": {
              "text": "TransferType | undefined"
            }
          },
          "parameters": [
            {
              "name": "dataTransfer",
              "optional": true,
              "type": {
                "text": "DataTransfer | null"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "dragType",
          "return": {
            "type": {
              "text": "AssetType | undefined"
            }
          },
          "parameters": [
            {
              "name": "dataTransfer",
              "optional": true,
              "type": {
                "text": "DataTransfer | null"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "dragTypes",
          "return": {
            "type": {
              "text": "Strings"
            }
          },
          "parameters": [
            {
              "name": "dataTransfer",
              "optional": true,
              "type": {
                "text": "DataTransfer | null"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "dragTypeValid",
          "return": {
            "type": {
              "text": "dataTransfer is DataTransfer"
            }
          },
          "parameters": [
            {
              "name": "dataTransfer",
              "optional": true,
              "type": {
                "text": "DataTransfer | null"
              }
            },
            {
              "name": "allowClip",
              "default": "false"
            }
          ]
        },
        {
          "kind": "function",
          "name": "dragData",
          "parameters": [
            {
              "name": "dataTransfer",
              "optional": true,
              "type": {
                "text": "DataTransfer"
              }
            },
            {
              "name": "type",
              "optional": true,
              "type": {
                "text": "TransferType"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "DragElementRect",
          "return": {
            "type": {
              "text": "Rect"
            }
          },
          "parameters": [
            {
              "name": "current",
              "type": {
                "text": "Element"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "DragElementPoint",
          "return": {
            "type": {
              "text": "Point"
            }
          },
          "parameters": [
            {
              "name": "event",
              "type": {
                "text": "DragEvent"
              }
            },
            {
              "name": "current",
              "type": {
                "text": "Element | Rect"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "dropFiles",
          "parameters": [
            {
              "name": "fileList",
              "type": {
                "text": "FileList"
              }
            },
            {
              "name": "mashIndex",
              "optional": true,
              "type": {
                "text": "MashIndex"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "dropAssetObjects",
          "parameters": [
            {
              "name": "assetObjects",
              "type": {
                "text": "AssetObjects"
              }
            },
            {
              "name": "mashIndex",
              "optional": true,
              "type": {
                "text": "MashIndex"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "dropDraggable",
          "parameters": [
            {
              "name": "draggable",
              "type": {
                "text": "Draggable"
              }
            },
            {
              "name": "editorIndex",
              "optional": true,
              "type": {
                "text": "MashIndex"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "droppingFiles",
          "parameters": [
            {
              "name": "dataTransfer",
              "optional": true,
              "type": {
                "text": "DataTransfer"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "droppedMashIndex",
          "return": {
            "type": {
              "text": "MashIndex"
            }
          },
          "parameters": [
            {
              "name": "dataTransfer",
              "type": {
                "text": "DataTransfer"
              }
            },
            {
              "name": "trackIndex",
              "default": "-1"
            },
            {
              "name": "scale",
              "default": "0"
            },
            {
              "name": "offsetDrop",
              "default": "0"
            },
            {
              "name": "clipId",
              "default": "''"
            }
          ]
        },
        {
          "kind": "function",
          "name": "dropped",
          "parameters": [
            {
              "name": "event",
              "type": {
                "text": "DragEvent"
              }
            },
            {
              "name": "mashIndex",
              "optional": true,
              "type": {
                "text": "MashIndex"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TransferTypeFiles",
          "declaration": {
            "name": "TransferTypeFiles",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "isTransferType",
          "declaration": {
            "name": "isTransferType",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "dropType",
          "declaration": {
            "name": "dropType",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "dragType",
          "declaration": {
            "name": "dragType",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "dragTypes",
          "declaration": {
            "name": "dragTypes",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "dragTypeValid",
          "declaration": {
            "name": "dragTypeValid",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "dragData",
          "declaration": {
            "name": "dragData",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "DragElementRect",
          "declaration": {
            "name": "DragElementRect",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "DragElementPoint",
          "declaration": {
            "name": "DragElementPoint",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "dropFiles",
          "declaration": {
            "name": "dropFiles",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "dropAssetObjects",
          "declaration": {
            "name": "dropAssetObjects",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "dropDraggable",
          "declaration": {
            "name": "dropDraggable",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "droppingFiles",
          "declaration": {
            "name": "droppingFiles",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "droppedMashIndex",
          "declaration": {
            "name": "droppedMashIndex",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "dropped",
          "declaration": {
            "name": "dropped",
            "module": "src/utility/draganddrop.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utility/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./pixel.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./request.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./draganddrop.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ClientAssetManagerClass.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utility/pixel.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "pixelPerFrame",
          "return": {
            "type": {
              "text": "number"
            }
          },
          "parameters": [
            {
              "name": "frames",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "width",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "zoom",
              "default": "1"
            }
          ]
        },
        {
          "kind": "function",
          "name": "pixelFromFrame",
          "return": {
            "type": {
              "text": "number"
            }
          },
          "parameters": [
            {
              "name": "frame",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "perFrame",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "rounding",
              "default": "'ceil'"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pixelPerFrame",
          "declaration": {
            "name": "pixelPerFrame",
            "module": "src/utility/pixel.ts"
          }
        },
        {
          "kind": "js",
          "name": "pixelFromFrame",
          "declaration": {
            "name": "pixelFromFrame",
            "module": "src/utility/pixel.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utility/request.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "requestPopulate",
          "return": {
            "type": {
              "text": "EndpointRequest"
            }
          },
          "parameters": [
            {
              "name": "request",
              "type": {
                "text": "EndpointRequest"
              }
            },
            {
              "name": "params",
              "optional": true,
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "requestJsonRecordPromise",
          "return": {
            "type": {
              "text": "Promise<JsonRecordDataOrError>"
            }
          },
          "parameters": [
            {
              "name": "request",
              "type": {
                "text": "EndpointRequest"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "requestJsonRecordsPromise",
          "return": {
            "type": {
              "text": "Promise<JsonRecordsDataOrError>"
            }
          },
          "parameters": [
            {
              "name": "request",
              "type": {
                "text": "EndpointRequest"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "requestPopulate",
          "declaration": {
            "name": "requestPopulate",
            "module": "src/utility/request.ts"
          }
        },
        {
          "kind": "js",
          "name": "requestJsonRecordPromise",
          "declaration": {
            "name": "requestJsonRecordPromise",
            "module": "src/utility/request.ts"
          }
        },
        {
          "kind": "js",
          "name": "requestJsonRecordsPromise",
          "declaration": {
            "name": "requestJsonRecordsPromise",
            "module": "src/utility/request.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/viewer/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./viewer-div.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./viewer-footer.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./viewer-header.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./viewer-content.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./viewer-section.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./viewer-slider.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/viewer/viewer-content.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ViewerContentElement",
          "members": [
            {
              "kind": "field",
              "name": "acceptsClip",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "handleChangedPreviewItems",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handlePointerDown",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleRect",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventRect"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleResize"
            },
            {
              "kind": "field",
              "name": "point",
              "privacy": "public",
              "type": {
                "text": "Point | undefined"
              }
            },
            {
              "kind": "method",
              "name": "requestItemsPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "field",
              "name": "watchingRedraw",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "watchingTimeout",
              "type": {
                "text": "Timeout | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "attribute": ""
            }
          ],
          "superclass": {
            "name": "WithSizeReactive",
            "module": "src/viewer/viewer-content.ts"
          },
          "tagName": "movie-masher-viewer-content",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ViewerContentElement",
          "declaration": {
            "name": "ViewerContentElement",
            "module": "src/viewer/viewer-content.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-viewer-content",
          "declaration": {
            "name": "ViewerContentElement",
            "module": "src/viewer/viewer-content.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/viewer/viewer-div.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ViewerDivElement",
          "members": [
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssDivHostBackground",
              "static": true,
              "default": "css`\n    :host {\n      background-color: var(--div-back);\n      color: var(--div-fore);\n    }\n  `",
              "inheritedFrom": {
                "name": "Div",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Div",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-viewer-div",
          "customElement": true,
          "attributes": [
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ViewerDivElement",
          "declaration": {
            "name": "ViewerDivElement",
            "module": "src/viewer/viewer-div.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-viewer-div",
          "declaration": {
            "name": "ViewerDivElement",
            "module": "src/viewer/viewer-div.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/viewer/viewer-footer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ViewerFooterElement",
          "members": [
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Footer",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-viewer-footer",
          "customElement": true,
          "attributes": [
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ViewerFooterElement",
          "declaration": {
            "name": "ViewerFooterElement",
            "module": "src/viewer/viewer-footer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-viewer-footer",
          "declaration": {
            "name": "ViewerFooterElement",
            "module": "src/viewer/viewer-footer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/viewer/viewer-header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ViewerHeaderElement",
          "members": [
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Header",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-viewer-header",
          "customElement": true,
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ViewerHeaderElement",
          "declaration": {
            "name": "ViewerHeaderElement",
            "module": "src/viewer/viewer-header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-viewer-header",
          "declaration": {
            "name": "ViewerHeaderElement",
            "module": "src/viewer/viewer-header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/viewer/viewer-section.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ViewerSectionElement",
          "members": [
            {
              "kind": "method",
              "name": "divContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "footerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "headerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "styleHost",
              "static": true,
              "default": "css`\n    :host {\n      flex-grow: 1;\n      display: flex;\n    }\n  `",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "styleSection",
              "static": true,
              "default": "css`\n    section {\n      flex-grow: 1;\n      overflow: hidden;\n      display: grid;\n      grid-template-rows: var(--header-height) 1fr var(--footer-height);\n      grid-template-columns: 1fr;\n      border: var(--border);\n      border-color: var(--section-back);\n      border-radius: var(--border-radius);\n    }\n  `",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Section",
            "module": "/src/Base/Section.js"
          },
          "tagName": "movie-masher-viewer-section",
          "customElement": true,
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ViewerSectionElement",
          "declaration": {
            "name": "ViewerSectionElement",
            "module": "src/viewer/viewer-section.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-viewer-section",
          "declaration": {
            "name": "ViewerSectionElement",
            "module": "src/viewer/viewer-section.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/viewer/viewer-slider.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ViewerSliderElement",
          "members": [
            {
              "kind": "field",
              "name": "frame",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "frame"
            },
            {
              "kind": "field",
              "name": "frames",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "frames"
            },
            {
              "kind": "method",
              "name": "handleDuration",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "NumberEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleFrame",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedFrame"
                  }
                }
              ]
            },
            {
              "kind": "field"
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "frame",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "frame"
            },
            {
              "name": "frames",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "frames"
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Component",
            "module": "/src/Base/Component"
          },
          "tagName": "movie-masher-viewer-slider",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ViewerSliderElement",
          "declaration": {
            "name": "ViewerSliderElement",
            "module": "src/viewer/viewer-slider.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-viewer-slider",
          "declaration": {
            "name": "ViewerSliderElement",
            "module": "src/viewer/viewer-slider.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-client/Client/LocalClient.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "DefaultClientLimits",
          "type": {
            "text": "ClientLimits"
          },
          "default": "{\n  [TypeAudio]: 50,\n  // [TypeEffect]: 1,\n  // [TypeMash]: 5,\n  [TypeFont]: 10,\n  [TypeImage]: 20,\n  [TypeVideo]: 100,\n}"
        },
        {
          "kind": "variable",
          "name": "DefaultClientImportArgs",
          "type": {
            "text": "ClientImportArgs"
          },
          "default": "{\n  uploadLimits: DefaultClientLimits,\n}"
        },
        {
          "kind": "variable",
          "name": "DefaultClientPluginArgs",
          "type": {
            "text": "ClientPluginArgs"
          },
          "default": "{\n  request: { endpoint: {} },\n}"
        },
        {
          "kind": "variable",
          "name": "OperationImport",
          "type": {
            "text": "ImportOperation"
          },
          "default": "'import'"
        },
        {
          "kind": "variable",
          "name": "OperationPlugin",
          "type": {
            "text": "PluginOperation"
          },
          "default": "'plugin'"
        },
        {
          "kind": "variable",
          "name": "OperationRead",
          "type": {
            "text": "ReadOperation"
          },
          "default": "'read'"
        },
        {
          "kind": "variable",
          "name": "OperationsLocal",
          "type": {
            "text": "LocalOperations"
          },
          "default": "[\n  OperationImport,\n  OperationPlugin,\n  OperationRead,\n]"
        },
        {
          "kind": "function",
          "name": "isLocalOperation",
          "return": {
            "type": {
              "text": "value is LocalOperation"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "DefaultClientReadArgs",
          "type": {
            "text": "ClientReadArgs"
          },
          "default": "{\n  paramPosition: 'search',\n  getRequest: { endpoint: { pathname: 'data/definition/get' } },\n  listRequest: { endpoint: { pathname: 'data/definition/retrieve' } },\n}"
        },
        {
          "kind": "variable",
          "name": "DefaultLocalClientArgs",
          "type": {
            "text": "LocalClientArgs"
          },
          "default": "{\n  translationSource: '',\n  iconSource: '',\n  [OperationImport]: DefaultClientImportArgs,\n  [OperationPlugin]: DefaultClientPluginArgs,\n  [OperationRead]: DefaultClientReadArgs,\n}"
        },
        {
          "kind": "variable",
          "name": "LocalClientDisabledArgs",
          "type": {
            "text": "LocalClientArgs"
          },
          "default": "{\n  ...DefaultLocalClientArgs,\n  [OperationRead]: false,\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DefaultClientLimits",
          "declaration": {
            "name": "DefaultClientLimits",
            "module": "client-deleted/src-client/Client/LocalClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "DefaultClientImportArgs",
          "declaration": {
            "name": "DefaultClientImportArgs",
            "module": "client-deleted/src-client/Client/LocalClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "DefaultClientPluginArgs",
          "declaration": {
            "name": "DefaultClientPluginArgs",
            "module": "client-deleted/src-client/Client/LocalClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "OperationImport",
          "declaration": {
            "name": "OperationImport",
            "module": "client-deleted/src-client/Client/LocalClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "OperationPlugin",
          "declaration": {
            "name": "OperationPlugin",
            "module": "client-deleted/src-client/Client/LocalClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "OperationRead",
          "declaration": {
            "name": "OperationRead",
            "module": "client-deleted/src-client/Client/LocalClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "OperationsLocal",
          "declaration": {
            "name": "OperationsLocal",
            "module": "client-deleted/src-client/Client/LocalClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "isLocalOperation",
          "declaration": {
            "name": "isLocalOperation",
            "module": "client-deleted/src-client/Client/LocalClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "DefaultClientReadArgs",
          "declaration": {
            "name": "DefaultClientReadArgs",
            "module": "client-deleted/src-client/Client/LocalClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "DefaultLocalClientArgs",
          "declaration": {
            "name": "DefaultLocalClientArgs",
            "module": "client-deleted/src-client/Client/LocalClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "LocalClientDisabledArgs",
          "declaration": {
            "name": "LocalClientDisabledArgs",
            "module": "client-deleted/src-client/Client/LocalClient.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-client/Client/LocalClientClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LocalClientClass",
          "members": [
            {
              "kind": "field",
              "name": "args",
              "type": {
                "text": "LocalClientArgs"
              }
            },
            {
              "kind": "method",
              "name": "enabled",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "operation",
                  "optional": true,
                  "type": {
                    "text": "LocalOperation | LocalOperations"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "eventTarget",
              "default": "new Emitter()"
            },
            {
              "kind": "field",
              "name": "fileAccept",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "fileSizeError",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "PotentialError"
                }
              },
              "parameters": [
                {
                  "name": "file",
                  "type": {
                    "text": "File"
                  }
                },
                {
                  "name": "uploadLimits",
                  "type": {
                    "text": "ClientLimits"
                  }
                },
                {
                  "name": "type",
                  "type": {
                    "text": "UploadType"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "fileMedia",
              "return": {
                "type": {
                  "text": "Promise<MediaDataOrError>"
                }
              },
              "parameters": [
                {
                  "name": "file",
                  "type": {
                    "text": "File"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get",
              "return": {
                "type": {
                  "text": "Promise<MediaDataOrError>"
                }
              },
              "parameters": [
                {
                  "name": "params",
                  "type": {
                    "text": "ClientReadParams"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "iconRecordPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<DataOrError<NestedStringRecord>>"
                }
              }
            },
            {
              "kind": "field",
              "name": "iconRecord",
              "type": {
                "text": "DataOrError<NestedStringRecord> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "iconLookup",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "TranslateArgs"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "iconPromise",
              "return": {
                "type": {
                  "text": "Promise<Icon>"
                }
              },
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "TranslateArgs"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "translationPromise",
              "return": {
                "type": {
                  "text": "Promise<Translation>"
                }
              },
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "TranslateArgs"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "list",
              "return": {
                "type": {
                  "text": "Promise<MediaDataArrayOrError>"
                }
              },
              "parameters": [
                {
                  "name": "params",
                  "type": {
                    "text": "ClientReadParams"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "masher",
              "return": {
                "type": {
                  "text": "Masher"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "default": "{}",
                  "type": {
                    "text": "MasherOptions"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "plugin",
              "type": {
                "text": "PluginDataOrErrorFunction"
              },
              "default": "pluginDataOrError"
            },
            {
              "kind": "field",
              "name": "pluginPromise",
              "type": {
                "text": "PluginDataOrErrorPromiseFunction"
              },
              "default": "pluginDataOrErrorPromise"
            },
            {
              "kind": "field",
              "name": "_localClientArgs",
              "type": {
                "text": "LocalClientArgs | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "localClientArgs",
              "type": {
                "text": "LocalClientArgs"
              },
              "privacy": "private"
            }
          ]
        },
        {
          "kind": "function",
          "name": "localClientArgs",
          "return": {
            "type": {
              "text": "LocalClientArgs"
            }
          },
          "parameters": [
            {
              "name": "options",
              "default": "{}",
              "type": {
                "text": "LocalClientOptions"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "localClientInstance",
          "return": {
            "type": {
              "text": "LocalClient"
            }
          },
          "parameters": [
            {
              "name": "args",
              "default": "{}",
              "type": {
                "text": "LocalClientOptions"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LocalClientClass",
          "declaration": {
            "name": "LocalClientClass",
            "module": "client-deleted/src-client/Client/LocalClientClass.ts"
          }
        },
        {
          "kind": "js",
          "name": "localClientArgs",
          "declaration": {
            "name": "localClientArgs",
            "module": "client-deleted/src-client/Client/LocalClientClass.ts"
          }
        },
        {
          "kind": "js",
          "name": "localClientInstance",
          "declaration": {
            "name": "localClientInstance",
            "module": "client-deleted/src-client/Client/LocalClientClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-client/Client/RemoteClient.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "OperationDecode",
          "type": {
            "text": "DecodeOperation"
          },
          "default": "'decode'"
        },
        {
          "kind": "variable",
          "name": "OperationEncode",
          "type": {
            "text": "EncodeOperation"
          },
          "default": "'encode'"
        },
        {
          "kind": "variable",
          "name": "OperationTranscode",
          "type": {
            "text": "TranscodeOperation"
          },
          "default": "'transcode'"
        },
        {
          "kind": "variable",
          "name": "OperationUpload",
          "type": {
            "text": "UploadOperation"
          },
          "default": "'upload'"
        },
        {
          "kind": "variable",
          "name": "OperationWrite",
          "type": {
            "text": "WriteOperation"
          },
          "default": "'write'"
        },
        {
          "kind": "variable",
          "name": "OperationsRemote",
          "type": {
            "text": "RemoteOperations"
          },
          "default": "[\n  OperationDecode,\n  OperationEncode, \n  OperationTranscode, \n  OperationUpload,\n  OperationWrite, \n]"
        },
        {
          "kind": "function",
          "name": "isRemoteOperation",
          "return": {
            "type": {
              "text": "value is RemoteOperation"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "DefaultClientUploadArgs",
          "type": {
            "text": "ClientUploadArgs"
          },
          "default": "{\n  uploadRequest: { endpoint: { pathname: 'data/definition/retrieve' } },\n  uploadResponseIsRequest: true,\n}"
        },
        {
          "kind": "variable",
          "name": "DefaultClientWriteArgs",
          "type": {
            "text": "ClientWriteArgs"
          },
          "default": "{\n  saveRequest: { endpoint: { pathname: 'data/definition/put'} }, \n  deleteRequest: { endpoint: { pathname: 'data/definition/delete' } }, \n}"
        },
        {
          "kind": "variable",
          "name": "DefaultClientDecodeArgs",
          "type": {
            "text": "ClientDecodeArgs"
          },
          "default": "{\n  autoDecode: {\n    [TypeAudio]: [{ \n      type: TypeProbe, \n      options: { types: [ProbeDuration] }\n    }],\n    [TypeImage]: [{ \n      type: TypeProbe, \n      options: { types: [ProbeAlpha, ProbeSize] }\n    }],\n    [TypeVideo]: [{ \n      type: TypeProbe, \n      options: { \n        types: [\n          ProbeDuration, ProbeSize, \n          ProbeAlpha, ProbeAudible \n        ] \n      }\n    }],\n  },\n}"
        },
        {
          "kind": "variable",
          "name": "DefaultClientEncodeArgs",
          "type": {
            "text": "ClientEncodeArgs"
          },
          "default": "{\n  autoEncode: {}\n}"
        },
        {
          "kind": "variable",
          "name": "DefaultClientTranscodeArgs",
          "type": {
            "text": "ClientTranscodeArgs"
          },
          "default": "{\n  autoTranscode: {\n    [TypeAudio]: [\n      { type: TypeAudio, options: {} }\n    ],\n  },\n}"
        },
        {
          "kind": "variable",
          "name": "RemoteClientDisabledArgs",
          "type": {
            "text": "RemoteClientArgs"
          },
          "default": "{\n  ...LocalClientDisabledArgs,\n  [OperationDecode]: false,\n  [OperationEncode]: false,\n  [OperationTranscode]: false,\n  [OperationUpload]: false,\n  [OperationWrite]: false,\n}"
        },
        {
          "kind": "variable",
          "name": "DefaultRemoteClientArgs",
          "type": {
            "text": "RemoteClientArgs"
          },
          "default": "{\n  ...DefaultLocalClientArgs,\n  [OperationDecode]: DefaultClientDecodeArgs,\n  [OperationEncode]: DefaultClientEncodeArgs,\n  [OperationTranscode]: DefaultClientTranscodeArgs,\n  [OperationUpload]: DefaultClientUploadArgs,\n  [OperationWrite]: DefaultClientWriteArgs,\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OperationDecode",
          "declaration": {
            "name": "OperationDecode",
            "module": "client-deleted/src-client/Client/RemoteClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "OperationEncode",
          "declaration": {
            "name": "OperationEncode",
            "module": "client-deleted/src-client/Client/RemoteClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "OperationTranscode",
          "declaration": {
            "name": "OperationTranscode",
            "module": "client-deleted/src-client/Client/RemoteClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "OperationUpload",
          "declaration": {
            "name": "OperationUpload",
            "module": "client-deleted/src-client/Client/RemoteClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "OperationWrite",
          "declaration": {
            "name": "OperationWrite",
            "module": "client-deleted/src-client/Client/RemoteClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "OperationsRemote",
          "declaration": {
            "name": "OperationsRemote",
            "module": "client-deleted/src-client/Client/RemoteClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "isRemoteOperation",
          "declaration": {
            "name": "isRemoteOperation",
            "module": "client-deleted/src-client/Client/RemoteClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "DefaultClientUploadArgs",
          "declaration": {
            "name": "DefaultClientUploadArgs",
            "module": "client-deleted/src-client/Client/RemoteClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "DefaultClientWriteArgs",
          "declaration": {
            "name": "DefaultClientWriteArgs",
            "module": "client-deleted/src-client/Client/RemoteClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "DefaultClientDecodeArgs",
          "declaration": {
            "name": "DefaultClientDecodeArgs",
            "module": "client-deleted/src-client/Client/RemoteClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "DefaultClientEncodeArgs",
          "declaration": {
            "name": "DefaultClientEncodeArgs",
            "module": "client-deleted/src-client/Client/RemoteClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "DefaultClientTranscodeArgs",
          "declaration": {
            "name": "DefaultClientTranscodeArgs",
            "module": "client-deleted/src-client/Client/RemoteClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "RemoteClientDisabledArgs",
          "declaration": {
            "name": "RemoteClientDisabledArgs",
            "module": "client-deleted/src-client/Client/RemoteClient.ts"
          }
        },
        {
          "kind": "js",
          "name": "DefaultRemoteClientArgs",
          "declaration": {
            "name": "DefaultRemoteClientArgs",
            "module": "client-deleted/src-client/Client/RemoteClient.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-client/Client/RemoteClientClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "RemoteClientClass",
          "members": [
            {
              "kind": "field",
              "name": "args",
              "type": {
                "text": "LocalClientArgs"
              },
              "inheritedFrom": {
                "name": "LocalClientClass",
                "module": "client-deleted/src-client/Client/LocalClientClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "_remoteClientArgs",
              "type": {
                "text": "RemoteClientArgs | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "remoteClientArgs",
              "type": {
                "text": "RemoteClientArgs"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "decode",
              "return": {
                "type": {
                  "text": "Promise<Decoding>"
                }
              },
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "ClientDecodeMethodArgs"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "enabled",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "operation",
                  "optional": true,
                  "type": {
                    "text": "Operation | Operations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LocalClientClass",
                "module": "client-deleted/src-client/Client/LocalClientClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "encode",
              "return": {
                "type": {
                  "text": "Promise<Encoding>"
                }
              },
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "ClientEncodeMethodArgs"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "save",
              "return": {
                "type": {
                  "text": "Promise<MediaDataOrError>"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "type": {
                    "text": "ClientSaveMethodArgs"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "saveAutoDecodings",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<MediaDataOrError>"
                }
              },
              "parameters": [
                {
                  "name": "media",
                  "type": {
                    "text": "Media"
                  }
                },
                {
                  "name": "steps",
                  "type": {
                    "text": "ClientProgessSteps"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "saveAutoTranscodings",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<MediaDataOrError>"
                }
              },
              "parameters": [
                {
                  "name": "media",
                  "type": {
                    "text": "Media"
                  }
                },
                {
                  "name": "steps",
                  "type": {
                    "text": "ClientProgessSteps"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "saveMedia",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<MediaDataOrError>"
                }
              },
              "parameters": [
                {
                  "name": "media",
                  "type": {
                    "text": "Media"
                  }
                },
                {
                  "name": "steps",
                  "type": {
                    "text": "ClientProgessSteps"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "saveMediaRow",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<MediaDataOrError>"
                }
              },
              "parameters": [
                {
                  "name": "media",
                  "type": {
                    "text": "Media"
                  }
                },
                {
                  "name": "steps",
                  "type": {
                    "text": "ClientProgessSteps"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "saveMedias",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<MediaDataOrError>"
                }
              },
              "parameters": [
                {
                  "name": "mediaArray",
                  "type": {
                    "text": "MediaArray"
                  }
                },
                {
                  "name": "steps",
                  "type": {
                    "text": "ClientProgessSteps"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "saveUpload",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<MediaDataOrError>"
                }
              },
              "parameters": [
                {
                  "name": "media",
                  "type": {
                    "text": "Media"
                  }
                },
                {
                  "name": "steps",
                  "type": {
                    "text": "ClientProgessSteps"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "transcode",
              "return": {
                "type": {
                  "text": "Promise<Transcoding>"
                }
              },
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "ClientTranscodeMethodArgs"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "upload",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<MediaDataOrError>"
                }
              },
              "parameters": [
                {
                  "name": "media",
                  "type": {
                    "text": "Media"
                  }
                },
                {
                  "name": "steps",
                  "type": {
                    "text": "ClientProgessSteps"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "eventTarget",
              "default": "new Emitter()",
              "inheritedFrom": {
                "name": "LocalClientClass",
                "module": "client-deleted/src-client/Client/LocalClientClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "fileAccept",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "LocalClientClass",
                "module": "client-deleted/src-client/Client/LocalClientClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "fileSizeError",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "PotentialError"
                }
              },
              "parameters": [
                {
                  "name": "file",
                  "type": {
                    "text": "File"
                  }
                },
                {
                  "name": "uploadLimits",
                  "type": {
                    "text": "ClientLimits"
                  }
                },
                {
                  "name": "type",
                  "type": {
                    "text": "UploadType"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LocalClientClass",
                "module": "client-deleted/src-client/Client/LocalClientClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "fileMedia",
              "return": {
                "type": {
                  "text": "Promise<MediaDataOrError>"
                }
              },
              "parameters": [
                {
                  "name": "file",
                  "type": {
                    "text": "File"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LocalClientClass",
                "module": "client-deleted/src-client/Client/LocalClientClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "get",
              "return": {
                "type": {
                  "text": "Promise<MediaDataOrError>"
                }
              },
              "parameters": [
                {
                  "name": "params",
                  "type": {
                    "text": "ClientReadParams"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LocalClientClass",
                "module": "client-deleted/src-client/Client/LocalClientClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "iconRecordPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<DataOrError<NestedStringRecord>>"
                }
              },
              "inheritedFrom": {
                "name": "LocalClientClass",
                "module": "client-deleted/src-client/Client/LocalClientClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "iconRecord",
              "type": {
                "text": "DataOrError<NestedStringRecord> | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "LocalClientClass",
                "module": "client-deleted/src-client/Client/LocalClientClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "iconLookup",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "TranslateArgs"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LocalClientClass",
                "module": "client-deleted/src-client/Client/LocalClientClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "iconPromise",
              "return": {
                "type": {
                  "text": "Promise<Icon>"
                }
              },
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "TranslateArgs"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LocalClientClass",
                "module": "client-deleted/src-client/Client/LocalClientClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "translationPromise",
              "return": {
                "type": {
                  "text": "Promise<Translation>"
                }
              },
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "TranslateArgs"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LocalClientClass",
                "module": "client-deleted/src-client/Client/LocalClientClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "list",
              "return": {
                "type": {
                  "text": "Promise<MediaDataArrayOrError>"
                }
              },
              "parameters": [
                {
                  "name": "params",
                  "type": {
                    "text": "ClientReadParams"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LocalClientClass",
                "module": "client-deleted/src-client/Client/LocalClientClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "masher",
              "return": {
                "type": {
                  "text": "Masher"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "default": "{}",
                  "type": {
                    "text": "MasherOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LocalClientClass",
                "module": "client-deleted/src-client/Client/LocalClientClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "plugin",
              "type": {
                "text": "PluginDataOrErrorFunction"
              },
              "default": "pluginDataOrError",
              "inheritedFrom": {
                "name": "LocalClientClass",
                "module": "client-deleted/src-client/Client/LocalClientClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "pluginPromise",
              "type": {
                "text": "PluginDataOrErrorPromiseFunction"
              },
              "default": "pluginDataOrErrorPromise",
              "inheritedFrom": {
                "name": "LocalClientClass",
                "module": "client-deleted/src-client/Client/LocalClientClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "_localClientArgs",
              "type": {
                "text": "LocalClientArgs | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "LocalClientClass",
                "module": "client-deleted/src-client/Client/LocalClientClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "localClientArgs",
              "type": {
                "text": "LocalClientArgs"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "LocalClientClass",
                "module": "client-deleted/src-client/Client/LocalClientClass.ts"
              }
            }
          ],
          "superclass": {
            "name": "LocalClientClass",
            "module": "/client-deleted/src-client/Client/LocalClientClass.js"
          }
        },
        {
          "kind": "function",
          "name": "remoteClientInstance",
          "return": {
            "type": {
              "text": "RemoteClient"
            }
          },
          "parameters": [
            {
              "name": "args",
              "default": "{}",
              "type": {
                "text": "RemoteClientOptions"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RemoteClientClass",
          "declaration": {
            "name": "RemoteClientClass",
            "module": "client-deleted/src-client/Client/RemoteClientClass.ts"
          }
        },
        {
          "kind": "js",
          "name": "remoteClientInstance",
          "declaration": {
            "name": "remoteClientInstance",
            "module": "client-deleted/src-client/Client/RemoteClientClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-client/Client/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "../../../File.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./LocalClient.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./LocalClientClass.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./RemoteClient.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./RemoteClientClass.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-client/Helpers/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Svg/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-client/Protocol/Blob.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-client/Protocol/Http.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-client/Protocol/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Http.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Blob.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-client/Utility/Audio.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "audioDataPromise",
          "return": {
            "type": {
              "text": "Promise<ClientAudioDataOrError>"
            }
          },
          "parameters": [
            {
              "name": "request",
              "type": {
                "text": "EndpointRequest"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "audioBufferPromise",
          "return": {
            "type": {
              "text": "Promise<ClientAudioDataOrError>"
            }
          },
          "parameters": [
            {
              "name": "audio",
              "type": {
                "text": "ArrayBuffer"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "audioDataPromise",
          "declaration": {
            "name": "audioDataPromise",
            "module": "client-deleted/src-client/Utility/Audio.ts"
          }
        },
        {
          "kind": "js",
          "name": "audioBufferPromise",
          "declaration": {
            "name": "audioBufferPromise",
            "module": "client-deleted/src-client/Utility/Audio.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-client/Utility/Class.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "className",
          "parameters": [
            {
              "name": "condition",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "className",
              "default": "''"
            },
            {
              "name": "addClass",
              "default": "ClassDisabled"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "className",
          "declaration": {
            "name": "className",
            "module": "client-deleted/src-client/Utility/Class.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-client/Utility/Image.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "imageDataPromise",
          "return": {
            "type": {
              "text": "Promise<ClientImageDataOrError>"
            }
          },
          "parameters": [
            {
              "name": "request",
              "type": {
                "text": "EndpointRequest"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "imageDataPromise",
          "declaration": {
            "name": "imageDataPromise",
            "module": "client-deleted/src-client/Utility/Image.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-client/Utility/Json.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "jsonPromise",
          "return": {
            "type": {
              "text": "Promise<any>"
            }
          },
          "parameters": [
            {
              "name": "request",
              "type": {
                "text": "EndpointRequest"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "fetchPromise",
          "return": {
            "type": {
              "text": "Promise<ResponseObject>"
            }
          },
          "parameters": [
            {
              "name": "request",
              "type": {
                "text": "EndpointRequest"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "jsonPromise",
          "declaration": {
            "name": "jsonPromise",
            "module": "client-deleted/src-client/Utility/Json.ts"
          }
        },
        {
          "kind": "js",
          "name": "fetchPromise",
          "declaration": {
            "name": "fetchPromise",
            "module": "client-deleted/src-client/Utility/Json.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-client/Utility/Video.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "videoDataPromise",
          "return": {
            "type": {
              "text": "Promise<ClientVideoDataOrError>"
            }
          },
          "parameters": [
            {
              "name": "request",
              "type": {
                "text": "EndpointRequest"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "videoDataPromise",
          "declaration": {
            "name": "videoDataPromise",
            "module": "client-deleted/src-client/Utility/Video.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-client/Utility/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Audio.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Class.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DragDrop.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Image.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Json.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Pixel.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Video.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-client/Translate/TranslateFunctions.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "translateArgs",
          "return": {
            "type": {
              "text": "TranslateArgs"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "translate",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "args",
              "type": {
                "text": "TranslateArgs"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "translateDefaultLocale",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "locale",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "translateLocale",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "locale",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "translateLocales",
          "return": {
            "type": {
              "text": "string[]"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "translateArgs",
          "declaration": {
            "name": "translateArgs",
            "module": "client-deleted/src-client/Translate/TranslateFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "translate",
          "declaration": {
            "name": "translate",
            "module": "client-deleted/src-client/Translate/TranslateFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "translateDefaultLocale",
          "declaration": {
            "name": "translateDefaultLocale",
            "module": "client-deleted/src-client/Translate/TranslateFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "translateLocale",
          "declaration": {
            "name": "translateLocale",
            "module": "client-deleted/src-client/Translate/TranslateFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "translateLocales",
          "declaration": {
            "name": "translateLocales",
            "module": "client-deleted/src-client/Translate/TranslateFunctions.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-client/Translate/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./TranslateFunctions.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Activity"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Browser"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Clickable"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ClipItem"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Controls"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DefinitionItem"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Div"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Inspector"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Masher"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Panel"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Player"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Span"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Text"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Timeline"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Translation"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Test"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Contexts/ClientContext.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "ClientContextDefault",
          "type": {
            "text": "ClientContextInterface"
          },
          "default": "{}"
        },
        {
          "kind": "variable",
          "name": "ClientContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientContextDefault",
          "declaration": {
            "name": "ClientContextDefault",
            "module": "client-deleted/src-react/Contexts/ClientContext.ts"
          }
        },
        {
          "kind": "js",
          "name": "ClientContext",
          "declaration": {
            "name": "ClientContext",
            "module": "client-deleted/src-react/Contexts/ClientContext.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Contexts/DefinitionContext.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "DefinitionContextDefault",
          "type": {
            "text": "DefinitionContextInterface"
          },
          "default": "{\n}"
        },
        {
          "kind": "variable",
          "name": "DefinitionContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DefinitionContextDefault",
          "declaration": {
            "name": "DefinitionContextDefault",
            "module": "client-deleted/src-react/Contexts/DefinitionContext.ts"
          }
        },
        {
          "kind": "js",
          "name": "DefinitionContext",
          "declaration": {
            "name": "DefinitionContext",
            "module": "client-deleted/src-react/Contexts/DefinitionContext.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Contexts/TrackContext.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "TrackContextDefault",
          "type": {
            "text": "TrackContextInterface"
          },
          "default": "{}"
        },
        {
          "kind": "variable",
          "name": "TrackContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TrackContextDefault",
          "declaration": {
            "name": "TrackContextDefault",
            "module": "client-deleted/src-react/Contexts/TrackContext.ts"
          }
        },
        {
          "kind": "js",
          "name": "TrackContext",
          "declaration": {
            "name": "TrackContext",
            "module": "client-deleted/src-react/Contexts/TrackContext.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Contexts/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./TrackContext"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DefinitionContext"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ClientContext"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Framework/For.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "For",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "ForProps<T, U>"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "For",
            "module": "client-deleted/src-react/Framework/For.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Framework/Framework.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Framework/FrameworkFunctions.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "createContext",
          "declaration": {
            "name": "createContext",
            "package": "react"
          }
        },
        {
          "kind": "js",
          "name": "useContext",
          "declaration": {
            "name": "useContext",
            "package": "react"
          }
        },
        {
          "kind": "js",
          "name": "useRef",
          "declaration": {
            "name": "useRef",
            "package": "react"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Framework/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Framework"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./FrameworkFunctions"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./For"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Show"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Hooks/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./useApiDefinitions\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./useMasher\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./useMasherActivity\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./useMasherDefinitions\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./useListeners\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./useRefresh\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./useClient\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Hooks/useApiDefinitions.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "useApiDefinitions",
          "return": {
            "type": {
              "text": "MediaArray"
            }
          },
          "parameters": [
            {
              "name": "types",
              "default": "[]",
              "type": {
                "text": "MediaTypes"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "useApiDefinitions",
          "declaration": {
            "name": "useApiDefinitions",
            "module": "client-deleted/src-react/Hooks/useApiDefinitions.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Hooks/useClient.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "useClient",
          "return": {
            "type": {
              "text": "Client"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "useClient",
          "declaration": {
            "name": "useClient",
            "module": "client-deleted/src-react/Hooks/useClient.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Hooks/useDefinitions.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "useDefinitions",
          "return": {
            "type": {
              "text": "MediaArray"
            }
          },
          "parameters": [
            {
              "name": "types",
              "default": "[]",
              "type": {
                "text": "MediaType[]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "useDefinitions",
          "declaration": {
            "name": "useDefinitions",
            "module": "client-deleted/src-react/Hooks/useDefinitions.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Hooks/useListeners.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "useListeners",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "events",
              "type": {
                "text": "ListenerEvents"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "useListeners",
          "declaration": {
            "name": "useListeners",
            "module": "client-deleted/src-react/Hooks/useListeners.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Hooks/useMasher.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "useMasher",
          "return": {
            "type": {
              "text": "Masher"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "useMasher",
          "declaration": {
            "name": "useMasher",
            "module": "client-deleted/src-react/Hooks/useMasher.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Hooks/useMasherActivity.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "useMasherActivity",
          "return": {
            "type": {
              "text": "ActivityObjects"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "useMasherActivity",
          "declaration": {
            "name": "useMasherActivity",
            "module": "client-deleted/src-react/Hooks/useMasherActivity.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Hooks/useMasherDefinitions.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "useEditorDefinitions",
          "return": {
            "type": {
              "text": "MediaArray"
            }
          },
          "parameters": [
            {
              "name": "types",
              "default": "[]",
              "type": {
                "text": "MediaTypes"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "useEditorDefinitions",
          "declaration": {
            "name": "useEditorDefinitions",
            "module": "client-deleted/src-react/Hooks/useMasherDefinitions.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Hooks/useRefresh.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "useRefresh",
          "return": {
            "type": {
              "text": "[(...args: any[]) => void, number]"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "useRefresh",
          "declaration": {
            "name": "useRefresh",
            "module": "client-deleted/src-react/Hooks/useRefresh.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Setup/Constants.tsx",
      "declarations": [
        {
          "kind": "variable",
          "name": "EmptyElement",
          "type": {
            "text": "JsxElement"
          },
          "default": "<ConstEmptyElementFunction key=\"empty-element\" />"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EmptyElement",
          "declaration": {
            "name": "EmptyElement",
            "module": "client-deleted/src-react/Setup/Constants.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Setup/Problems.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Problems",
          "type": {
            "text": "object"
          },
          "default": "{\n  child: 'single child element expected',\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Problems",
          "declaration": {
            "name": "Problems",
            "module": "client-deleted/src-react/Setup/Problems.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Setup/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./Constants\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./Problems\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Types/Core.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "ActivityTypeAnalyze",
          "type": {
            "text": "ActivityType"
          },
          "default": "'analyze'"
        },
        {
          "kind": "variable",
          "name": "ActivityTypeComplete",
          "type": {
            "text": "ActivityType"
          },
          "default": "'complete'"
        },
        {
          "kind": "variable",
          "name": "ActivityTypeError",
          "type": {
            "text": "ActivityType"
          },
          "default": "'error'"
        },
        {
          "kind": "variable",
          "name": "ActivityTypeLoad",
          "type": {
            "text": "ActivityType"
          },
          "default": "'load'"
        },
        {
          "kind": "variable",
          "name": "ActivityTypeRender",
          "type": {
            "text": "ActivityType"
          },
          "default": "'render'"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ActivityTypeAnalyze",
          "declaration": {
            "name": "ActivityTypeAnalyze",
            "module": "client-deleted/src-react/Types/Core.ts"
          }
        },
        {
          "kind": "js",
          "name": "ActivityTypeComplete",
          "declaration": {
            "name": "ActivityTypeComplete",
            "module": "client-deleted/src-react/Types/Core.ts"
          }
        },
        {
          "kind": "js",
          "name": "ActivityTypeError",
          "declaration": {
            "name": "ActivityTypeError",
            "module": "client-deleted/src-react/Types/Core.ts"
          }
        },
        {
          "kind": "js",
          "name": "ActivityTypeLoad",
          "declaration": {
            "name": "ActivityTypeLoad",
            "module": "client-deleted/src-react/Types/Core.ts"
          }
        },
        {
          "kind": "js",
          "name": "ActivityTypeRender",
          "declaration": {
            "name": "ActivityTypeRender",
            "module": "client-deleted/src-react/Types/Core.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Types/Element.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Types/Props.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Types/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Core"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Element"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Props"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Utilities/Bar.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "Bar",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "BarProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Bar",
          "declaration": {
            "name": "Bar",
            "module": "client-deleted/src-react/Utilities/Bar.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Utilities/Element.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "elementSetPreviewSize",
          "parameters": [
            {
              "name": "current",
              "optional": true,
              "type": {
                "text": "HTMLDivElement | null"
              }
            },
            {
              "name": "size",
              "optional": true,
              "type": {
                "text": "Size"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "elementSetPreviewSize",
          "declaration": {
            "name": "elementSetPreviewSize",
            "module": "client-deleted/src-react/Utilities/Element.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Utilities/Props.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "propsMediaTypes",
          "return": {
            "type": {
              "text": "MediaType[]"
            }
          },
          "parameters": [
            {
              "name": "type",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "types",
              "optional": true,
              "type": {
                "text": "string | string[]"
              }
            },
            {
              "name": "id",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "propsSelectorTypes",
          "return": {
            "type": {
              "text": "SelectorType[]"
            }
          },
          "parameters": [
            {
              "name": "type",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "types",
              "optional": true,
              "type": {
                "text": "string | string[]"
              }
            },
            {
              "name": "id",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "propsMediaTypes",
          "declaration": {
            "name": "propsMediaTypes",
            "module": "client-deleted/src-react/Utilities/Props.ts"
          }
        },
        {
          "kind": "js",
          "name": "propsSelectorTypes",
          "declaration": {
            "name": "propsSelectorTypes",
            "module": "client-deleted/src-react/Utilities/Props.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Utilities/Session.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "sessionGet",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "key",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "sessionSet",
          "parameters": [
            {
              "name": "key",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sessionGet",
          "declaration": {
            "name": "sessionGet",
            "module": "client-deleted/src-react/Utilities/Session.ts"
          }
        },
        {
          "kind": "js",
          "name": "sessionSet",
          "declaration": {
            "name": "sessionSet",
            "module": "client-deleted/src-react/Utilities/Session.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Utilities/Slider.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "Slider",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "SliderProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Slider",
          "declaration": {
            "name": "Slider",
            "module": "client-deleted/src-react/Utilities/Slider.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Utilities/VideoView.tsx",
      "declarations": [
        {
          "kind": "variable",
          "name": "VideoView"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VideoView",
          "declaration": {
            "name": "VideoView",
            "module": "client-deleted/src-react/Utilities/VideoView.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Utilities/View.tsx",
      "declarations": [
        {
          "kind": "variable",
          "name": "View"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "View",
          "declaration": {
            "name": "View",
            "module": "client-deleted/src-react/Utilities/View.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Utilities/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./Bar\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"../Components/Button/Button\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./Element\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./Props\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./Session\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./Slider\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./VideoView\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./View\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/color/image.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClientColorAssetClass",
          "members": [
            {
              "kind": "method",
              "name": "definitionIcon",
              "return": {
                "type": {
                  "text": "Promise<SVGSVGElement> | undefined"
                }
              },
              "parameters": [
                {
                  "name": "size",
                  "type": {
                    "text": "Size"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instanceFromObject",
              "return": {
                "type": {
                  "text": "ColorInstance"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "optional": true,
                  "type": {
                    "text": "ColorInstanceObject"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_defaultAsset",
              "type": {
                "text": "ClientColorAsset | undefined"
              },
              "privacy": "private",
              "static": true
            },
            {
              "kind": "field",
              "name": "defaultAsset",
              "type": {
                "text": "ClientColorAsset"
              },
              "privacy": "private",
              "static": true
            },
            {
              "kind": "method",
              "name": "handleAsset",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAsset"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "WithColorAsset",
            "module": "src/asset/color/image.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "ClientColorInstanceClass",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "ColorAsset & ClientAsset"
              }
            },
            {
              "kind": "method",
              "name": "contentPreviewItemPromise",
              "return": {
                "type": {
                  "text": "Promise<SvgItem>"
                }
              },
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "_shortest",
                  "type": {
                    "text": "PropertySize"
                  }
                },
                {
                  "name": "time",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "_component",
                  "type": {
                    "text": "Panel"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "pathElement",
              "return": {
                "type": {
                  "text": "SvgItem"
                }
              },
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "forecolor",
                  "default": "'none'"
                }
              ]
            }
          ],
          "superclass": {
            "name": "WithColorInstance",
            "module": "src/asset/color/image.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientColorAssetClass",
          "declaration": {
            "name": "ClientColorAssetClass",
            "module": "src/asset/color/image.ts"
          }
        },
        {
          "kind": "js",
          "name": "ClientColorInstanceClass",
          "declaration": {
            "name": "ClientColorInstanceClass",
            "module": "src/asset/color/image.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/color/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./image.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/mash/MasherClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MasherClass",
          "members": [
            {
              "kind": "field",
              "name": "actions",
              "type": {
                "text": "Actions"
              },
              "default": "new ActionsClass(this)"
            },
            {
              "kind": "method",
              "name": "add",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "addAssets",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<ClientAssets>"
                }
              },
              "parameters": [
                {
                  "name": "asset",
                  "type": {
                    "text": "ClientAsset | ClientAssets"
                  }
                },
                {
                  "name": "mashIndex",
                  "optional": true,
                  "type": {
                    "text": "MashIndex"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "addTrack",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "_asset",
              "type": {
                "text": "ClientAsset | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "ClientAsset | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "assetObject",
              "type": {
                "text": "AssetObject | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "assureMash",
              "privacy": "private",
              "parameters": [
                {
                  "name": "media",
                  "type": {
                    "text": "ClientAssets"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "autoplay"
            },
            {
              "kind": "field",
              "name": "_buffer",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "buffer",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "method",
              "name": "can",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "clientAction",
                  "type": {
                    "text": "ClientAction"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "clearActions",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "clipFromId",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "ClientClip | undefined"
                }
              },
              "parameters": [
                {
                  "name": "clipId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "clipIndex",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "frameOrIndex",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "clips",
                  "type": {
                    "text": "ClientClips"
                  }
                },
                {
                  "name": "dense",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "clips",
              "type": {
                "text": "ClientClips"
              }
            },
            {
              "kind": "method",
              "name": "create"
            },
            {
              "kind": "field",
              "name": "currentTime",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "definitions",
              "type": {
                "text": "ClientAssets"
              }
            },
            {
              "kind": "field",
              "name": "definitionsUnsaved",
              "type": {
                "text": "ClientAssets"
              }
            },
            {
              "kind": "method",
              "name": "destroy"
            },
            {
              "kind": "method",
              "name": "destroyMash",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "dragging",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "drawTimeout",
              "type": {
                "text": "Timeout | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "duration",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "_mashingType",
              "type": {
                "text": "AssetType | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "mashingType",
              "type": {
                "text": "AssetType"
              }
            },
            {
              "kind": "field",
              "name": "editing",
              "type": {
                "text": "boolean"
              },
              "default": "!this.readOnly"
            },
            {
              "kind": "field",
              "name": "endTime",
              "type": {
                "text": "Time"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_fps",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "fps",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "frame",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "frames",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "method",
              "name": "goToTime",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "dispatchChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "action",
                  "type": {
                    "text": "Action"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "dispatchDrawLater",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleAddAssets",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAddAssets"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClipFromId",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "ClipFromIdEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClipId",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventClipId"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleDataType",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventDataType"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChangeFrame",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangeFrame"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMashAsset",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventMashAsset"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePropertyIds",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventPropertyIds"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleValue",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventValue"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "backgroundNode",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "clipSize",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "frameWidth",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleIconFromFrame",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "IconFromFrameEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMoveClip",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MashMoveClipEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "loadMashAssetObject",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "MashAssetObject"
                }
              },
              "parameters": [
                {
                  "name": "assetObject",
                  "type": {
                    "text": "AssetObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleAction",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAction"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "actionIsHandled",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "action",
                  "type": {
                    "text": "ClientAction"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleAssetObject",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAssetObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleActionEnabled",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventActionEnabled"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePreviewItems",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventPreviews"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleRemoveClip",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "StringEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleRemoveTrack",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MashRemoveTrackEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSetAssetObject",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangeAssetObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSelectClipId",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangeClipId"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSelectedProperties",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "SelectedPropertiesEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTargetIds",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventTargetIds"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTrackClips",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "TrackClipsEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "load",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "AssetObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "loadMashAndDraw",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "private",
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "_loop",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "loop",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "_mashAsset",
              "type": {
                "text": "ClientMashAsset | undefined"
              }
            },
            {
              "kind": "field",
              "name": "mashAsset",
              "type": {
                "text": "ClientMashAsset | undefined"
              }
            },
            {
              "kind": "method",
              "name": "mashAssetObjectLoadPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "MashAssetObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "move",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "clip",
                  "type": {
                    "text": "ClientClip"
                  }
                },
                {
                  "name": "editorIndex",
                  "default": "{}",
                  "type": {
                    "text": "MashIndex"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "moveTrack",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "_muted",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "muted",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "method",
              "name": "pause",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "paused",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "method",
              "name": "play",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "position",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "positionStep",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "precision"
            },
            {
              "kind": "method",
              "name": "previewsPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<Previews>"
                }
              },
              "parameters": [
                {
                  "name": "maxDimension",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "enabled",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "selectedPropertyIds",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "PropertyIds"
                }
              },
              "parameters": [
                {
                  "name": "targetIds",
                  "type": {
                    "text": "TargetIds"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "readOnly",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "method",
              "name": "redo",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "redraw",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "removeClip",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "clientClip",
                  "optional": true,
                  "type": {
                    "text": "ClientClip"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeTrack",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_track",
                  "type": {
                    "text": "Track"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "rotate",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "save",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "saved",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "temporaryIdLookup",
                  "optional": true,
                  "type": {
                    "text": "StringRecord"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_selection",
              "type": {
                "text": "ClientClip | false"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "selection",
              "type": {
                "text": "ClientClip | false"
              }
            },
            {
              "kind": "method",
              "name": "selectable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Selectable | false"
                }
              },
              "parameters": [
                {
                  "name": "targetId",
                  "type": {
                    "text": "TargetId"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "selectedTargetIds",
              "type": {
                "text": "TargetIds"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "time",
              "type": {
                "text": "Time"
              }
            },
            {
              "kind": "field",
              "name": "timeRange",
              "type": {
                "text": "TimeRange"
              }
            },
            {
              "kind": "method",
              "name": "togglePaused",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "undo",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "unload",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "_volume",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "volume",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MasherClass",
          "declaration": {
            "name": "MasherClass",
            "module": "src/asset/mash/MasherClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/mash/MasherFactory.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "editorArgs",
          "return": {
            "type": {
              "text": "MasherArgs"
            }
          },
          "parameters": [
            {
              "name": "options",
              "default": "{}",
              "type": {
                "text": "MasherOptions"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "masherInstance",
          "return": {
            "type": {
              "text": "Masher"
            }
          },
          "parameters": [
            {
              "name": "options",
              "default": "{}",
              "type": {
                "text": "MasherOptions"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "editorArgs",
          "declaration": {
            "name": "editorArgs",
            "module": "src/asset/mash/MasherFactory.ts"
          }
        },
        {
          "kind": "js",
          "name": "masherInstance",
          "declaration": {
            "name": "masherInstance",
            "module": "src/asset/mash/MasherFactory.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/mash/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./video.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./MasherFactory.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./MasherClass.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/mash/video.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClientMashVideoAssetClass",
          "members": [
            {
              "kind": "method",
              "name": "initializeProperties",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "MashAssetObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleAsset",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAsset"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "WithVideoAsset",
            "module": "src/asset/mash/video.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "ClientMashVideoInstanceClass",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "ClientMashVideoAsset"
              }
            }
          ],
          "superclass": {
            "name": "WithVideoInstance",
            "module": "src/asset/mash/video.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientMashVideoAssetClass",
          "declaration": {
            "name": "ClientMashVideoAssetClass",
            "module": "src/asset/mash/video.ts"
          }
        },
        {
          "kind": "js",
          "name": "ClientMashVideoInstanceClass",
          "declaration": {
            "name": "ClientMashVideoInstanceClass",
            "module": "src/asset/mash/video.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/object/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./video.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/object/video.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/objects/fetch.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/objects/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./fetch.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/raw/audio.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClientRawAudioAssetClass",
          "members": [
            {
              "kind": "method",
              "name": "assetCachePromise",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "AssetCacheArgs"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "initializeProperties",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "ClientRawAudioAssetObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instanceFromObject",
              "return": {
                "type": {
                  "text": "AudioInstance"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "optional": true,
                  "type": {
                    "text": "AudioInstanceObject | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instanceArgs",
              "return": {
                "type": {
                  "text": "AudioInstanceArgs"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "default": "{}",
                  "type": {
                    "text": "AudioInstanceObject"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "loadedAudio",
              "type": {
                "text": "ClientAudio | undefined"
              }
            },
            {
              "kind": "field",
              "name": "requestPromise",
              "type": {
                "text": "Promise<void>"
              }
            },
            {
              "kind": "method",
              "name": "handleAsset",
              "static": true,
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAsset"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "WithAudioAsset",
            "module": "src/asset/raw/audio.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "ClientRawAudioInstanceClass",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "ClientRawAudioAsset"
              }
            }
          ],
          "superclass": {
            "name": "WithAudioInstance",
            "module": "src/asset/raw/audio.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientRawAudioAssetClass",
          "declaration": {
            "name": "ClientRawAudioAssetClass",
            "module": "src/asset/raw/audio.ts"
          }
        },
        {
          "kind": "js",
          "name": "ClientRawAudioInstanceClass",
          "declaration": {
            "name": "ClientRawAudioInstanceClass",
            "module": "src/asset/raw/audio.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/raw/image.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClientRawImageAssetClass",
          "members": [
            {
              "kind": "method",
              "name": "assetCachePromise",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "AssetCacheArgs"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "definitionIcon",
              "return": {
                "type": {
                  "text": "Promise<SVGSVGElement> | undefined"
                }
              },
              "parameters": [
                {
                  "name": "size",
                  "type": {
                    "text": "Size"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "initializeProperties",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "ClientRawImageAssetObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instanceFromObject",
              "return": {
                "type": {
                  "text": "ImageInstance"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "optional": true,
                  "type": {
                    "text": "ImageInstanceObject | undefined"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "loadedImage",
              "type": {
                "text": "ClientImage | undefined"
              }
            },
            {
              "kind": "method",
              "name": "handleAsset",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAsset"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "WithImageAsset",
            "module": "src/asset/raw/image.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "ClientRawImageInstanceClass",
          "members": [
            {
              "kind": "method",
              "name": "svgItemForTimelinePromise",
              "return": {
                "type": {
                  "text": "Promise<SvgItem>"
                }
              },
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "_time",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "ClientRawImageAsset"
              }
            }
          ],
          "superclass": {
            "name": "WithImageInstance",
            "module": "src/asset/raw/image.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientRawImageAssetClass",
          "declaration": {
            "name": "ClientRawImageAssetClass",
            "module": "src/asset/raw/image.ts"
          }
        },
        {
          "kind": "js",
          "name": "ClientRawImageInstanceClass",
          "declaration": {
            "name": "ClientRawImageInstanceClass",
            "module": "src/asset/raw/image.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/raw/importer.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "ClientRawElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-client-raw'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "ClientRawElement",
          "members": [
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "changeEvent",
                  "type": {
                    "text": "DragEvent"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit-element/lit-element.js"
          },
          "tagName": "ClientRawElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientRawElement",
          "declaration": {
            "name": "ClientRawElement",
            "module": "src/asset/raw/importer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "ClientRawElementName",
          "declaration": {
            "name": "ClientRawElement",
            "module": "src/asset/raw/importer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/raw/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./importer.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./audio.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./image.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./video.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/raw/video.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClientRawVideoAssetClass",
          "members": [
            {
              "kind": "method",
              "name": "assetCachePromise",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "AssetCacheArgs"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "definitionIcon",
              "return": {
                "type": {
                  "text": "Promise<SVGSVGElement> | undefined"
                }
              },
              "parameters": [
                {
                  "name": "size",
                  "type": {
                    "text": "Size"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "imageFromTranscodingPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<ClientImage>"
                }
              },
              "parameters": [
                {
                  "name": "transcoding",
                  "type": {
                    "text": "Transcoding"
                  }
                },
                {
                  "name": "definitionTime",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "outSize",
                  "optional": true,
                  "type": {
                    "text": "Size"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "imageFromVideoTranscodingPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<ClientImage>"
                }
              },
              "parameters": [
                {
                  "name": "previewTranscoding",
                  "type": {
                    "text": "Transcoding"
                  }
                },
                {
                  "name": "definitionTime",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "outSize",
                  "optional": true,
                  "type": {
                    "text": "Size"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "initializeProperties",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "ClientRawVideoAssetObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instanceFromObject",
              "return": {
                "type": {
                  "text": "VideoInstance"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "optional": true,
                  "type": {
                    "text": "VideoInstanceObject | undefined"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "loadedImages",
              "default": "new Map<string, ClientImage>()"
            },
            {
              "kind": "method",
              "name": "loadedImage",
              "return": {
                "type": {
                  "text": "ClientImage | undefined"
                }
              },
              "parameters": [
                {
                  "name": "definitionTime",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "outSize",
                  "optional": true,
                  "type": {
                    "text": "Size"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "loadedImageKey",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "definitionTime",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "outSize",
                  "optional": true,
                  "type": {
                    "text": "Size"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "loadedImagePromise",
              "return": {
                "type": {
                  "text": "Promise<ClientImage>"
                }
              },
              "parameters": [
                {
                  "name": "definitionTime",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "outSize",
                  "optional": true,
                  "type": {
                    "text": "Size"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "preloadAudiblePromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "_args",
                  "type": {
                    "text": "AssetCacheArgs"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "preloadVisiblePromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "AssetCacheArgs"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "previewTranscoding",
              "type": {
                "text": "Transcoding | undefined"
              }
            },
            {
              "kind": "method",
              "name": "sequenceImagesPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "AssetCacheArgs"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleAsset",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAsset"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "WithVideoAsset",
            "module": "src/asset/raw/video.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "ClientRawVideoInstanceClass",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "ClientRawVideoAsset"
              }
            },
            {
              "kind": "method",
              "name": "containedPreviewPromise",
              "return": {
                "type": {
                  "text": "Promise<Preview>"
                }
              },
              "parameters": [
                {
                  "name": "video",
                  "type": {
                    "text": "ClientVideo"
                  }
                },
                {
                  "name": "_content",
                  "type": {
                    "text": "ClientInstance"
                  }
                },
                {
                  "name": "containerRect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "_size",
                  "type": {
                    "text": "Size"
                  }
                },
                {
                  "name": "time",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "_component",
                  "type": {
                    "text": "Panel"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_div",
              "type": {
                "text": "HTMLDivElement | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "div",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_foreignElement",
              "type": {
                "text": "SVGForeignObjectElement | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "foreignElement"
            },
            {
              "kind": "field",
              "name": "loadedVideo",
              "type": {
                "text": "ClientVideo | undefined"
              }
            },
            {
              "kind": "method",
              "name": "previewVideoPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<ClientVideo>"
                }
              },
              "parameters": [
                {
                  "name": "previewTranscoding",
                  "type": {
                    "text": "Transcoding"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "sequenceItemPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<SvgItem>"
                }
              },
              "parameters": [
                {
                  "name": "_rect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "_definitionTime",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "stylesPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<string[]>"
                }
              },
              "parameters": [
                {
                  "name": "zeroRect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "definitionTime",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "stylesSrcPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<string>"
                }
              },
              "parameters": [
                {
                  "name": "_zeroRect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "_definitionTime",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "svgItemForPlayerPromise",
              "return": {
                "type": {
                  "text": "Promise<SvgItem>"
                }
              },
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "time",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "svgItemForTimelinePromise",
              "return": {
                "type": {
                  "text": "Promise<SvgItem>"
                }
              },
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "time",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "unload"
            },
            {
              "kind": "method",
              "name": "videoForPlayerPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "SvgItem"
                }
              },
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "definitionTime",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "videoItemForPlayerPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<SvgItem>"
                }
              },
              "parameters": [
                {
                  "name": "previewTranscoding",
                  "type": {
                    "text": "Transcoding"
                  }
                },
                {
                  "name": "rect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "definitionTime",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_clientCanMaskVideo",
              "type": {
                "text": "boolean | undefined"
              },
              "static": true
            },
            {
              "kind": "field",
              "name": "clientCanMaskVideo",
              "type": {
                "text": "boolean"
              },
              "static": true
            }
          ],
          "superclass": {
            "name": "WithVideoInstance",
            "module": "src/asset/raw/video.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientRawVideoAssetClass",
          "declaration": {
            "name": "ClientRawVideoAssetClass",
            "module": "src/asset/raw/video.ts"
          }
        },
        {
          "kind": "js",
          "name": "ClientRawVideoInstanceClass",
          "declaration": {
            "name": "ClientRawVideoInstanceClass",
            "module": "src/asset/raw/video.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/shape/image.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClientShapeAssetClass",
          "members": [
            {
              "kind": "method",
              "name": "definitionIcon",
              "return": {
                "type": {
                  "text": "Promise<SVGSVGElement> | undefined"
                }
              },
              "parameters": [
                {
                  "name": "size",
                  "type": {
                    "text": "Size"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instanceFromObject",
              "return": {
                "type": {
                  "text": "ShapeInstance"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "optional": true,
                  "type": {
                    "text": "ShapeInstanceObject"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_defaultAsset",
              "type": {
                "text": "ClientShapeAsset | undefined"
              },
              "privacy": "private",
              "static": true
            },
            {
              "kind": "field",
              "name": "defaultAsset",
              "type": {
                "text": "ClientShapeAsset"
              },
              "privacy": "private",
              "static": true
            },
            {
              "kind": "method",
              "name": "handleAsset",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAsset"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "WithShapeAsset",
            "module": "src/asset/shape/image.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "ClientShapeInstanceClass",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "ClientShapeAsset"
              }
            },
            {
              "kind": "method",
              "name": "containerSvgItemPromise",
              "return": {
                "type": {
                  "text": "Promise<SvgItem>"
                }
              },
              "parameters": [
                {
                  "name": "containerRect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "_time",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "_component",
                  "type": {
                    "text": "Panel"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instanceCachePromise",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "_args",
                  "type": {
                    "text": "InstanceCacheArgs"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "pathElement",
              "return": {
                "type": {
                  "text": "SvgItem"
                }
              },
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "forecolor",
                  "default": "''"
                }
              ]
            }
          ],
          "superclass": {
            "name": "WithShapeInstance",
            "module": "src/asset/shape/image.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientShapeAssetClass",
          "declaration": {
            "name": "ClientShapeAssetClass",
            "module": "src/asset/shape/image.ts"
          }
        },
        {
          "kind": "js",
          "name": "ClientShapeInstanceClass",
          "declaration": {
            "name": "ClientShapeInstanceClass",
            "module": "src/asset/shape/image.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/shape/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./image.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/text/image.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClientTextAssetClass",
          "members": [
            {
              "kind": "method",
              "name": "assetCachePromise",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "AssetCacheArgs"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "definitionIcon",
              "return": {
                "type": {
                  "text": "Promise<SVGSVGElement> | undefined"
                }
              },
              "parameters": [
                {
                  "name": "size",
                  "type": {
                    "text": "Size"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "family",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "initializeProperties",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "ClientTextAssetObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instanceFromObject",
              "return": {
                "type": {
                  "text": "TextInstance"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "optional": true,
                  "type": {
                    "text": "TextInstanceObject"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_intrinsicRect",
              "type": {
                "text": "Rect | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "intrinsicRect",
              "type": {
                "text": "Rect"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "intrinsicRectInitialize",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Rect"
                }
              }
            },
            {
              "kind": "method",
              "name": "loadFontPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<ClientFont>"
                }
              },
              "parameters": [
                {
                  "name": "transcoding",
                  "optional": true,
                  "type": {
                    "text": "Transcoding"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "loadedFont",
              "type": {
                "text": "ClientFont | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleAsset",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAsset"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "WithTextAsset",
            "module": "src/asset/text/image.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "ClientTextInstanceClass",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "ClientTextAsset"
              }
            },
            {
              "kind": "method",
              "name": "containerSvgItemPromise",
              "return": {
                "type": {
                  "text": "Promise<SvgItem>"
                }
              },
              "parameters": [
                {
                  "name": "containerRect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "_time",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "_component",
                  "type": {
                    "text": "Panel"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "intrinsicRect",
              "return": {
                "type": {
                  "text": "Rect"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "intrinsicRectInitialize",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Rect"
                }
              }
            },
            {
              "kind": "method",
              "name": "pathElement",
              "return": {
                "type": {
                  "text": "SvgItem"
                }
              },
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "Rect"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setValue",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Scalar"
                  }
                },
                {
                  "name": "property",
                  "optional": true,
                  "type": {
                    "text": "Property"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "WithTextInstance",
            "module": "src/asset/text/image.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientTextAssetClass",
          "declaration": {
            "name": "ClientTextAssetClass",
            "module": "src/asset/text/image.ts"
          }
        },
        {
          "kind": "js",
          "name": "ClientTextInstanceClass",
          "declaration": {
            "name": "ClientTextInstanceClass",
            "module": "src/asset/text/image.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/text/importer.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/text/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./importer.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./image.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/group/aspect.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "AspectControlGroupElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-control-group-aspect'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "AspectControlGroupElement",
          "members": [
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "handleChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChanged"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleControlGroup",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventControlGroup"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "propertyIds",
                  "type": {
                    "text": "PropertyIds"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "names",
              "type": {
                "text": "Strings"
              },
              "privacy": "private",
              "static": true,
              "default": "[\n    'aspectWidth', 'aspectHeight', 'aspectShortest',\n  ]"
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            }
          ],
          "superclass": {
            "name": "WithControlGroup",
            "module": "src/control/group/aspect.ts"
          },
          "tagName": "AspectControlGroupElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AspectControlGroupElement",
          "declaration": {
            "name": "AspectControlGroupElement",
            "module": "src/control/group/aspect.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "AspectControlGroupElementName",
          "declaration": {
            "name": "AspectControlGroupElement",
            "module": "src/control/group/aspect.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/group/dimensions.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "DimenstionsControlGroupElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-control-group-dimensions'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "DimenstionsControlGroupElement",
          "members": [
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "dimensionsContent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Contents"
                }
              },
              "parameters": [
                {
                  "name": "aspectFlip",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "portrait",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChanged"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleHeight",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "StringEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleWidth",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "StringEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleControlGroup",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventControlGroup"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "propertyIds",
                  "type": {
                    "text": "PropertyIds"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "names",
              "type": {
                "text": "Strings"
              },
              "privacy": "private",
              "static": true,
              "default": "[\n    ...SIZE_KEYS.flatMap(key => [key, `${key}${End}`]),\n    'lock',\n    `size${Aspect}`,\n  ]"
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            }
          ],
          "superclass": {
            "name": "WithSizeReactive",
            "module": "src/control/group/dimensions.ts"
          },
          "tagName": "DimenstionsControlGroupElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DimenstionsControlGroupElement",
          "declaration": {
            "name": "DimenstionsControlGroupElement",
            "module": "src/control/group/dimensions.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "DimenstionsControlGroupElementName",
          "declaration": {
            "name": "DimenstionsControlGroupElement",
            "module": "src/control/group/dimensions.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/group/fill.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "FillControlGroupElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-control-group-fill'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "FillControlGroupElement",
          "members": [
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "handleChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChanged"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleColor",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "StringEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleOpacity",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "StringEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleControlGroup",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventControlGroup"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "propertyIds",
                  "type": {
                    "text": "PropertyIds"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "names",
              "type": {
                "text": "Strings"
              },
              "privacy": "private",
              "static": true,
              "default": "[\n    'color', 'colorEnd', 'opacity', 'opacityEnd'\n  ]"
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            }
          ],
          "superclass": {
            "name": "WithControlGroup",
            "module": "src/control/group/fill.ts"
          },
          "tagName": "FillControlGroupElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FillControlGroupElement",
          "declaration": {
            "name": "FillControlGroupElement",
            "module": "src/control/group/fill.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "FillControlGroupElementName",
          "declaration": {
            "name": "FillControlGroupElement",
            "module": "src/control/group/fill.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/group/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./aspect.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./dimensions.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./fill.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./location.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./time.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/group/location.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "LocationControlGroupElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-control-group-location'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "LocationControlGroupElement",
          "members": [
            {
              "kind": "method",
              "name": "constrainedContent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "flipped",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "handleChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChanged"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleDirection",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "StringEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleX",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "StringEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleY",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "StringEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleControlGroup",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventControlGroup"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "propertyIds",
                  "type": {
                    "text": "PropertyIds"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "names",
              "type": {
                "text": "Strings"
              },
              "privacy": "private",
              "static": true,
              "default": "[\n    ...DIRECTIONS_SIDE.map(direction => `${direction}${Crop}`),\n    ...POINT_KEYS.flatMap(key => ([key, `${key}${End}`])),\n    `point${Aspect}`,\n  ]"
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            }
          ],
          "superclass": {
            "name": "WithSizeReactive",
            "module": "src/control/group/location.ts"
          },
          "tagName": "LocationControlGroupElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LocationControlGroupElement",
          "declaration": {
            "name": "LocationControlGroupElement",
            "module": "src/control/group/location.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "LocationControlGroupElementName",
          "declaration": {
            "name": "LocationControlGroupElement",
            "module": "src/control/group/location.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/group/time.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "TimeControlGroupElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-control-group-time'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "TimeControlGroupElement",
          "members": [
            {
              "kind": "field",
              "name": "framedContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "handleControlGroup",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventControlGroup"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "propertyIds",
                  "type": {
                    "text": "PropertyIds"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "names",
              "type": {
                "text": "Strings"
              },
              "privacy": "private",
              "static": true,
              "default": "['frame', 'frames', 'timing']"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            }
          ],
          "superclass": {
            "name": "WithControlGroup",
            "module": "src/control/group/time.ts"
          },
          "tagName": "TimeControlGroupElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimeControlGroupElement",
          "declaration": {
            "name": "TimeControlGroupElement",
            "module": "src/control/group/time.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "TimeControlGroupElementName",
          "declaration": {
            "name": "TimeControlGroupElement",
            "module": "src/control/group/time.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-client/Helpers/Svg/SvgFunctions.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isSvg",
          "return": {
            "type": {
              "text": "value is SVGSVGElement"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "assertSvg",
          "return": {
            "type": {
              "text": "asserts value is SVGSVGElement"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgFromString",
          "return": {
            "type": {
              "text": "SVGSVGElement"
            }
          },
          "parameters": [
            {
              "name": "svgString",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isSvg",
          "declaration": {
            "name": "isSvg",
            "module": "client-deleted/src-client/Helpers/Svg/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "assertSvg",
          "declaration": {
            "name": "assertSvg",
            "module": "client-deleted/src-client/Helpers/Svg/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgFromString",
          "declaration": {
            "name": "svgFromString",
            "module": "client-deleted/src-client/Helpers/Svg/SvgFunctions.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-client/Helpers/Svg/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./SvgFunctions.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Activity/Activity.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "Activity",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "ActivityProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Activity",
          "declaration": {
            "name": "Activity",
            "module": "client-deleted/src-react/Components/Activity/Activity.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Activity/ActivityContent.lite.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "ActivityContent",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "ActivityContentProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ActivityContent",
          "declaration": {
            "name": "ActivityContent",
            "module": "client-deleted/src-react/Components/Activity/ActivityContent.lite.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Activity/ActivityContentContext.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "ActivityContentContextDefault",
          "type": {
            "text": "ActivityObject"
          },
          "default": "{\n  infos: [],\n  activityGroup: ActivityGroupActive,\n  id: '',\n}"
        },
        {
          "kind": "variable",
          "name": "ActivityContentContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ActivityContentContextDefault",
          "declaration": {
            "name": "ActivityContentContextDefault",
            "module": "client-deleted/src-react/Components/Activity/ActivityContentContext.ts"
          }
        },
        {
          "kind": "js",
          "name": "ActivityContentContext",
          "declaration": {
            "name": "ActivityContentContext",
            "module": "client-deleted/src-react/Components/Activity/ActivityContentContext.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Activity/ActivityContext.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "ActivityGroupActive",
          "type": {
            "text": "ActivityGroup"
          },
          "default": "'active'"
        },
        {
          "kind": "variable",
          "name": "ActivityGroupError",
          "type": {
            "text": "ActivityGroup"
          },
          "default": "'error'"
        },
        {
          "kind": "variable",
          "name": "ActivityGroupComplete",
          "type": {
            "text": "ActivityGroup"
          },
          "default": "'complete'"
        },
        {
          "kind": "variable",
          "name": "ActivityGroups",
          "type": {
            "text": "array"
          },
          "default": "[ActivityGroupActive, ActivityGroupError, ActivityGroupComplete]"
        },
        {
          "kind": "function",
          "name": "isActivityGroup",
          "return": {
            "type": {
              "text": "type is ActivityGroup"
            }
          },
          "parameters": [
            {
              "name": "type",
              "optional": true,
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "assertActivityGroup",
          "return": {
            "type": {
              "text": "asserts value is ActivityGroup"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            },
            {
              "name": "name",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "ActivityContextDefault",
          "type": {
            "text": "ActivityContextInterface"
          },
          "default": "{\n  label: '',\n  activities: [],\n  allActivities: [],\n  picked: ActivityGroupActive,\n  pick: EmptyFunction\n}"
        },
        {
          "kind": "variable",
          "name": "ActivityContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ActivityGroupActive",
          "declaration": {
            "name": "ActivityGroupActive",
            "module": "client-deleted/src-react/Components/Activity/ActivityContext.ts"
          }
        },
        {
          "kind": "js",
          "name": "ActivityGroupError",
          "declaration": {
            "name": "ActivityGroupError",
            "module": "client-deleted/src-react/Components/Activity/ActivityContext.ts"
          }
        },
        {
          "kind": "js",
          "name": "ActivityGroupComplete",
          "declaration": {
            "name": "ActivityGroupComplete",
            "module": "client-deleted/src-react/Components/Activity/ActivityContext.ts"
          }
        },
        {
          "kind": "js",
          "name": "ActivityGroups",
          "declaration": {
            "name": "ActivityGroups",
            "module": "client-deleted/src-react/Components/Activity/ActivityContext.ts"
          }
        },
        {
          "kind": "js",
          "name": "isActivityGroup",
          "declaration": {
            "name": "isActivityGroup",
            "module": "client-deleted/src-react/Components/Activity/ActivityContext.ts"
          }
        },
        {
          "kind": "js",
          "name": "assertActivityGroup",
          "declaration": {
            "name": "assertActivityGroup",
            "module": "client-deleted/src-react/Components/Activity/ActivityContext.ts"
          }
        },
        {
          "kind": "js",
          "name": "ActivityContextDefault",
          "declaration": {
            "name": "ActivityContextDefault",
            "module": "client-deleted/src-react/Components/Activity/ActivityContext.ts"
          }
        },
        {
          "kind": "js",
          "name": "ActivityContext",
          "declaration": {
            "name": "ActivityContext",
            "module": "client-deleted/src-react/Components/Activity/ActivityContext.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Activity/ActivityDefaultProps.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "ActivityDefaultProps",
          "parameters": [
            {
              "name": "props",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ActivityDefaultProps",
          "declaration": {
            "name": "ActivityDefaultProps",
            "module": "client-deleted/src-react/Components/Activity/ActivityDefaultProps.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Activity/ActivityItem.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "ActivityItem",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "ActivityItemProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ActivityItem",
          "declaration": {
            "name": "ActivityItem",
            "module": "client-deleted/src-react/Components/Activity/ActivityItem.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Activity/ActivityLabel.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "ActivityLabel",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "WithClassName"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ActivityLabel",
          "declaration": {
            "name": "ActivityLabel",
            "module": "client-deleted/src-react/Components/Activity/ActivityLabel.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Activity/ActivityPicked.lite.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "ActivityPicked",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "ActivityPickedProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "ActivityPicked",
            "module": "client-deleted/src-react/Components/Activity/ActivityPicked.lite.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Activity/ActivityPicker.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "ActivityPicker",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "ActivityPickerProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ActivityPicker",
          "declaration": {
            "name": "ActivityPicker",
            "module": "client-deleted/src-react/Components/Activity/ActivityPicker.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Activity/ActivityProgress.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "ActivityProgress",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "ActivityProgressProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ActivityProgress",
          "declaration": {
            "name": "ActivityProgress",
            "module": "client-deleted/src-react/Components/Activity/ActivityProgress.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Activity/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./Activity\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./ActivityContent.lite\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./ActivityContentContext\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./ActivityContext\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./ActivityItem\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./ActivityLabel\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./ActivityPicked.lite\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./ActivityPicker\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./ActivityProgress\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./ActivityDefaultProps\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Browser/Browser.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "Browser",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "BrowserProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Browser",
          "declaration": {
            "name": "Browser",
            "module": "client-deleted/src-react/Components/Browser/Browser.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Browser/BrowserContent.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "BrowserContent",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "BrowserContentProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BrowserContent",
          "declaration": {
            "name": "BrowserContent",
            "module": "client-deleted/src-react/Components/Browser/BrowserContent.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Browser/BrowserContext.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "BrowserContextDefault",
          "type": {
            "text": "BrowserContextInterface"
          },
          "default": "{\n  addPicker: EmptyFunction,\n  refresh: EmptyFunction,\n  definitions: [],\n  pick: EmptyFunction,\n  picked: '',\n  removePicker: EmptyFunction,\n}"
        },
        {
          "kind": "variable",
          "name": "BrowserContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BrowserContextDefault",
          "declaration": {
            "name": "BrowserContextDefault",
            "module": "client-deleted/src-react/Components/Browser/BrowserContext.ts"
          }
        },
        {
          "kind": "js",
          "name": "BrowserContext",
          "declaration": {
            "name": "BrowserContext",
            "module": "client-deleted/src-react/Components/Browser/BrowserContext.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Browser/BrowserControl.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "BrowserControl",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsAndChild"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BrowserControl",
          "declaration": {
            "name": "BrowserControl",
            "module": "client-deleted/src-react/Components/Browser/BrowserControl.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Browser/BrowserDefaultProps.tsx",
      "declarations": [
        {
          "kind": "variable",
          "name": "BrowserDefaultProps",
          "type": {
            "text": "PropsMethod<BrowserPropsDefault, BrowserProps>"
          },
          "default": "function (props = {}) {\n  const optionsStrict = panelOptionsStrict(props)\n  const { icons } = optionsStrict\n  // optionsStrict.props.key ||= 'browser'\n  optionsStrict.props.className ||= 'panel browser'\n  // optionsStrict.props.initialPicked ||= 'container'\n  optionsStrict.header.content ||= [\n    <View key=\"panel-icon\" children={icons.browser} />\n  ]\n\n  optionsStrict.footer.content ||= [\n    <BrowserPicker key='effect' id='effect' className={ClassButton} children={icons.effect} />,\n    <BrowserPicker key='container' id='container' className={ClassButton} children={icons.container} />,\n    <BrowserPicker key='content' id='content' className={ClassButton} children={icons.content} />,\n  ]\n  optionsStrict.footer.before ||= [\n    <BrowserPicker key='video' id='video' types='video,videosequence' className={ClassButton} children={icons.video} />,\n    <BrowserPicker key='audio' id='audio' className={ClassButton} children={icons.audio} />,\n    <BrowserPicker key='image' id='image' className={ClassButton} children={icons.image} />,\n    <BrowserPicker key='font' id='font' className={ClassButton} children={icons.font} />,\n  ]\n\n  optionsStrict.footer.after ||= [\n    <BrowserControl key='import'>{icons.upload}</BrowserControl>\n  ]\n\n  optionsStrict.content.children ||= (\n    <DefinitionItem draggable={true} className='definition preview' />\n  )\n\n  const children = <>\n    <Bar key='head' {...optionsStrict.header} />\n    <BrowserContent key='content' {...optionsStrict.content.props} />\n    <Bar key='foot' {...optionsStrict.footer} />\n  </>\n  \n  return { \n    initialPicked: 'container', \n    key: 'browser',\n    ...optionsStrict.props, children, \n  }\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BrowserDefaultProps",
          "declaration": {
            "name": "BrowserDefaultProps",
            "module": "client-deleted/src-react/Components/Browser/BrowserDefaultProps.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Browser/BrowserPicker.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "BrowserPicker",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "BrowserPickerProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BrowserPicker",
          "declaration": {
            "name": "BrowserPicker",
            "module": "client-deleted/src-react/Components/Browser/BrowserPicker.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Browser/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./Browser\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./BrowserContent\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./BrowserContext\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./BrowserPicker\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./BrowserDefaultProps\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./BrowserControl\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Button/Button.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "Button",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsButton"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Button",
            "module": "client-deleted/src-react/Components/Button/Button.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Button/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./Button\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Clickable/Clickable.lite.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "Clickable",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "ClickableProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Clickable",
            "module": "client-deleted/src-react/Components/Clickable/Clickable.lite.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Clickable/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Clickable.lite"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/ClipItem/ClipContext.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "ClipContextDefault",
          "type": {
            "text": "ClipContextInterface"
          },
          "default": "{\n  prevClipEnd: 0\n}"
        },
        {
          "kind": "variable",
          "name": "ClipContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClipContextDefault",
          "declaration": {
            "name": "ClipContextDefault",
            "module": "client-deleted/src-react/Components/ClipItem/ClipContext.ts"
          }
        },
        {
          "kind": "js",
          "name": "ClipContext",
          "declaration": {
            "name": "ClipContext",
            "module": "client-deleted/src-react/Components/ClipItem/ClipContext.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/ClipItem/ClipItem.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "ClipItem",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "ClipItemProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClipItem",
          "declaration": {
            "name": "ClipItem",
            "module": "client-deleted/src-react/Components/ClipItem/ClipItem.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/ClipItem/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./ClipContext\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./ClipItem\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./useClip\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/ClipItem/useClip.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "useClip",
          "return": {
            "type": {
              "text": "Clip"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "useClip",
          "declaration": {
            "name": "useClip",
            "module": "client-deleted/src-react/Components/ClipItem/useClip.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Collapse/CollapseContext.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "CollapseContextDefault",
          "type": {
            "text": "CollapseContextInterface"
          },
          "default": "{\n  collapsed: false,\n  changeCollapsed: () => {},\n}"
        },
        {
          "kind": "variable",
          "name": "CollapseContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CollapseContextDefault",
          "declaration": {
            "name": "CollapseContextDefault",
            "module": "client-deleted/src-react/Components/Collapse/CollapseContext.ts"
          }
        },
        {
          "kind": "js",
          "name": "CollapseContext",
          "declaration": {
            "name": "CollapseContext",
            "module": "client-deleted/src-react/Components/Collapse/CollapseContext.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Collapse/CollapseControl.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "CollapseControl",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsWithChildren"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CollapseControl",
          "declaration": {
            "name": "CollapseControl",
            "module": "client-deleted/src-react/Components/Collapse/CollapseControl.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Collapse/Collapsed.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "Collapsed",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsAndChildren"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Collapsed",
          "declaration": {
            "name": "Collapsed",
            "module": "client-deleted/src-react/Components/Collapse/Collapsed.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Collapse/NotCollapsed.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "NotCollapsed",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsAndChildren"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NotCollapsed",
          "declaration": {
            "name": "NotCollapsed",
            "module": "client-deleted/src-react/Components/Collapse/NotCollapsed.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Collapse/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./CollapseControl"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./NotCollapsed"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Collapsed"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./CollapseContext"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Controls/CreateEditedControl.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "CreateEditedControl",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsClickable"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CreateEditedControl",
          "declaration": {
            "name": "CreateEditedControl",
            "module": "client-deleted/src-react/Components/Controls/CreateEditedControl.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Controls/EditorRedoButton.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "EditorRedoButton",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsClickable"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EditorRedoButton",
          "declaration": {
            "name": "EditorRedoButton",
            "module": "client-deleted/src-react/Components/Controls/EditorRedoButton.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Controls/EditorRemoveButton.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "EditorRemoveButton",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "EditorRemoveButtonProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EditorRemoveButton",
          "declaration": {
            "name": "EditorRemoveButton",
            "module": "client-deleted/src-react/Components/Controls/EditorRemoveButton.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Controls/EditorUndoButton.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "EditorUndoButton",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsClickable"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EditorUndoButton",
          "declaration": {
            "name": "EditorUndoButton",
            "module": "client-deleted/src-react/Components/Controls/EditorUndoButton.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Controls/EncodeControl.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "EncodeControl",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsClickable"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EncodeControl",
          "declaration": {
            "name": "EncodeControl",
            "module": "client-deleted/src-react/Components/Controls/EncodeControl.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Controls/SaveControl.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "SaveControl",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsClickable"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SaveControl",
          "declaration": {
            "name": "SaveControl",
            "module": "client-deleted/src-react/Components/Controls/SaveControl.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Controls/ViewControl.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "ViewControl",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsClickable"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ViewControl",
          "declaration": {
            "name": "ViewControl",
            "module": "client-deleted/src-react/Components/Controls/ViewControl.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Controls/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./CreateEditedControl\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./EditorRedoButton\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./EditorRemoveButton\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./EditorUndoButton\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./EncodeControl\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./SaveControl\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./ViewControl\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/DefinitionItem/DefinitionItem.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "DefinitionItem",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "DefinitionItemProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DefinitionItem",
          "declaration": {
            "name": "DefinitionItem",
            "module": "client-deleted/src-react/Components/DefinitionItem/DefinitionItem.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/DefinitionItem/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "../../Contexts/DefinitionContext"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./DefinitionItem\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./useDefinition\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/DefinitionItem/useDefinition.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "useDefinition",
          "return": {
            "type": {
              "text": "Media"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "useDefinition",
          "declaration": {
            "name": "useDefinition",
            "module": "client-deleted/src-react/Components/DefinitionItem/useDefinition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Div/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DivContainer"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DivContainerClickable"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DivContainerDrag"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DivContainerDrop"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/Inspector.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "Inspector",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "InspectorProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Inspector",
          "declaration": {
            "name": "Inspector",
            "module": "client-deleted/src-react/Components/Inspector/Inspector.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/InspectorContent.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "InspectorContent",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsWithChildren"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectorContent",
          "declaration": {
            "name": "InspectorContent",
            "module": "client-deleted/src-react/Components/Inspector/InspectorContent.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/InspectorContext.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "InspectorContextDefault",
          "type": {
            "text": "InspectorContextInterface"
          },
          "default": "{\n  actionCount: 0,\n  selectedInfo: {\n    tweenDefined: {},\n    tweenSelected: {},\n    selectedType: NoneType,\n    selectTypes: [],\n  },\n  selectedItems: [],\n  changeSelected: EmptyFunction,\n  changeTweening: EmptyFunction,\n}"
        },
        {
          "kind": "variable",
          "name": "InspectorContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectorContextDefault",
          "declaration": {
            "name": "InspectorContextDefault",
            "module": "client-deleted/src-react/Components/Inspector/InspectorContext.ts"
          }
        },
        {
          "kind": "js",
          "name": "InspectorContext",
          "declaration": {
            "name": "InspectorContext",
            "module": "client-deleted/src-react/Components/Inspector/InspectorContext.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/InspectorDefaultProps.tsx",
      "declarations": [
        {
          "kind": "variable",
          "name": "InspectorDefaultProps",
          "type": {
            "text": "PropsMethod<InspectorPropsDefault, InspectorProps>"
          },
          "default": "function (props = {}) {\n  const optionsStrict = panelOptionsStrict(props)\n  const { icons } = optionsStrict\n  // optionsStrict.props.key ||= 'inspector'\n  optionsStrict.props.className ||= 'panel inspector'\n\n  optionsStrict.header.content ||= [\n    <View key=\"panel-icon\" children={icons.inspector} />,\n    <EditorUndoButton key='undo' button={true} label='undo'>\n      {icons.undo}\n    </EditorUndoButton>,\n    <EditorRedoButton key='redo' button={true} label='redo'>\n      {icons.redo}\n    </EditorRedoButton>,\n  ]\n \n  optionsStrict.footer.content ||= [\n    <InspectorPicker key=\"mash\" className={ClassButton} id=\"mash\">\n      {icons.mash}\n    </InspectorPicker>,\n    <InspectorPicker key=\"clip\" className={ClassButton} id=\"clip\">\n      {icons.clip}\n    </InspectorPicker>,\n    <InspectorPicker key=\"container\" className={ClassButton} id=\"container\">\n      {icons.container}\n    </InspectorPicker>,\n    <InspectorPicker key=\"content\" className={ClassButton} id=\"content\">\n      {icons.content}\n    </InspectorPicker>,\n ]\n\n  const contentChildren = [<InspectorProperties key=\"properties\" />]\n  const types = [ClipType, TrackType]\n\n  contentChildren.push(\n    <InspectorPicked type=\"mash\" key=\"inspector-mash\">\n      <View>\n        <EncodeControl button={true} key='render-process'>\n          <TranslationSpan id='render' />\n          {icons.endcode}\n        </EncodeControl>\n        <ViewControl button={true} key='view-control'>\n          <TranslationSpan id=\"view\" />\n          {icons.view}\n        </ViewControl>    \n      </View>  \n    </InspectorPicked>\n  )\n\n  types.forEach(type => {\n    contentChildren.push(\n      <InspectorPicked key={`${type}-delete`} type={type}>\n        <EditorRemoveButton button={true} type={type}>\n          <TranslationSpan id=\"delete\" values={{ type }} />\n          {icons.remove}\n        </EditorRemoveButton>\n      </InspectorPicked>\n    )\n  })\n  \n  optionsStrict.content.children ||= <>{contentChildren}</>\n\n  const children = <>\n    <Bar key='head' {...optionsStrict.header} />\n    <InspectorContent key='content' {...optionsStrict.content.props}>\n      {optionsStrict.content.children}\n    </InspectorContent>\n    <Bar key='foot' {...optionsStrict.footer} />\n  </>\n  return { \n    key: 'inspector',\n    ...optionsStrict.props, children \n  }\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectorDefaultProps",
          "declaration": {
            "name": "InspectorDefaultProps",
            "module": "client-deleted/src-react/Components/Inspector/InspectorDefaultProps.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/InspectorMovable.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "InspectorMovable",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "InspectorMovableProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectorMovable",
          "declaration": {
            "name": "InspectorMovable",
            "module": "client-deleted/src-react/Components/Inspector/InspectorMovable.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/InspectorPicked.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "InspectorPicked",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "InspectorPickedProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectorPicked",
          "declaration": {
            "name": "InspectorPicked",
            "module": "client-deleted/src-react/Components/Inspector/InspectorPicked.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/InspectorPicker.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "InspectorPicker",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "InspectorPickerProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectorPicker",
          "declaration": {
            "name": "InspectorPicker",
            "module": "client-deleted/src-react/Components/Inspector/InspectorPicker.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/InspectorProperties.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "InspectorProperties",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "InspectorPropertiesProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectorProperties",
          "declaration": {
            "name": "InspectorProperties",
            "module": "client-deleted/src-react/Components/Inspector/InspectorProperties.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/InspectorProperty.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "InspectorProperty",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "InspectorPropertyProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectorProperty",
          "declaration": {
            "name": "InspectorProperty",
            "module": "client-deleted/src-react/Components/Inspector/InspectorProperty.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./Inputs\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./Inspector\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./InspectorContent\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./InspectorContext\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./InspectorDefaultProps\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./InspectorMovable\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./InspectorPicked\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./InspectorPicker\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./InspectorProperties\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./InspectorProperty\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Masher/MasherApp.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Masher/MasherAppDefaultProps.tsx",
      "declarations": [
        {
          "kind": "variable",
          "name": "MasherAppDefaultProps",
          "type": {
            "text": "PropsMethod<MasherAppOptions, MasherAppProps>"
          },
          "default": "function(options = {}) {\n  options.icons ||= Icons\n  const { panels = {}, ...rest } = options\n  const { \n    player = {}, \n    browser = {}, \n    timeline = {}, \n    inspector = {}, \n    activity = {},\n  } = panels\n  const masherChildren: JsxElements = []\n\n\n  if (player) {\n    player.icons ||= options.icons\n    masherChildren.push(<Player { ...PlayerDefaultProps(player) } />)\n  }\n  if (browser) {\n    browser.icons ||= options.icons\n    masherChildren.push(<Browser { ...BrowserDefaultProps(browser) } />)\n  }\n  if (inspector || activity) {\n    const panelsChildren: JsxElements = []\n    if (activity) {\n      activity.icons ||= options.icons\n      panelsChildren.push(<Activity { ...ActivityDefaultProps(activity) } />)\n    }   \n    if (inspector) {  \n      inspector.icons ||= options.icons\n      panelsChildren.push(<Inspector { ...InspectorDefaultProps(inspector) } />)\n    }\n    const panelsProps = {\n      children: panelsChildren, key: 'panels', className: 'panels'\n    }\n    masherChildren.push(<Panels { ...panelsProps } />)\n  }\n  if (timeline) {\n    timeline.icons ||= options.icons\n    masherChildren.push(<Timeline { ...TimelineDefaultProps(timeline) } />)\n  }\n\n\n  return {\n    className: 'masher', \n    ...rest, \n    mashingType: VideoType, \n    children: masherChildren\n  }\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MasherAppDefaultProps",
          "declaration": {
            "name": "MasherAppDefaultProps",
            "module": "client-deleted/src-react/Components/Masher/MasherAppDefaultProps.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Masher/MasherAppFunction.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "MasherApp",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "MasherAppProps"
              }
            }
          ],
          "description": "{@codeblock ../../../../../packages/example/react/src/index.html}",
          "return": {
            "type": {
              "text": ""
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MasherApp",
          "declaration": {
            "name": "MasherApp",
            "module": "client-deleted/src-react/Components/Masher/MasherAppFunction.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Masher/MasherContext.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "MasherContextDefault",
          "type": {
            "text": "MasherContextInterface"
          },
          "default": "{\n  current: {},\n  changeDefinition: EmptyFunction,\n  drop: () => Promise.resolve([]),\n  editorIndex: {},\n  icons: {},\n}"
        },
        {
          "kind": "variable",
          "name": "MasherContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MasherContextDefault",
          "declaration": {
            "name": "MasherContextDefault",
            "module": "client-deleted/src-react/Components/Masher/MasherContext.ts"
          }
        },
        {
          "kind": "js",
          "name": "MasherContext",
          "declaration": {
            "name": "MasherContext",
            "module": "client-deleted/src-react/Components/Masher/MasherContext.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MasherContext",
            "module": "client-deleted/src-react/Components/Masher/MasherContext.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Masher/Mashing.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "Mashing",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "MashingProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Mashing",
          "declaration": {
            "name": "Mashing",
            "module": "client-deleted/src-react/Components/Masher/Mashing.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Masher/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./MasherContext"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./MasherAppFunction\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./MasherAppDefaultProps\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./Mashing\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Panel/Panel.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "panelOptionsStrict",
          "return": {
            "type": {
              "text": "PanelOptionsStrict"
            }
          },
          "parameters": [
            {
              "name": "options",
              "type": {
                "text": "PanelOptions"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "Panel",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PanelProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "panelOptionsStrict",
          "declaration": {
            "name": "panelOptionsStrict",
            "module": "client-deleted/src-react/Components/Panel/Panel.tsx"
          }
        },
        {
          "kind": "js",
          "name": "Panel",
          "declaration": {
            "name": "Panel",
            "module": "client-deleted/src-react/Components/Panel/Panel.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Panel/PanelContent.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "PanelContent",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PanelContentProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PanelContent",
          "declaration": {
            "name": "PanelContent",
            "module": "client-deleted/src-react/Components/Panel/PanelContent.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Panel/PanelHead.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "PanelHead",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PanelHeadProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PanelHead",
          "declaration": {
            "name": "PanelHead",
            "module": "client-deleted/src-react/Components/Panel/PanelHead.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Panel/Panels.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "Panels",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PanelsProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Panels",
          "declaration": {
            "name": "Panels",
            "module": "client-deleted/src-react/Components/Panel/Panels.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Panel/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Panel"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./PanelContent"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./PanelHead"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Panels"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Player/Player.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "Player",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PlayerProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Player",
          "declaration": {
            "name": "Player",
            "module": "client-deleted/src-react/Components/Player/Player.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Player/PlayerButton.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "PlayerButton",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsClickable"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PlayerButton",
          "declaration": {
            "name": "PlayerButton",
            "module": "client-deleted/src-react/Components/Player/PlayerButton.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Player/PlayerContent.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "PlayerContent",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsWithChildren"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PlayerContent",
          "declaration": {
            "name": "PlayerContent",
            "module": "client-deleted/src-react/Components/Player/PlayerContent.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Player/PlayerContext.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "PlayerContextDefault",
          "type": {
            "text": "PlayerContextInterface"
          },
          "default": "{\n  paused: false,\n  changePaused: EmptyFunction,\n  changeVolume: EmptyFunction,\n  volume: 0,\n}"
        },
        {
          "kind": "variable",
          "name": "PlayerContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PlayerContextDefault",
          "declaration": {
            "name": "PlayerContextDefault",
            "module": "client-deleted/src-react/Components/Player/PlayerContext.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlayerContext",
          "declaration": {
            "name": "PlayerContext",
            "module": "client-deleted/src-react/Components/Player/PlayerContext.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Player/PlayerDefaultProps.tsx",
      "declarations": [
        {
          "kind": "variable",
          "name": "PlayerDefaultProps",
          "type": {
            "text": "PropsMethod<PlayerPropsDefault, PlayerProps>"
          },
          "default": "function (props = {}) {\n  const optionsStrict = panelOptionsStrict(props)\n  const { icons } = optionsStrict\n  // optionsStrict.props.key ||= 'player'\n  optionsStrict.props.className ||= 'panel player'\n\n\n  optionsStrict.content.children ||= (\n    <PlayerContent key='content' {...optionsStrict.content.props}>\n      <View key=\"drop-box\" className=\"drop-box\" />\n    </PlayerContent>\n  )\n  optionsStrict.header.content ||= [\n    <Test />,\n    <View key=\"panel-icon\" children={icons.app} />,\n    <SaveControl button={true} key='save-process'>\n      <TranslationSpan id=\"update\" />\n      {icons.document}\n    </SaveControl>,\n    <CreateEditedControl button={true} key=\"create-mash\">\n      <TranslationSpan id=\"create\" />\n      {icons.document}\n    </CreateEditedControl>\n  ]\n  \n  optionsStrict.footer.content ||= [\n    <PlayerButton key='play-button' className={ClassButton} />,\n    <PlayerTimeControl key='time-slider'/>,\n    <PlayerTime key='time' className=\"time\" />,\n  ]\n\n  const children = <>\n    <Bar key='head' {...optionsStrict.header} />\n    {optionsStrict.content.children}\n    <Bar key='foot' {...optionsStrict.footer} />\n  </>\n  return { \n    key: 'player',\n    ...optionsStrict.props, children \n  }\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PlayerDefaultProps",
          "declaration": {
            "name": "PlayerDefaultProps",
            "module": "client-deleted/src-react/Components/Player/PlayerDefaultProps.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Player/PlayerNotPlaying.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "PlayerNotPlaying",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsAndChild"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PlayerNotPlaying",
          "declaration": {
            "name": "PlayerNotPlaying",
            "module": "client-deleted/src-react/Components/Player/PlayerNotPlaying.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Player/PlayerPlaying.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "PlayerPlaying",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsAndChild"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PlayerPlaying",
          "declaration": {
            "name": "PlayerPlaying",
            "module": "client-deleted/src-react/Components/Player/PlayerPlaying.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Player/PlayerTime.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "PlayerTime",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PlayerTimeProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PlayerTime",
          "declaration": {
            "name": "PlayerTime",
            "module": "client-deleted/src-react/Components/Player/PlayerTime.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Player/PlayerTimeControl.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "PlayerTimeControl",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsWithChildren"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PlayerTimeControl",
          "declaration": {
            "name": "PlayerTimeControl",
            "module": "client-deleted/src-react/Components/Player/PlayerTimeControl.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Player/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./PlayerContext"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./Player\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./PlayerButton\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./PlayerContent\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./PlayerNotPlaying\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./PlayerPlaying\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./PlayerDefaultProps\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./PlayerTime\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./PlayerTimeControl\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Span/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./SpanContainer"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Test/Test.lite.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "isSvg",
          "return": {
            "type": {
              "text": "value is SVGSVGElement"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "assertSvg",
          "return": {
            "type": {
              "text": "asserts value is SVGSVGElement"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "MMIcon"
        },
        {
          "kind": "function",
          "name": "Test"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isSvg",
          "declaration": {
            "name": "isSvg",
            "module": "client-deleted/src-react/Components/Test/Test.lite.tsx"
          }
        },
        {
          "kind": "js",
          "name": "assertSvg",
          "declaration": {
            "name": "assertSvg",
            "module": "client-deleted/src-react/Components/Test/Test.lite.tsx"
          }
        },
        {
          "kind": "js",
          "name": "MMIcon",
          "declaration": {
            "name": "MMIcon",
            "module": "client-deleted/src-react/Components/Test/Test.lite.tsx"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Test",
            "module": "client-deleted/src-react/Components/Test/Test.lite.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Test/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Test.lite"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Text/Text.lite.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "Text",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "TextProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Text",
            "module": "client-deleted/src-react/Components/Text/Text.lite.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Text/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Text.lite"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Timeline/Timeline.tsx",
      "declarations": [
        {
          "kind": "variable",
          "name": "TimelineDefaultZoom",
          "type": {
            "text": "number"
          },
          "default": "1.0"
        },
        {
          "kind": "function",
          "name": "Timeline",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "TimelineProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimelineDefaultZoom",
          "declaration": {
            "name": "TimelineDefaultZoom",
            "module": "client-deleted/src-react/Components/Timeline/Timeline.tsx"
          }
        },
        {
          "kind": "js",
          "name": "Timeline",
          "declaration": {
            "name": "Timeline",
            "module": "client-deleted/src-react/Components/Timeline/Timeline.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Timeline/TimelineAddClipControl.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "TimelineAddClipControl",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsClickable"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimelineAddClipControl",
          "declaration": {
            "name": "TimelineAddClipControl",
            "module": "client-deleted/src-react/Components/Timeline/TimelineAddClipControl.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Timeline/TimelineAddTrackControl.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "TimelineAddTrackControl",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsClickable"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimelineAddTrackControl",
          "declaration": {
            "name": "TimelineAddTrackControl",
            "module": "client-deleted/src-react/Components/Timeline/TimelineAddTrackControl.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Timeline/TimelineContent.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "TimelineContent",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsWithChildren"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimelineContent",
          "declaration": {
            "name": "TimelineContent",
            "module": "client-deleted/src-react/Components/Timeline/TimelineContent.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Timeline/TimelineContext.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "TimelineContextDefault",
          "type": {
            "text": "TimelineContextInterface"
          },
          "default": "{\n  dragTypeValid(): boolean { return false },\n  frame: 0,\n  frames: 0,\n  onDragLeave: EmptyFunction,\n  onDrop: EmptyFunction,\n  rect: RECT_ZERO,\n  refreshed: 0, refresh: EmptyFunction,\n  scale: 0,\n  scroll: { x: 0, y: 0 },\n  setDroppingClip: EmptyFunction,\n  setDroppingPosition: EmptyFunction,\n  setDroppingTrack: EmptyFunction,\n  setRect: EmptyFunction,\n  setScroll: EmptyFunction,\n  setZoom: EmptyFunction,\n  zoom: 1,\n}"
        },
        {
          "kind": "variable",
          "name": "TimelineContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimelineContextDefault",
          "declaration": {
            "name": "TimelineContextDefault",
            "module": "client-deleted/src-react/Components/Timeline/TimelineContext.ts"
          }
        },
        {
          "kind": "js",
          "name": "TimelineContext",
          "declaration": {
            "name": "TimelineContext",
            "module": "client-deleted/src-react/Components/Timeline/TimelineContext.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Timeline/TimelineDefaultProps.tsx",
      "declarations": [
        {
          "kind": "variable",
          "name": "TimelineDefaultProps",
          "type": {
            "text": "PropsMethod<TimelinePropsDefault, TimelineProps>"
          },
          "default": "function(props = {}) {\n  const optionsStrict = panelOptionsStrict(props)\n  const { icons } = optionsStrict\n  // optionsStrict.props.key ||= 'timeline'\n  optionsStrict.props.className ||= 'panel timeline'\n\n  optionsStrict.header.content ||= [\n    <View key=\"panel-icon\" children={icons.timeline} />,\n  ]\n\n  optionsStrict.footer.content ||= [\n    <TimelineAddClipControl key='add-clip'>\n      {icons.add}\n    </TimelineAddClipControl>,\n    <TimelineAddTrackControl key='add-track'>\n      {icons.add}\n      {icons.trackDense}\n    </TimelineAddTrackControl>,\n    <TimelineZoom key=\"zoom-out\" zoom={0}>\n      {icons.zoomLess}\n    </TimelineZoom>,\n    <TimelineZoomer key='zoomer'/>,\n    <TimelineZoom key=\"zoom-in\" zoom={1}>\n     {icons.zoomMore}\n    </TimelineZoom>,\n  ]\n\n  optionsStrict.content.children ||= <>\n    <TimelineScrubber styleWidth={true} inactive={true} styleHeight={true} className='scrubber-bar'>\n      <TimelineScrubberElement className='scrubber-element-bar' />\n    </TimelineScrubber>\n    <TimelineScrubber styleWidth={true} className='scrubber-icon'>\n      <TimelineScrubberElement className='scrubber-element-icon'/>\n    </TimelineScrubber>\n    <TimelineTracks>\n      <TimelineTrackIcon className='track-icon' icons={icons} />\n      <TimelineTrack className='track'>\n        <ClipItem className='clip preview' />\n      </TimelineTrack>\n    </TimelineTracks>\n    <TimelineSizer className='drop-box' />\n  </>\n  \n  const children = <>\n    <Bar key='head' {...optionsStrict.header} />\n    <TimelineContent key='content' {...optionsStrict.content.props}>\n      {optionsStrict.content.children}\n    </TimelineContent>\n    <Bar key='foot' {...optionsStrict.footer} />\n  </>\n\n  return { \n    key: 'timeline',\n    ...optionsStrict.props, children \n  }\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimelineDefaultProps",
          "declaration": {
            "name": "TimelineDefaultProps",
            "module": "client-deleted/src-react/Components/Timeline/TimelineDefaultProps.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Timeline/TimelineScrubber.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "TimelineScrubber",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "TimelineScrubber"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimelineScrubber",
          "declaration": {
            "name": "TimelineScrubber",
            "module": "client-deleted/src-react/Components/Timeline/TimelineScrubber.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Timeline/TimelineScrubberElement.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "TimelineScrubberElement",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsWithChildren"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimelineScrubberElement",
          "declaration": {
            "name": "TimelineScrubberElement",
            "module": "client-deleted/src-react/Components/Timeline/TimelineScrubberElement.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Timeline/TimelineSizer.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "TimelineSizer",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsWithChildren"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimelineSizer",
          "declaration": {
            "name": "TimelineSizer",
            "module": "client-deleted/src-react/Components/Timeline/TimelineSizer.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Timeline/TimelineTrack.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "TimelineTrack",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "TimelineTrackProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimelineTrack",
          "declaration": {
            "name": "TimelineTrack",
            "module": "client-deleted/src-react/Components/Timeline/TimelineTrack.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Timeline/TimelineTrackIcon.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "TimelineTrackIcon",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "TimelineTrackIconProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimelineTrackIcon",
          "declaration": {
            "name": "TimelineTrackIcon",
            "module": "client-deleted/src-react/Components/Timeline/TimelineTrackIcon.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Timeline/TimelineTracks.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "TimelineTracks",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "TimelineTracksProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimelineTracks",
          "declaration": {
            "name": "TimelineTracks",
            "module": "client-deleted/src-react/Components/Timeline/TimelineTracks.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Timeline/TimelineZoom.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "TimelineZoom",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "TimelineZoomProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimelineZoom",
          "declaration": {
            "name": "TimelineZoom",
            "module": "client-deleted/src-react/Components/Timeline/TimelineZoom.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Timeline/TimelineZoomer.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "TimelineZoomer",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsWithChildren"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimelineZoomer",
          "declaration": {
            "name": "TimelineZoomer",
            "module": "client-deleted/src-react/Components/Timeline/TimelineZoomer.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Timeline/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./Timeline\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./TimelineAddClipControl\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./TimelineAddTrackControl\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./TimelineContent\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./TimelineContext\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./TimelineDefaultProps\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./TimelineScrubber\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./TimelineScrubberElement\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./TimelineSizer\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./TimelineTrack\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./TimelineTrackIcon\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./TimelineTracks\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./TimelineZoom\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./TimelineZoomer\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Translation/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./TranslationLabel"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./TranslationSpan"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./TranslationText"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Framework/Show/Show.lite.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "Show",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "ShowProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Show",
            "module": "client-deleted/src-react/Framework/Show/Show.lite.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Framework/Show/Show.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Framework/Show/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./Show.lite\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./Show\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Div/DivContainer/DivContainer.lite.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "DivContainer",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsWithChildren"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "DivContainer",
            "module": "client-deleted/src-react/Components/Div/DivContainer/DivContainer.lite.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Div/DivContainer/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DivContainer.lite"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Div/DivContainerClickable/DivContainerClickable.lite.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "DivContainerClickable",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsDivContainerClickable"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "DivContainerClickable",
            "module": "client-deleted/src-react/Components/Div/DivContainerClickable/DivContainerClickable.lite.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Div/DivContainerClickable/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DivContainerClickable.lite"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Div/DivContainerDrag/DivContainerDrag.lite.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "DivContainerDrag"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "DivContainerDrag",
            "module": "client-deleted/src-react/Components/Div/DivContainerDrag/DivContainerDrag.lite.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Div/DivContainerDrag/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DivContainerDrag.lite"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Div/DivContainerDrop/DivContainerDrop.lite.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "DivContainerDrop"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "DivContainerDrop",
            "module": "client-deleted/src-react/Components/Div/DivContainerDrop/DivContainerDrop.lite.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Div/DivContainerDrop/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DivContainerDrop.lite"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/Inputs/InputContext.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "InputContextDefault",
          "type": {
            "text": "InputContextInterface"
          },
          "default": "{\n  changeHandler: EmptyFunction,\n  value: '',\n  name: '',\n  property: { type: DataTypeString, name: '', defaultValue: '' }\n}"
        },
        {
          "kind": "variable",
          "name": "InputContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InputContextDefault",
          "declaration": {
            "name": "InputContextDefault",
            "module": "client-deleted/src-react/Components/Inspector/Inputs/InputContext.ts"
          }
        },
        {
          "kind": "js",
          "name": "InputContext",
          "declaration": {
            "name": "InputContext",
            "module": "client-deleted/src-react/Components/Inspector/Inputs/InputContext.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/Inputs/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./InputContext"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./DataGroupInputs\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./DataTypeInputs\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Span/SpanContainer/SpanContainer.lite.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "SpanContainer",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropsWithChildren"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "SpanContainer",
            "module": "client-deleted/src-react/Components/Span/SpanContainer/SpanContainer.lite.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Span/SpanContainer/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./SpanContainer.lite"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Translation/TranslationLabel/TranslationLabel.lite.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "TranslationLabel",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "TranslationLabelProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "TranslationLabel",
            "module": "client-deleted/src-react/Components/Translation/TranslationLabel/TranslationLabel.lite.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Translation/TranslationLabel/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./TranslationLabel.lite\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Translation/TranslationSpan/TranslationSpan.lite.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "TranslationSpan",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "TranslationProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "TranslationSpan",
            "module": "client-deleted/src-react/Components/Translation/TranslationSpan/TranslationSpan.lite.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Translation/TranslationSpan/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./TranslationSpan.lite\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Translation/TranslationText/TranslationText.lite.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "TranslationText",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "TranslationProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "TranslationText",
            "module": "client-deleted/src-react/Components/Translation/TranslationText/TranslationText.lite.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Translation/TranslationText/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./TranslationText.lite\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/Inputs/DataGroupInputs/ColorGroupInput.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "ColorGroupInput",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "DataGroupProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ColorGroupInput",
          "declaration": {
            "name": "ColorGroupInput",
            "module": "client-deleted/src-react/Components/Inspector/Inputs/DataGroupInputs/ColorGroupInput.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/Inputs/DataGroupInputs/DataGroupInputs.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "DataGroupInputs",
          "type": {
            "text": "DataGroupElements"
          },
          "default": "{\n  color: EmptyElement,\n  effects: EmptyElement,\n  opacity: EmptyElement,\n  point: EmptyElement,\n  size: EmptyElement,\n  timing: EmptyElement\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DataGroupInputs",
          "declaration": {
            "name": "DataGroupInputs",
            "module": "client-deleted/src-react/Components/Inspector/Inputs/DataGroupInputs/DataGroupInputs.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/Inputs/DataGroupInputs/MovablesGroupInput.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/Inputs/DataGroupInputs/OpacityGroupInput.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "OpacityGroupInput",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "DataGroupProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OpacityGroupInput",
          "declaration": {
            "name": "OpacityGroupInput",
            "module": "client-deleted/src-react/Components/Inspector/Inputs/DataGroupInputs/OpacityGroupInput.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/Inputs/DataGroupInputs/OptionGroupInput.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "OptionGroupInput",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "OptionGroupInputProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OptionGroupInput",
          "declaration": {
            "name": "OptionGroupInput",
            "module": "client-deleted/src-react/Components/Inspector/Inputs/DataGroupInputs/OptionGroupInput.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/Inputs/DataGroupInputs/PointGroupInput.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "PointGroupInput",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "DataGroupProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PointGroupInput",
          "declaration": {
            "name": "PointGroupInput",
            "module": "client-deleted/src-react/Components/Inspector/Inputs/DataGroupInputs/PointGroupInput.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/Inputs/DataGroupInputs/SizeGroupInput.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "SizeGroupInput",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "DataGroupProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SizeGroupInput",
          "declaration": {
            "name": "SizeGroupInput",
            "module": "client-deleted/src-react/Components/Inspector/Inputs/DataGroupInputs/SizeGroupInput.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/Inputs/DataGroupInputs/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DataGroupInputs"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./ColorGroupInput\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./MovablesGroupInput\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./OpacityGroupInput\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./PointGroupInput\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./SizeGroupInput\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./OptionGroupInput\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/Inputs/DataTypeInputs/BooleanTypeInput.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "BooleanTypeInput"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BooleanTypeInput",
          "declaration": {
            "name": "BooleanTypeInput",
            "module": "client-deleted/src-react/Components/Inspector/Inputs/DataTypeInputs/BooleanTypeInput.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/Inputs/DataTypeInputs/DataTypeInputs.tsx",
      "declarations": [
        {
          "kind": "variable",
          "name": "DataTypeInputs",
          "type": {
            "text": "DataTypeElements"
          },
          "default": "{\n  string: EmptyElement,\n  number: EmptyElement,\n  boolean: EmptyElement,\n  containerid: EmptyElement,\n  contentid: EmptyElement,\n  definitionid: EmptyElement,\n  fontid: EmptyElement,\n  frame: EmptyElement,\n  icon: EmptyElement,\n  option: EmptyElement,\n  percent: EmptyElement,\n  rgb: EmptyElement\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DataTypeInputs",
          "declaration": {
            "name": "DataTypeInputs",
            "module": "client-deleted/src-react/Components/Inspector/Inputs/DataTypeInputs/DataTypeInputs.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/Inputs/DataTypeInputs/DefinitionDrop.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "DefinitionDrop",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "DefinitionDropProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DefinitionDrop",
          "declaration": {
            "name": "DefinitionDrop",
            "module": "client-deleted/src-react/Components/Inspector/Inputs/DataTypeInputs/DefinitionDrop.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/Inputs/DataTypeInputs/DefinitionSelect.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "DefinitionSelect"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DefinitionSelect",
          "declaration": {
            "name": "DefinitionSelect",
            "module": "client-deleted/src-react/Components/Inspector/Inputs/DataTypeInputs/DefinitionSelect.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/Inputs/DataTypeInputs/IconTypeInput.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "IconTypeInput"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "IconTypeInput",
          "declaration": {
            "name": "IconTypeInput",
            "module": "client-deleted/src-react/Components/Inspector/Inputs/DataTypeInputs/IconTypeInput.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/Inputs/DataTypeInputs/NumericTypeInput.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "NumericTypeInput"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NumericTypeInput",
          "declaration": {
            "name": "NumericTypeInput",
            "module": "client-deleted/src-react/Components/Inspector/Inputs/DataTypeInputs/NumericTypeInput.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/Inputs/DataTypeInputs/OptionTypeInput.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "OptionTypeInput"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OptionTypeInput",
          "declaration": {
            "name": "OptionTypeInput",
            "module": "client-deleted/src-react/Components/Inspector/Inputs/DataTypeInputs/OptionTypeInput.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/Inputs/DataTypeInputs/PercentTypeInput.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "PercentTypeInput"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PercentTypeInput",
          "declaration": {
            "name": "PercentTypeInput",
            "module": "client-deleted/src-react/Components/Inspector/Inputs/DataTypeInputs/PercentTypeInput.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/Inputs/DataTypeInputs/RgbTypeInput.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "RgbTypeInput"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RgbTypeInput",
          "declaration": {
            "name": "RgbTypeInput",
            "module": "client-deleted/src-react/Components/Inspector/Inputs/DataTypeInputs/RgbTypeInput.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/Inputs/DataTypeInputs/TextTypeInput.tsx",
      "declarations": [
        {
          "kind": "function",
          "name": "TextTypeInput"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TextTypeInput",
          "declaration": {
            "name": "TextTypeInput",
            "module": "client-deleted/src-react/Components/Inspector/Inputs/DataTypeInputs/TextTypeInput.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "client-deleted/src-react/Components/Inspector/Inputs/DataTypeInputs/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DataTypeInputs"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./BooleanTypeInput\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./DefinitionDrop\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./DefinitionSelect\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./IconTypeInput\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./NumericTypeInput\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./OptionTypeInput\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./PercentTypeInput\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./RgbTypeInput\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./TextTypeInput\""
          }
        }
      ]
    }
  ]
}
