{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/declarations.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/hello.test.e2e.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Base/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asset/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./clip/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./component/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./composer/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./control/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./declarations.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./icon/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./importer/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./inspector/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./instance/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./movie-masher.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./selector/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utility/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./viewer/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./media/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Client/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/movie-masher.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MovieMasherElement",
          "members": [
            {
              "kind": "field",
              "name": "_assetObject",
              "type": {
                "text": "AssetObject | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "assetObject",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "attribute": "icon"
            },
            {
              "kind": "field",
              "name": "imports",
              "privacy": "public",
              "type": {
                "text": "string | undefined | undefined"
              },
              "attribute": "imports"
            },
            {
              "kind": "field",
              "name": "masher",
              "type": {
                "text": "Masher | undefined | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_masherPromise",
              "type": {
                "text": "Promise<void> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "masherPromise",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "masherPromiseInitialize",
              "type": {
                "text": "Promise<void>"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssVariablesLayout",
              "static": true,
              "default": "css`\n    :host {\n      --max-dimension: 480px;\n      --ratio-preview: 0.25;\n      --control-size: 24px;\n      --control-padding: 10px;\n      --control-spacing: 5px;\n\n      --label-size: var(--control-size);\n\n      --content-padding: 10px;\n      --content-spacing: 10px;\n\n\n      --viewer-width: 270px;\n      --viewer-height: 480px;\n      --scrubber-height: 16px;\n      --scrubber-width: 16px;\n      --inspector-width: 240px;\n      --track-width: 34px;\n      --track-height: 60px;\n      --footer-height: 38px;\n      --gap: 20px;\n      --header-height: 38px;\n      --flex-direction: row;\n      --dialog-height: 50vh;\n      --dialog-width: 50vw;\n      --padding: 40px;\n      --spacing: 20px;\n      --icon-size: 24px;\n      \n      --inspector-spacing: 5px;\n      --inspector-padding: 10px;\n    }\n  `"
            },
            {
              "kind": "field",
              "name": "cssVariables",
              "static": true,
              "default": "css`\n    :host {\n    \n      --border-radius: 5px;\n      --border-size: 1px;\n      --border: var(--border-size) solid;\n      --button-size: 24px;\n\n\n      --button-transition:\n          background-color 0.25s ease-out,\n          border-color 0.25s ease-out,\n          color 0.25s ease-out;\n\n      --hue: 281;\n      \n      --chroma-primary: 0.085;\n      /* --chroma-secondary: 0.1; */\n      /* --chroma-tertiary: 0.125; */\n\n      --lightness-back-primary: 95%;\n      --lightness-back-secondary: 75%;\n      --lightness-back-tertiary: 55%;\n\n      --lightness-fore-primary: 45%;\n      --lightness-fore-secondary: 35%;\n      --lightness-fore-tertiary: 25%;\n    \n      --darkness-back-primary: 5%;\n      --darkness-back-secondary: 25%;\n      --darkness-back-tertiary: 30%;\n\n      --darkness-fore-primary: 45%;\n      --darkness-fore-secondary: 60%;\n      --darkness-fore-tertiary: 75%;\n\n      \n      \n      --drop-size: 2px;\n      \n      --dropping-shadow: \n        var(--drop-size) var(--drop-size) 0 0 var(--color-drop) inset,\n        calc(-1 * var(--drop-size)) calc(-1 * var(--drop-size)) 0 0 var(--color-drop) inset;\n      ;\n\n      --div-pad: 20px;\n      --div-space: 20px;\n      --div-back: oklch(var(--lightness-back-primary) 0 0);\n      --div-fore: oklch(var(--lightness-fore-primary) 0 0);\n\n      --section-padding: 5px;\n      --section-spacing: 5px;\n      --section-fore: oklch(var(--lightness-fore-tertiary) 0 0);\n      --section-back: oklch(var(--lightness-back-tertiary) 0 0);\n        \n      --control-back: oklch(var(--lightness-back-secondary) 0 0);\n      --control-back-disabled: var(--control-back);\n      --control-back-hover: var(--control-back);\n      --control-back-selected: var(--control-back);\n\n      --control-hover-selected: oklch(var(--lightness-fore-primary) var(--chroma-primary) var(--hue));\n      --control-fore-disabled: oklch(var(--lightness-fore-secondary) 0 0);\n\n      --control-fore-hover: var(--control-hover-selected);\n      --control-fore-selected:var(--control-hover-selected);\n      --control-fore: var(--fore-secondary);\n      --control-padding: 5px;\n      --control-spacing: 5px;\n\n      --item-fore: var(--control-fore);\n      --item-fore-selected: var(--control-fore-selected);\n      --item-fore-hover: var(--control-fore-hover);\n      --item-back: var(--control-back);\n      --item-back-hover-selected: oklch(var(--lightness-back-primary) var(--chroma-primary) var(--hue));\n\n      --item-back-selected: var(--item-back-hover-selected);\n      --item-back-hover:  var(--item-back-hover-selected);\n\n      --color-drop: red;\n    }\n  `"
            },
            {
              "kind": "field",
              "name": "cssDarkMediaQuery",
              "static": true,
              "default": "css`\n    @media(prefers-color-scheme: dark) {\n      :host {\n        --lightness-back-primary: var(--darkness-back-primary);\n        --lightness-back-secondary: var(--darkness-back-secondary);\n        --lightness-back-tertiary: var(--darkness-back-tertiary);\n        --lightness-fore-primary: var(--darkness-fore-primary);\n        --lightness-fore-secondary: var(--darkness-fore-secondary);\n        --lightness-fore-tertiary: var(--darkness-fore-tertiary);\n      } \n    }\n  `"
            },
            {
              "kind": "field",
              "name": "cssGrid",
              "static": true,
              "default": "css`\n    :host {\n      --areas:\n        \"preview media media\"\n        \"compose compose inspect\"\n      ;\n      --columns:\n        min-content\n        1fr\n      ;\n      --rows:\n        min-content\n        1fr\n      ;\n\n      flex-grow: 1;\n      display: grid;\n      gap: var(--gap);\n      grid-template-areas: var(--areas);\n      grid-template-columns: var(--columns);\n      grid-template-rows: var(--rows);\n    }\n    \n      /* \n      @media (max-width: 999px) {\n        :host {\n          display: block;\n          grid-template-areas: \"preview\" \"compose\" \"inspect\" \"media\";\n        }\n      } */\n      \n  `"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "imports",
              "type": {
                "text": "string | undefined | undefined"
              },
              "fieldName": "imports"
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "fieldName": "icon"
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Slotted",
            "module": "/src/Base/Slotted.js"
          },
          "tagName": "movie-masher",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MovieMasherElement",
          "declaration": {
            "name": "MovieMasherElement",
            "module": "src/movie-masher.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher",
          "declaration": {
            "name": "MovieMasherElement",
            "module": "src/movie-masher.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/ClientAssetClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClientAssetClass",
          "members": [
            {
              "kind": "method",
              "name": "definitionIcon",
              "return": {
                "type": {
                  "text": "Promise<SVGSVGElement> | undefined"
                }
              },
              "parameters": [
                {
                  "name": "_size",
                  "type": {
                    "text": "Size"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "findTranscoding",
              "return": {
                "type": {
                  "text": "Transcoding | undefined"
                }
              },
              "parameters": [
                {
                  "name": "transcodingType",
                  "type": {
                    "text": "TranscodingType"
                  }
                },
                {
                  "name": "kinds",
                  "type": {
                    "text": "Strings"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instanceArgs",
              "return": {
                "type": {
                  "text": "InstanceArgs"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "optional": true,
                  "type": {
                    "text": "InstanceObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "preferredTranscoding",
              "return": {
                "type": {
                  "text": "Transcoding | undefined"
                }
              },
              "parameters": [
                {
                  "name": "types",
                  "type": {
                    "text": "TranscodingTypes"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "saveNeeded",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "savePromise",
              "type": {
                "text": "Promise<StringDataOrError>"
              }
            },
            {
              "kind": "field",
              "name": "targetId",
              "type": {
                "text": "TargetId"
              },
              "default": "TypeAsset"
            },
            {
              "kind": "field",
              "name": "transcodings",
              "type": {
                "text": "Transcodings"
              },
              "default": "[]"
            }
          ],
          "superclass": {
            "name": "AssetClass",
            "package": "@moviemasher/lib-shared"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientAssetClass",
          "declaration": {
            "name": "ClientAssetClass",
            "module": "src/asset/ClientAssetClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/element.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "SelectorAssetName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-selector-asset'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "SelectorAssetElement",
          "members": [
            {
              "kind": "field",
              "name": "_asset",
              "type": {
                "text": "ClientAsset | undefined | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "ClientAsset | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "assetInitialize",
              "type": {
                "text": "ClientAsset | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "assetId",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "asset-id"
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleChangedAssetId",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedAssetId"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_icon",
              "type": {
                "text": "SVGSVGElement | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "SVGSVGElement | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_iconPromise",
              "type": {
                "text": "Promise<void> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "iconPromise",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "iconPromiseInitialize",
              "type": {
                "text": "Promise<void>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "icons",
              "privacy": "public",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "kind": "field",
              "name": "labels",
              "privacy": "public",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "kind": "field",
              "name": "onpointerdown"
            },
            {
              "kind": "field",
              "name": "ondragstart"
            },
            {
              "kind": "field",
              "name": "_selected",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "selectedAssetId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "size",
              "privacy": "public",
              "type": {
                "text": "Size | undefined"
              }
            },
            {
              "kind": "field",
              "name": "timeout",
              "type": {
                "text": "Timeout | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleNode",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAssetObjectNode"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "detail",
                  "type": {
                    "text": "EventAssetObjectNodeDetail"
                  }
                }
              ]
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "asset-id",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "assetId"
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Component",
            "module": "/src/Base/Component.js"
          },
          "tagName": "SelectorAssetName",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SelectorAssetName",
          "declaration": {
            "name": "SelectorAssetName",
            "module": "src/asset/element.ts"
          }
        },
        {
          "kind": "js",
          "name": "SelectorAssetElement",
          "declaration": {
            "name": "SelectorAssetElement",
            "module": "src/asset/element.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "SelectorAssetName",
          "declaration": {
            "name": "SelectorAssetElement",
            "module": "src/asset/element.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./color/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./mash/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./object/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./objects/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./raw/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./shape/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./text/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./save.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ClientAssetClass.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Audible/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/save.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/Component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ]
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `"
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `"
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`"
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit-element/lit-element.js"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Component",
          "declaration": {
            "name": "Component",
            "module": "src/Base/Component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/ControlGroupMixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "ControlGroupMixin",
          "members": [
            {
              "kind": "method",
              "name": "addOrRemoveEnd",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "addOrRemove",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "propertyNamePrefix",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "controlContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "icon",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "controlInputContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "propertyId",
                  "optional": true,
                  "type": {
                    "text": "PropertyId"
                  }
                },
                {
                  "name": "dataType",
                  "optional": true,
                  "type": {
                    "text": "DataType"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "controlInputContentEnd",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "namePrefix",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "currentValue",
              "return": {
                "type": {
                  "text": "Scalar | undefined"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "addOrRemove",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChanged"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "namePropertyId",
              "return": {
                "type": {
                  "text": "PropertyId | undefined"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "propertyIds",
              "type": {
                "text": "PropertyIds | undefined"
              }
            },
            {
              "kind": "method",
              "name": "selectedProperty",
              "return": {
                "type": {
                  "text": "SelectedProperty | undefined"
                }
              },
              "parameters": [
                {
                  "name": "propertyId",
                  "type": {
                    "text": "PropertyId"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "propertyIdValue",
              "return": {
                "type": {
                  "text": "Scalar | undefined"
                }
              },
              "parameters": [
                {
                  "name": "found",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "propertyNameContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "T"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "ControlGroupStyles",
          "type": {
            "text": "CSSResultGroup"
          },
          "default": "[\n  css`\n    fieldset {\n      flex-grow: 1;\n      line-height: var(--control-size);\n      font-size: var(--control-size);\n      padding: var(--control-spacing);\n      background-color: initial;\n    }\n\n    fieldset > legend > movie-masher-component-icon,\n    fieldset > div > movie-masher-component-icon  {\n      display: inline-block;\n      min-width: 1em;\n      min-height: 1em;\n    }\n    \n    fieldset > div {\n      display: flex;\n      gap: var(--control-spacing);\n      grid-auto-flow: column;\n      margin-bottom: var(--control-spacing);\n    }\n\n  `\n]"
        },
        {
          "kind": "variable",
          "name": "ControlGroupProperties",
          "type": {
            "text": "PropertyDeclarations"
          },
          "default": "{\n  propertyIds: { type: Array },\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ControlGroupMixin",
          "declaration": {
            "name": "ControlGroupMixin",
            "module": "src/Base/ControlGroupMixin.ts"
          }
        },
        {
          "kind": "js",
          "name": "ControlGroupStyles",
          "declaration": {
            "name": "ControlGroupStyles",
            "module": "src/Base/ControlGroupMixin.ts"
          }
        },
        {
          "kind": "js",
          "name": "ControlGroupProperties",
          "declaration": {
            "name": "ControlGroupProperties",
            "module": "src/Base/ControlGroupMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/ControlMixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "ControlMixin",
          "members": [
            {
              "kind": "field",
              "name": "endValueDefined",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "method",
              "name": "handleChanged",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChanged"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleInput",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "ControlInput | undefined"
              }
            },
            {
              "kind": "field",
              "name": "inputSelectContent",
              "type": {
                "text": "OptionalContent"
              }
            },
            {
              "kind": "field",
              "name": "inputValue",
              "type": {
                "text": "Scalar | undefined"
              }
            },
            {
              "kind": "field",
              "name": "property",
              "type": {
                "text": "Property | undefined"
              }
            },
            {
              "kind": "field",
              "name": "scalar",
              "type": {
                "text": "Scalar | undefined"
              }
            },
            {
              "kind": "field",
              "name": "selectedProperty",
              "type": {
                "text": "SelectedProperty | undefined"
              }
            },
            {
              "kind": "field",
              "name": "selectedPropertyOrLoad",
              "type": {
                "text": "SelectedProperty | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "selectedPropertyInitialize",
              "type": {
                "text": "SelectedProperty | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setInputValue",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Scalar"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValues<this>"
                  }
                }
              ]
            },
            {
              "kind": "field"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "T"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "ControlProperties",
          "type": {
            "text": "PropertyDeclarations"
          },
          "default": "{\n  ...ControlPropertyProperties,\n  // selectedProperty: { type: Object, attribute: false },\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ControlMixin",
          "declaration": {
            "name": "ControlMixin",
            "module": "src/Base/ControlMixin.ts"
          }
        },
        {
          "kind": "js",
          "name": "ControlProperties",
          "declaration": {
            "name": "ControlProperties",
            "module": "src/Base/ControlMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/ControlPropertyMixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "ControlPropertyMixin",
          "members": [
            {
              "kind": "method",
              "name": "handleChangedAssetId",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedAssetId"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChangedClipId",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedClipId"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChangedMashAsset",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedMashAsset"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "propertyId",
              "type": {
                "text": "PropertyId | undefined"
              }
            },
            {
              "kind": "field",
              "name": "selectedId",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "selectedIdDefined",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "targetId",
              "type": {
                "text": "TargetId | undefined"
              }
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "T"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "ControlPropertyProperties",
          "type": {
            "text": "PropertyDeclarations"
          },
          "default": "{\n  propertyId: { type: String, attribute: 'property-id' },\n  selectedId: { type: String, attribute: false },\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ControlPropertyMixin",
          "declaration": {
            "name": "ControlPropertyMixin",
            "module": "src/Base/ControlPropertyMixin.ts"
          }
        },
        {
          "kind": "js",
          "name": "ControlPropertyProperties",
          "declaration": {
            "name": "ControlPropertyProperties",
            "module": "src/Base/ControlPropertyMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/DisablableMixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "DisablableMixin",
          "members": [
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "true"
            },
            {
              "kind": "method",
              "name": "handleChangedMashAsset",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedMashAsset"
                  }
                }
              ]
            },
            {
              "kind": "field"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "T"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "DisablableProperties",
          "type": {
            "text": "PropertyDeclarations"
          },
          "default": "{\n  disabled: { type: Boolean, attribute: false },\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DisablableMixin",
          "declaration": {
            "name": "DisablableMixin",
            "module": "src/Base/DisablableMixin.ts"
          }
        },
        {
          "kind": "js",
          "name": "DisablableProperties",
          "declaration": {
            "name": "DisablableProperties",
            "module": "src/Base/DisablableMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/DropTargetMixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "DropTargetMixin",
          "members": [
            {
              "kind": "field",
              "name": "acceptsClip",
              "type": {
                "text": "boolean"
              },
              "default": "true"
            },
            {
              "kind": "method",
              "name": "dropValid",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "dataTransfer",
                  "type": {
                    "text": "DataTransfer | null"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleDragged",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleDropped",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "DragEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "mashIndex",
              "return": {
                "type": {
                  "text": "MashIndex"
                }
              },
              "parameters": [
                {
                  "name": "_event",
                  "type": {
                    "text": "DragEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "ondragenter"
            },
            {
              "kind": "field",
              "name": "ondragleave"
            },
            {
              "kind": "field",
              "name": "ondragover"
            },
            {
              "kind": "field",
              "name": "ondrop"
            },
            {
              "kind": "field",
              "name": "_over",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "over",
              "type": {
                "text": "boolean"
              },
              "privacy": "private"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "T"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "DropTargetCss",
          "default": "css`\n    :host {\n      position: relative;\n    }\n    \n    div.drop-box {\n      top: 0;\n      left: 0;\n      pointer-events: none;\n      color: transparent;\n      right: 0px;\n      bottom: 0px;\n      position: absolute;\n      display: block;\n    }\n\n    :host(.dropping) div.drop-box {\n      box-shadow: var(--dropping-shadow);\n    }\n  `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DropTargetMixin",
          "declaration": {
            "name": "DropTargetMixin",
            "module": "src/Base/DropTargetMixin.ts"
          }
        },
        {
          "kind": "js",
          "name": "DropTargetCss",
          "declaration": {
            "name": "DropTargetCss",
            "module": "src/Base/DropTargetMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/IconString.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "IconString",
          "members": [
            {
              "kind": "field",
              "name": "detail",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "detail"
            },
            {
              "kind": "field",
              "name": "emit",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "emit"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "icon"
            },
            {
              "kind": "method",
              "name": "iconContent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "_htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "string",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "string"
            },
            {
              "kind": "method",
              "name": "stringContent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "_htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "cssControl",
              "static": true,
              "default": "css`\n    :hover {\n      --back: var(--back-hover);\n      --fore: var(--fore-hover);\n    }\n\n    :host(.disabled), :host(.disabled):hover,\n    button:disabled, button:disabled:hover {\n      --back: var(--back-disabled);\n      --cursor: default;\n      --fore: var(--fore-disabled);\n    }\n    \n    :host(.selected){\n      --back: var(--back-selected);\n      --fore: var(--fore-selected);\n    }\n\n    :host(.selected):hover {\n      --fore: var(--back-selected);\n      --back: var(--fore-selected);\n    }\n  `"
            },
            {
              "kind": "field",
              "name": "cssControls",
              "static": true,
              "default": "css`\n    a, button {\n      color: var(--fore);\n      cursor: var(--cursor);\n      display: inline-flex;\n      gap: var(--spacing);\n      height: var(--size);\n    }\n\n    a {\n      font-size: var(--size);\n      line-height: var(--size);\n      transition: var(--button-transition);\n    }\n\n    button {\n      --pad-height: calc(var(--size) - (4 * var(--padding)));\n      align-items: center;\n      appearance: none;\n      background-color: var(--back);\n      border-color: var(--fore);\n      border-radius: var(--border-radius);\n      border: var(--border);\n      font-size: var(--pad-height);\n      font-weight: 500;\n      line-height: var(--pad-height);\n      min-width: var(--size);\n      outline: none;\n      padding: var(--padding);\n      transition: var(--button-transition);\n    }\n  `"
            },
            {
              "kind": "field",
              "name": "cssHost",
              "static": true,
              "default": "css`\n    :host {\n      --back-disabled: var(--control-back-disabled);\n      --back-hover: var(--control-back-hover);\n      --back-selected: var(--control-back-selected);\n      --back: var(--control-back);\n      --cursor: pointer;\n      --fore-disabled: var(--control-fore-disabled);\n      --fore-hover: var(--control-fore-hover);\n      --fore-selected: var(--control-fore-selected);\n      --fore: var(--control-fore);\n      --padding: 2px;\n      --size: var(--control-size);\n      --spacing: var(--control-spacing);\n      display: inline-block;\n    }\n  `"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "detail",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "detail"
            },
            {
              "name": "emit",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "emit"
            },
            {
              "name": "string",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "string"
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "icon"
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Slotted",
            "module": "/src/Base/Slotted.js"
          },
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "IconString",
          "declaration": {
            "name": "IconString",
            "module": "src/Base/IconString.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/ImporterComponent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ImporterComponent",
          "members": [
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()"
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Component",
            "module": "/src/Base/Component"
          },
          "attributes": [
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ImporterComponent",
          "declaration": {
            "name": "ImporterComponent",
            "module": "src/Base/ImporterComponent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/LeftCenterRight.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LeftCenterRight",
          "members": [
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `"
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `"
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Slotted",
            "module": "/src/Base/Slotted.js"
          },
          "attributes": [
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "Header",
          "members": [
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "icon"
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "icon"
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "LeftCenterRight",
            "module": "src/Base/LeftCenterRight.ts"
          },
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "Footer",
          "members": [
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "LeftCenterRight",
            "module": "src/Base/LeftCenterRight.ts"
          },
          "attributes": [
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "Div",
          "members": [
            {
              "kind": "field",
              "name": "cssDivHostBackground",
              "static": true,
              "default": "css`\n    :host {\n      background-color: var(--div-back);\n      color: var(--div-fore);\n    }\n  `"
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "LeftCenterRight",
            "module": "src/Base/LeftCenterRight.ts"
          },
          "attributes": [
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LeftCenterRight",
          "declaration": {
            "name": "LeftCenterRight",
            "module": "src/Base/LeftCenterRight.ts"
          }
        },
        {
          "kind": "js",
          "name": "Header",
          "declaration": {
            "name": "Header",
            "module": "src/Base/LeftCenterRight.ts"
          }
        },
        {
          "kind": "js",
          "name": "Footer",
          "declaration": {
            "name": "Footer",
            "module": "src/Base/LeftCenterRight.ts"
          }
        },
        {
          "kind": "js",
          "name": "Div",
          "declaration": {
            "name": "Div",
            "module": "src/Base/LeftCenterRight.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/RectObserverMixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "RectObserverMixin",
          "members": [
            {
              "kind": "method",
              "name": "handleResize"
            },
            {
              "kind": "field",
              "name": "rect",
              "type": {
                "text": "Rect | undefined"
              }
            },
            {
              "kind": "field",
              "name": "resizeObserver",
              "type": {
                "text": "ResizeObserver | undefined"
              },
              "privacy": "private"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RectObserverMixin",
          "declaration": {
            "name": "RectObserverMixin",
            "module": "src/Base/RectObserverMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/Scroller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Scroller",
          "members": [
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleScrollRoot",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "ScrollRootEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "cssDivRoot",
              "static": true,
              "default": "css`\n    div.root {\n      padding: 0px;\n      flex-grow: 1;\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n    }\n  `"
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "ImporterComponent",
            "module": "/src/Base/ImporterComponent.js"
          },
          "attributes": [
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Scroller",
          "declaration": {
            "name": "Scroller",
            "module": "src/Base/Scroller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/Section.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "HeaderSlot",
          "type": {
            "text": "string"
          },
          "default": "'header'"
        },
        {
          "kind": "variable",
          "name": "FooterSlot",
          "type": {
            "text": "string"
          },
          "default": "'footer'"
        },
        {
          "kind": "variable",
          "name": "DivSlot",
          "type": {
            "text": "string"
          },
          "default": "'div'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "Section",
          "members": [
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "divContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "_htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "footerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "_htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "headerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "_htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "attribute": "icon"
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "styleHost",
              "static": true,
              "default": "css`\n    :host {\n      flex-grow: 1;\n      display: flex;\n    }\n  `"
            },
            {
              "kind": "field",
              "name": "styleSection",
              "static": true,
              "default": "css`\n    section {\n      flex-grow: 1;\n      overflow: hidden;\n      display: grid;\n      grid-template-rows: var(--header-height) 1fr var(--footer-height);\n      grid-template-columns: 1fr;\n      border: var(--border);\n      border-color: var(--section-back);\n      border-radius: var(--border-radius);\n    }\n  `"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "fieldName": "icon"
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Slotted",
            "module": "/src/Base/Slotted.js"
          },
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderSlot",
          "declaration": {
            "name": "HeaderSlot",
            "module": "src/Base/Section.ts"
          }
        },
        {
          "kind": "js",
          "name": "FooterSlot",
          "declaration": {
            "name": "FooterSlot",
            "module": "src/Base/Section.ts"
          }
        },
        {
          "kind": "js",
          "name": "DivSlot",
          "declaration": {
            "name": "DivSlot",
            "module": "src/Base/Section.ts"
          }
        },
        {
          "kind": "js",
          "name": "Section",
          "declaration": {
            "name": "Section",
            "module": "src/Base/Section.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/SizeReactiveMixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "SizeReactiveMixin",
          "members": [
            {
              "kind": "method",
              "name": "handleChangedSize",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedSize"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "Size | undefined"
              }
            },
            {
              "kind": "field"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "T"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "SizeReactiveProperties",
          "type": {
            "text": "PropertyDeclarations"
          },
          "default": "{\n  size: { type: Object, attribute: false },\n\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SizeReactiveMixin",
          "declaration": {
            "name": "SizeReactiveMixin",
            "module": "src/Base/SizeReactiveMixin.ts"
          }
        },
        {
          "kind": "js",
          "name": "SizeReactiveProperties",
          "declaration": {
            "name": "SizeReactiveProperties",
            "module": "src/Base/SizeReactiveMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/Slotted.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Slotted",
          "members": [
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "_part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts"
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'"
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'"
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts"
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "ImporterComponent",
            "module": "/src/Base/ImporterComponent"
          },
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Slotted",
          "declaration": {
            "name": "Slotted",
            "module": "src/Base/Slotted.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Base/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Component.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DisablableMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DropTargetMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./IconString.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ImporterComponent.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./LeftCenterRight.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./RectObserverMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Scroller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Section.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Slotted.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ControlGroupMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ControlPropertyMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./SizeReactiveMixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/ClientGuards.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isClientInstance",
          "return": {
            "type": {
              "text": "value is ClientInstance"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "assertClientInstance",
          "return": {
            "type": {
              "text": "asserts value is ClientInstance"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            },
            {
              "name": "name",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isClientVisibleInstance",
          "return": {
            "type": {
              "text": "value is ClientVisibleInstance"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "assertClientVisibleInstance",
          "return": {
            "type": {
              "text": "asserts value is ClientVisibleInstance"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            },
            {
              "name": "name",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isClientAudio",
          "return": {
            "type": {
              "text": "value is ClientAudio"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isClientVideo",
          "return": {
            "type": {
              "text": "value is ClientVideo"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isClientImage",
          "return": {
            "type": {
              "text": "value is ClientImage"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isClientInstance",
          "declaration": {
            "name": "isClientInstance",
            "module": "src/Client/ClientGuards.ts"
          }
        },
        {
          "kind": "js",
          "name": "assertClientInstance",
          "declaration": {
            "name": "assertClientInstance",
            "module": "src/Client/ClientGuards.ts"
          }
        },
        {
          "kind": "js",
          "name": "isClientVisibleInstance",
          "declaration": {
            "name": "isClientVisibleInstance",
            "module": "src/Client/ClientGuards.ts"
          }
        },
        {
          "kind": "js",
          "name": "assertClientVisibleInstance",
          "declaration": {
            "name": "assertClientVisibleInstance",
            "module": "src/Client/ClientGuards.ts"
          }
        },
        {
          "kind": "js",
          "name": "isClientAudio",
          "declaration": {
            "name": "isClientAudio",
            "module": "src/Client/ClientGuards.ts"
          }
        },
        {
          "kind": "js",
          "name": "isClientVideo",
          "declaration": {
            "name": "isClientVideo",
            "module": "src/Client/ClientGuards.ts"
          }
        },
        {
          "kind": "js",
          "name": "isClientImage",
          "declaration": {
            "name": "isClientImage",
            "module": "src/Client/ClientGuards.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/PanelConstants.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "PanelBrowser",
          "type": {
            "text": "Panel"
          },
          "default": "'browser'"
        },
        {
          "kind": "variable",
          "name": "PanelPlayer",
          "type": {
            "text": "Panel"
          },
          "default": "'player'"
        },
        {
          "kind": "variable",
          "name": "PanelTimeline",
          "type": {
            "text": "Panel"
          },
          "default": "'timeline'"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PanelBrowser",
          "declaration": {
            "name": "PanelBrowser",
            "module": "src/Client/PanelConstants.ts"
          }
        },
        {
          "kind": "js",
          "name": "PanelPlayer",
          "declaration": {
            "name": "PanelPlayer",
            "module": "src/Client/PanelConstants.ts"
          }
        },
        {
          "kind": "js",
          "name": "PanelTimeline",
          "declaration": {
            "name": "PanelTimeline",
            "module": "src/Client/PanelConstants.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/PixelFunctions.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "pixelToFrame",
          "return": {
            "type": {
              "text": "number"
            }
          },
          "parameters": [
            {
              "name": "pixels",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "perFrame",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "rounding",
              "default": "'round'"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pixelToFrame",
          "declaration": {
            "name": "pixelToFrame",
            "module": "src/Client/PixelFunctions.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/SvgFunctions.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "PatchSvgInitialize",
          "return": {
            "type": {
              "text": "SVGSVGElement"
            }
          }
        },
        {
          "kind": "function",
          "name": "svgPatch",
          "return": {
            "type": {
              "text": "SVGSVGElement"
            }
          },
          "parameters": [
            {
              "name": "value",
              "optional": true,
              "type": {
                "text": "SVGSVGElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgId",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "id",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgUrl",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "id",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgGroupElement",
          "return": {
            "type": {
              "text": "SVGGElement"
            }
          },
          "parameters": [
            {
              "name": "dimensions",
              "optional": true,
              "type": {
                "text": "any"
              }
            },
            {
              "name": "id",
              "default": "''"
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgSetDimensions",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "SvgItem"
              }
            },
            {
              "name": "dimensions",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgSetTransformPoint",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "SvgItem"
              }
            },
            {
              "name": "point",
              "type": {
                "text": "Point | any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgRectPoints",
          "return": {
            "type": {
              "text": "Point[]"
            }
          },
          "parameters": [
            {
              "name": "dimensions",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgPolygonElement",
          "return": {
            "type": {
              "text": "SVGPolygonElement"
            }
          },
          "parameters": [
            {
              "name": "dimensions",
              "type": {
                "text": "any"
              }
            },
            {
              "name": "className",
              "optional": true,
              "type": {
                "text": "string | string[]"
              }
            },
            {
              "name": "fill",
              "default": "''"
            },
            {
              "name": "id",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgSetBox",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "SvgItem"
              }
            },
            {
              "name": "boxSize",
              "type": {
                "text": "Size"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgSvgElement",
          "return": {
            "type": {
              "text": "SVGSVGElement"
            }
          },
          "parameters": [
            {
              "name": "size",
              "optional": true,
              "type": {
                "text": "Size"
              }
            },
            {
              "name": "svgItems",
              "optional": true,
              "type": {
                "text": "SvgItem | SvgItems"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgImageElement"
        },
        {
          "kind": "function",
          "name": "svgPathElement",
          "parameters": [
            {
              "name": "path",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "fill",
              "default": "colorCurrent"
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgMaskElement",
          "return": {
            "type": {
              "text": "SVGMaskElement"
            }
          },
          "parameters": [
            {
              "name": "size",
              "optional": true,
              "type": {
                "text": "Size"
              }
            },
            {
              "name": "contentItem",
              "optional": true,
              "type": {
                "text": "SvgItem"
              }
            },
            {
              "name": "luminance",
              "optional": true,
              "type": {
                "text": "boolean"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgClipPathElement",
          "return": {
            "type": {
              "text": "SVGClipPathElement"
            }
          },
          "parameters": [
            {
              "name": "size",
              "optional": true,
              "type": {
                "text": "Size"
              }
            },
            {
              "name": "contentItem",
              "optional": true,
              "type": {
                "text": "SvgItem"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgFilter",
          "return": {
            "type": {
              "text": "SvgFilter"
            }
          },
          "parameters": [
            {
              "name": "values",
              "type": {
                "text": "StringRecord"
              }
            },
            {
              "name": "dimensions",
              "optional": true,
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgAppend",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "Element"
              }
            },
            {
              "name": "items",
              "optional": true,
              "type": {
                "text": "SvgItem | SvgItems"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgPatternElement",
          "return": {
            "type": {
              "text": "SVGPatternElement"
            }
          },
          "parameters": [
            {
              "name": "dimensions",
              "type": {
                "text": "Size"
              }
            },
            {
              "name": "id",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "items",
              "optional": true,
              "type": {
                "text": "SvgItem | SvgItems"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgDefsElement",
          "return": {
            "type": {
              "text": "SVGDefsElement"
            }
          },
          "parameters": [
            {
              "name": "svgItems",
              "optional": true,
              "type": {
                "text": "SvgItems"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgFeImageElement",
          "return": {
            "type": {
              "text": "SVGFEImageElement"
            }
          },
          "parameters": [
            {
              "name": "id",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "result",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgFilterElement",
          "return": {
            "type": {
              "text": "SVGFilterElement"
            }
          },
          "parameters": [
            {
              "name": "filters",
              "optional": true,
              "type": {
                "text": "SvgFilters"
              }
            },
            {
              "name": "filtered",
              "optional": true,
              "type": {
                "text": "SvgItem | SvgItems"
              }
            },
            {
              "name": "rect",
              "optional": true,
              "type": {
                "text": "any"
              }
            },
            {
              "name": "units",
              "default": "'userSpaceOnUse'"
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgDifferenceDefs",
          "parameters": [
            {
              "name": "overlayId",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "filtered",
              "type": {
                "text": "SvgItem | SvgItems"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgSet",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "SvgItem"
              }
            },
            {
              "name": "value",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "name",
              "default": "'id'"
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgAddClass",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "Element"
              }
            },
            {
              "name": "className",
              "optional": true,
              "type": {
                "text": "string | string[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgUseElement",
          "parameters": [
            {
              "name": "href",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "className",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "id",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgSetTransform",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "SvgItem"
              }
            },
            {
              "name": "transform",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "origin",
              "default": "'top left'"
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgSetTransformRects",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "SvgItem"
              }
            },
            {
              "name": "dimensions",
              "type": {
                "text": "Rect | Size"
              }
            },
            {
              "name": "rect",
              "type": {
                "text": "Rect"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgFunc",
          "parameters": [
            {
              "name": "type",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "values",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgSetChildren",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "Element"
              }
            },
            {
              "name": "svgItems",
              "type": {
                "text": "SvgItems"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgImagePromise",
          "return": {
            "type": {
              "text": "Promise<SVGImageElement>"
            }
          },
          "parameters": [
            {
              "name": "url",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "dontPatch",
              "optional": true,
              "type": {
                "text": "boolean"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgText",
          "parameters": [
            {
              "name": "string",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "family",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "size",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "transform",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "color",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "svgImagePromiseWithOptions",
          "return": {
            "type": {
              "text": "Promise<SVGImageElement>"
            }
          },
          "parameters": [
            {
              "name": "url",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "text": "RectOptions"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PatchSvgInitialize",
          "declaration": {
            "name": "PatchSvgInitialize",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgPatch",
          "declaration": {
            "name": "svgPatch",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgId",
          "declaration": {
            "name": "svgId",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgUrl",
          "declaration": {
            "name": "svgUrl",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgGroupElement",
          "declaration": {
            "name": "svgGroupElement",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgSetDimensions",
          "declaration": {
            "name": "svgSetDimensions",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgSetTransformPoint",
          "declaration": {
            "name": "svgSetTransformPoint",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgRectPoints",
          "declaration": {
            "name": "svgRectPoints",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgPolygonElement",
          "declaration": {
            "name": "svgPolygonElement",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgSetBox",
          "declaration": {
            "name": "svgSetBox",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgSvgElement",
          "declaration": {
            "name": "svgSvgElement",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgImageElement",
          "declaration": {
            "name": "svgImageElement",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgPathElement",
          "declaration": {
            "name": "svgPathElement",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgMaskElement",
          "declaration": {
            "name": "svgMaskElement",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgClipPathElement",
          "declaration": {
            "name": "svgClipPathElement",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgFilter",
          "declaration": {
            "name": "svgFilter",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgAppend",
          "declaration": {
            "name": "svgAppend",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgPatternElement",
          "declaration": {
            "name": "svgPatternElement",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgDefsElement",
          "declaration": {
            "name": "svgDefsElement",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgFeImageElement",
          "declaration": {
            "name": "svgFeImageElement",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgFilterElement",
          "declaration": {
            "name": "svgFilterElement",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgDifferenceDefs",
          "declaration": {
            "name": "svgDifferenceDefs",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgSet",
          "declaration": {
            "name": "svgSet",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgAddClass",
          "declaration": {
            "name": "svgAddClass",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgUseElement",
          "declaration": {
            "name": "svgUseElement",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgSetTransform",
          "declaration": {
            "name": "svgSetTransform",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgSetTransformRects",
          "declaration": {
            "name": "svgSetTransformRects",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgFunc",
          "declaration": {
            "name": "svgFunc",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgSetChildren",
          "declaration": {
            "name": "svgSetChildren",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgImagePromise",
          "declaration": {
            "name": "svgImagePromise",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgText",
          "declaration": {
            "name": "svgText",
            "module": "src/Client/SvgFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "svgImagePromiseWithOptions",
          "declaration": {
            "name": "svgImagePromiseWithOptions",
            "module": "src/Client/SvgFunctions.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ClientGuards.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Mash/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Masher/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./PanelConstants.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./PixelFunctions.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./request/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./SvgFunctions.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Visible/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/component-a.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AElement",
          "members": [
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "detail",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "detail",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "emit",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "emit",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "method",
              "name": "iconContent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "_htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "string",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "string",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "method",
              "name": "stringContent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "_htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssControl",
              "static": true,
              "default": "css`\n    :hover {\n      --back: var(--back-hover);\n      --fore: var(--fore-hover);\n    }\n\n    :host(.disabled), :host(.disabled):hover,\n    button:disabled, button:disabled:hover {\n      --back: var(--back-disabled);\n      --cursor: default;\n      --fore: var(--fore-disabled);\n    }\n    \n    :host(.selected){\n      --back: var(--back-selected);\n      --fore: var(--fore-selected);\n    }\n\n    :host(.selected):hover {\n      --fore: var(--back-selected);\n      --back: var(--fore-selected);\n    }\n  `",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssControls",
              "static": true,
              "default": "css`\n    a, button {\n      color: var(--fore);\n      cursor: var(--cursor);\n      display: inline-flex;\n      gap: var(--spacing);\n      height: var(--size);\n    }\n\n    a {\n      font-size: var(--size);\n      line-height: var(--size);\n      transition: var(--button-transition);\n    }\n\n    button {\n      --pad-height: calc(var(--size) - (4 * var(--padding)));\n      align-items: center;\n      appearance: none;\n      background-color: var(--back);\n      border-color: var(--fore);\n      border-radius: var(--border-radius);\n      border: var(--border);\n      font-size: var(--pad-height);\n      font-weight: 500;\n      line-height: var(--pad-height);\n      min-width: var(--size);\n      outline: none;\n      padding: var(--padding);\n      transition: var(--button-transition);\n    }\n  `",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHost",
              "static": true,
              "default": "css`\n    :host {\n      --back-disabled: var(--control-back-disabled);\n      --back-hover: var(--control-back-hover);\n      --back-selected: var(--control-back-selected);\n      --back: var(--control-back);\n      --cursor: pointer;\n      --fore-disabled: var(--control-fore-disabled);\n      --fore-hover: var(--control-fore-hover);\n      --fore-selected: var(--control-fore-selected);\n      --fore: var(--control-fore);\n      --padding: 2px;\n      --size: var(--control-size);\n      --spacing: var(--control-spacing);\n      display: inline-block;\n    }\n  `",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "IconString",
            "module": "/src/Base/IconString.js"
          },
          "tagName": "movie-masher-component-a",
          "customElement": true,
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "detail",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "detail",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "emit",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "emit",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "string",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "string",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AElement",
          "declaration": {
            "name": "AElement",
            "module": "src/component/component-a.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-component-a",
          "declaration": {
            "name": "AElement",
            "module": "src/component/component-a.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/component-action.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ActionElement",
          "members": [
            {
              "kind": "method",
              "name": "handleChangedActionEnabled",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedActionEnabled"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChanged",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "emit",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "emit",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "disabled",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "inheritedFrom": {
                "name": "ButtonElement",
                "module": "src/component/component-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "detail",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "detail",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "method",
              "name": "iconContent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "_htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "string",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "string",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "method",
              "name": "stringContent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "_htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssControl",
              "static": true,
              "default": "css`\n    :hover {\n      --back: var(--back-hover);\n      --fore: var(--fore-hover);\n    }\n\n    :host(.disabled), :host(.disabled):hover,\n    button:disabled, button:disabled:hover {\n      --back: var(--back-disabled);\n      --cursor: default;\n      --fore: var(--fore-disabled);\n    }\n    \n    :host(.selected){\n      --back: var(--back-selected);\n      --fore: var(--fore-selected);\n    }\n\n    :host(.selected):hover {\n      --fore: var(--back-selected);\n      --back: var(--fore-selected);\n    }\n  `",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssControls",
              "static": true,
              "default": "css`\n    a, button {\n      color: var(--fore);\n      cursor: var(--cursor);\n      display: inline-flex;\n      gap: var(--spacing);\n      height: var(--size);\n    }\n\n    a {\n      font-size: var(--size);\n      line-height: var(--size);\n      transition: var(--button-transition);\n    }\n\n    button {\n      --pad-height: calc(var(--size) - (4 * var(--padding)));\n      align-items: center;\n      appearance: none;\n      background-color: var(--back);\n      border-color: var(--fore);\n      border-radius: var(--border-radius);\n      border: var(--border);\n      font-size: var(--pad-height);\n      font-weight: 500;\n      line-height: var(--pad-height);\n      min-width: var(--size);\n      outline: none;\n      padding: var(--padding);\n      transition: var(--button-transition);\n    }\n  `",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHost",
              "static": true,
              "default": "css`\n    :host {\n      --back-disabled: var(--control-back-disabled);\n      --back-hover: var(--control-back-hover);\n      --back-selected: var(--control-back-selected);\n      --back: var(--control-back);\n      --cursor: pointer;\n      --fore-disabled: var(--control-fore-disabled);\n      --fore-hover: var(--control-fore-hover);\n      --fore-selected: var(--control-fore-selected);\n      --fore: var(--control-fore);\n      --padding: 2px;\n      --size: var(--control-size);\n      --spacing: var(--control-spacing);\n      display: inline-block;\n    }\n  `",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "ButtonElement",
            "module": "/src/component/component-button.js"
          },
          "tagName": "movie-masher-component-action",
          "customElement": true,
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "ButtonElement",
                "module": "src/component/component-button.ts"
              }
            },
            {
              "name": "detail",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "detail",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "emit",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "emit",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "string",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "string",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ActionElement",
          "declaration": {
            "name": "ActionElement",
            "module": "src/component/component-action.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-component-action",
          "declaration": {
            "name": "ActionElement",
            "module": "src/component/component-action.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/component-button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ButtonElement",
          "members": [
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "detail",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "detail",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "emit",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "emit",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "method",
              "name": "iconContent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "_htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "string",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "string",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "method",
              "name": "stringContent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "_htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssControl",
              "static": true,
              "default": "css`\n    :hover {\n      --back: var(--back-hover);\n      --fore: var(--fore-hover);\n    }\n\n    :host(.disabled), :host(.disabled):hover,\n    button:disabled, button:disabled:hover {\n      --back: var(--back-disabled);\n      --cursor: default;\n      --fore: var(--fore-disabled);\n    }\n    \n    :host(.selected){\n      --back: var(--back-selected);\n      --fore: var(--fore-selected);\n    }\n\n    :host(.selected):hover {\n      --fore: var(--back-selected);\n      --back: var(--fore-selected);\n    }\n  `",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssControls",
              "static": true,
              "default": "css`\n    a, button {\n      color: var(--fore);\n      cursor: var(--cursor);\n      display: inline-flex;\n      gap: var(--spacing);\n      height: var(--size);\n    }\n\n    a {\n      font-size: var(--size);\n      line-height: var(--size);\n      transition: var(--button-transition);\n    }\n\n    button {\n      --pad-height: calc(var(--size) - (4 * var(--padding)));\n      align-items: center;\n      appearance: none;\n      background-color: var(--back);\n      border-color: var(--fore);\n      border-radius: var(--border-radius);\n      border: var(--border);\n      font-size: var(--pad-height);\n      font-weight: 500;\n      line-height: var(--pad-height);\n      min-width: var(--size);\n      outline: none;\n      padding: var(--padding);\n      transition: var(--button-transition);\n    }\n  `",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHost",
              "static": true,
              "default": "css`\n    :host {\n      --back-disabled: var(--control-back-disabled);\n      --back-hover: var(--control-back-hover);\n      --back-selected: var(--control-back-selected);\n      --back: var(--control-back);\n      --cursor: pointer;\n      --fore-disabled: var(--control-fore-disabled);\n      --fore-hover: var(--control-fore-hover);\n      --fore-selected: var(--control-fore-selected);\n      --fore: var(--control-fore);\n      --padding: 2px;\n      --size: var(--control-size);\n      --spacing: var(--control-spacing);\n      display: inline-block;\n    }\n  `",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "detail",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "detail",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "emit",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "emit",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "string",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "string",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "IconString",
                "module": "src/Base/IconString.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "IconString",
            "module": "/src/Base/IconString.js"
          },
          "tagName": "movie-masher-component-button",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ButtonElement",
          "declaration": {
            "name": "ButtonElement",
            "module": "src/component/component-button.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-component-button",
          "declaration": {
            "name": "ButtonElement",
            "module": "src/component/component-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/component-dialog.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "DialogElement",
          "members": [
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "dialog",
              "type": {
                "text": "HTMLDialogElement"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "dialogClose",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "dialogOpen",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "dialogOpened",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "dialogOpening",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleClose",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleDialog",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventDialog"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "section",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "section"
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "section",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "section"
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Slotted",
            "module": "/src/Base/Slotted.js"
          },
          "tagName": "movie-masher-component-dialog",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DialogElement",
          "declaration": {
            "name": "DialogElement",
            "module": "src/component/component-dialog.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-component-dialog",
          "declaration": {
            "name": "DialogElement",
            "module": "src/component/component-dialog.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/component-icon.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "IconElement",
          "members": [
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "attribute": "icon"
            },
            {
              "kind": "field",
              "name": "iconContent",
              "type": {
                "text": "OptionalContent | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_iconPromise",
              "type": {
                "text": "Promise<Icon | void> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "iconPromise",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "iconPromiseInitialize",
              "type": {
                "text": "Promise<Icon | void>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "iconEventPromise",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "svgStringClean",
              "privacy": "private",
              "static": true,
              "parameters": [
                {
                  "name": "svgString",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "svgStringNode",
              "privacy": "private",
              "static": true,
              "parameters": [
                {
                  "name": "svgString",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "fieldName": "icon"
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Component",
            "module": "/src/Base/Component.js"
          },
          "tagName": "movie-masher-component-icon",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "IconElement",
          "declaration": {
            "name": "IconElement",
            "module": "src/component/component-icon.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-component-icon",
          "declaration": {
            "name": "IconElement",
            "module": "src/component/component-icon.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/component-span.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SpanElement",
          "members": [
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Component",
            "module": "/src/Base/Component.js"
          },
          "tagName": "movie-masher-component-span",
          "customElement": true,
          "attributes": [
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SpanElement",
          "declaration": {
            "name": "SpanElement",
            "module": "src/component/component-span.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-component-span",
          "declaration": {
            "name": "SpanElement",
            "module": "src/component/component-span.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/component-string.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "StringElement",
          "members": [
            {
              "kind": "field",
              "name": "contentOrVoid",
              "type": {
                "text": "Text | string | void | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "stringContent",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "contentInitialize",
              "type": {
                "text": "Text | string | void"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "string",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "attribute": "string"
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "string",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "fieldName": "string"
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Component",
            "module": "/src/Base/Component.js"
          },
          "tagName": "movie-masher-component-string",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "StringElement",
          "declaration": {
            "name": "StringElement",
            "module": "src/component/component-string.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-component-string",
          "declaration": {
            "name": "StringElement",
            "module": "src/component/component-string.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./component-a.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./component-action.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./component-button.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./component-dialog.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./component-icon.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./component-span.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./component-string.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/clip/element.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "ComposerClipName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-composer-clip'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "ComposerClipElement",
          "members": [
            {
              "kind": "field",
              "name": "clipId",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "clip-id"
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "drawBackgroundAndUpdate",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "gap",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "2"
            },
            {
              "kind": "field",
              "name": "handleChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleChanged",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChanged"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleIntersection",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "entries",
                  "type": {
                    "text": "IntersectionObserverEntry[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleResize",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Size"
                }
              },
              "parameters": [
                {
                  "name": "entries",
                  "type": {
                    "text": "ResizeObserverEntry[]"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "handleTimeout",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "hasChanged",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "iconFromFramePromise",
              "type": {
                "text": "Promise<void> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "icons",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "kind": "field",
              "name": "intersectionController",
              "type": {
                "text": "IntersectionController<boolean> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "intersecting",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "label",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "labels",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "kind": "field",
              "name": "maxWidth",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "max-width"
            },
            {
              "kind": "field",
              "name": "onclick"
            },
            {
              "kind": "field",
              "name": "ondragend"
            },
            {
              "kind": "field",
              "name": "ondragstart"
            },
            {
              "kind": "method",
              "name": "mashIndex",
              "return": {
                "type": {
                  "text": "MashIndex"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "DragEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "onpointerdown"
            },
            {
              "kind": "field",
              "name": "resizeController",
              "type": {
                "text": "ResizeController<Size> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "scale",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "scale"
            },
            {
              "kind": "field",
              "name": "scrollRoot",
              "type": {
                "text": "Element | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "clipSize",
              "type": {
                "text": "object"
              },
              "privacy": "private",
              "default": "{ ...SIZE_ZERO }"
            },
            {
              "kind": "field",
              "name": "sizeWhenUpdated",
              "type": {
                "text": "object"
              },
              "privacy": "private",
              "default": "{ ...SIZE_ZERO }"
            },
            {
              "kind": "field",
              "name": "trackIndex",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "attribute": "track-index"
            },
            {
              "kind": "field",
              "name": "trackWidth",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "track-width"
            },
            {
              "kind": "field",
              "name": "startTimeout",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "timeout",
              "type": {
                "text": "Timeout | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "timeoutRate",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "100"
            },
            {
              "kind": "field",
              "name": "waitingPromise",
              "type": {
                "text": "Promise<SvgOrImageDataOrError> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "x",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "x"
            },
            {
              "kind": "method",
              "name": "handleNode",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventClipElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "detail",
                  "type": {
                    "text": "EventClipElementDetail"
                  }
                }
              ]
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "clip-id",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "clipId"
            },
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "label"
            },
            {
              "name": "scale",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "scale"
            },
            {
              "name": "track-width",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "trackWidth"
            },
            {
              "name": "track-index",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "fieldName": "trackIndex"
            },
            {
              "name": "max-width",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "maxWidth"
            },
            {
              "name": "x",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "x"
            }
          ],
          "superclass": {
            "name": "WithSizeReactiveMixin",
            "module": "src/clip/element.ts"
          },
          "tagName": "ComposerClipName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ComposerClipName",
          "declaration": {
            "name": "ComposerClipName",
            "module": "src/clip/element.ts"
          }
        },
        {
          "kind": "js",
          "name": "ComposerClipElement",
          "declaration": {
            "name": "ComposerClipElement",
            "module": "src/clip/element.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "ComposerClipName",
          "declaration": {
            "name": "ComposerClipElement",
            "module": "src/clip/element.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/clip/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/composer/composer-content.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ComposerContentElement",
          "members": [
            {
              "kind": "field",
              "name": "clientXRef",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "-1"
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "frame",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "frames",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "framesWidth",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "method",
              "name": "handleChangedFrame",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedFrame"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChangedMashAsset",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedMashAsset"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleDuration",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "NumberEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleResize",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_entries",
                  "type": {
                    "text": "ResizeObserverEntry[]"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "handleScrubberDragOver",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleScrubberPointerDown",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleScrubberPointerMove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleScrubberPointerUp",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTracks",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "NumberEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleZoom",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "NumberEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "left",
              "privacy": "protected",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "mashAsset",
              "type": {
                "text": "MashAsset | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onclick"
            },
            {
              "kind": "method",
              "name": "recalculateLeft",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "resizeObserver",
              "type": {
                "text": "ResizeObserver | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "scale",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "tracksLength",
              "privacy": "protected",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "width",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "x",
              "privacy": "protected",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "zoom",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "1.0"
            },
            {
              "kind": "field"
            }
          ],
          "superclass": {
            "name": "WithDropTargetMixin",
            "module": "src/composer/composer-content.ts"
          },
          "tagName": "movie-masher-composer-content",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ComposerContentElement",
          "declaration": {
            "name": "ComposerContentElement",
            "module": "src/composer/composer-content.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-composer-content",
          "declaration": {
            "name": "ComposerContentElement",
            "module": "src/composer/composer-content.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/composer/composer-div.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ComposerDivElement",
          "members": [
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssDivHostBackground",
              "static": true,
              "default": "css`\n    :host {\n      background-color: var(--div-back);\n      color: var(--div-fore);\n    }\n  `",
              "inheritedFrom": {
                "name": "Div",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Div",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-composer-div",
          "customElement": true,
          "attributes": [
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ComposerDivElement",
          "declaration": {
            "name": "ComposerDivElement",
            "module": "src/composer/composer-div.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-composer-div",
          "declaration": {
            "name": "ComposerDivElement",
            "module": "src/composer/composer-div.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/composer/composer-footer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ComposerFooterElement",
          "members": [
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Footer",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-composer-footer",
          "customElement": true,
          "attributes": [
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ComposerFooterElement",
          "declaration": {
            "name": "ComposerFooterElement",
            "module": "src/composer/composer-footer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-composer-footer",
          "declaration": {
            "name": "ComposerFooterElement",
            "module": "src/composer/composer-footer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/composer/composer-header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ComposerHeaderElement",
          "members": [
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Header",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-composer-header",
          "customElement": true,
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ComposerHeaderElement",
          "declaration": {
            "name": "ComposerHeaderElement",
            "module": "src/composer/composer-header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-composer-header",
          "declaration": {
            "name": "ComposerHeaderElement",
            "module": "src/composer/composer-header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/composer/composer-icon.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ComposerIconElement",
          "members": [
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "dense",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "dense"
            },
            {
              "kind": "method",
              "name": "mashIndex",
              "return": {
                "type": {
                  "text": "MashIndex"
                }
              },
              "parameters": [
                {
                  "name": "_event",
                  "type": {
                    "text": "DragEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "trackIndex",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "attribute": "track-index"
            }
          ],
          "attributes": [
            {
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "dense"
            },
            {
              "name": "track-index",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "fieldName": "trackIndex"
            }
          ],
          "superclass": {
            "name": "WithDropTargetMixin",
            "module": "src/composer/composer-icon.ts"
          },
          "tagName": "movie-masher-composer-icon",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ComposerIconElement",
          "declaration": {
            "name": "ComposerIconElement",
            "module": "src/composer/composer-icon.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-composer-icon",
          "declaration": {
            "name": "ComposerIconElement",
            "module": "src/composer/composer-icon.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/composer/composer-section.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ComposerSectionElement",
          "members": [
            {
              "kind": "method",
              "name": "divContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "footerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "headerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "styleHost",
              "static": true,
              "default": "css`\n    :host {\n      flex-grow: 1;\n      display: flex;\n    }\n  `",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "styleSection",
              "static": true,
              "default": "css`\n    section {\n      flex-grow: 1;\n      overflow: hidden;\n      display: grid;\n      grid-template-rows: var(--header-height) 1fr var(--footer-height);\n      grid-template-columns: 1fr;\n      border: var(--border);\n      border-color: var(--section-back);\n      border-radius: var(--border-radius);\n    }\n  `",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Section",
            "module": "/src/Base/Section.js"
          },
          "tagName": "movie-masher-composer-section",
          "customElement": true,
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ComposerSectionElement",
          "declaration": {
            "name": "ComposerSectionElement",
            "module": "src/composer/composer-section.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-composer-section",
          "declaration": {
            "name": "ComposerSectionElement",
            "module": "src/composer/composer-section.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/composer/composer-track.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ComposerTrackElement",
          "members": [
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "elementsById",
              "type": {
                "text": "Record<string, Element>"
              },
              "privacy": "private",
              "default": "{}"
            },
            {
              "kind": "method",
              "name": "handleChanged",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_event",
                  "type": {
                    "text": "EventChanged"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleResize",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "entries",
                  "type": {
                    "text": "ResizeObserverEntry[]"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "height",
              "privacy": "protected",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "maxWidth",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "max-width"
            },
            {
              "kind": "method",
              "name": "mashIndex",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "DragEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "resizeController",
              "type": {
                "text": "ResizeController<number> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "scale",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "1.0",
              "attribute": "scale"
            },
            {
              "kind": "field",
              "name": "trackIndex",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "attribute": "track-index"
            },
            {
              "kind": "field",
              "name": "width",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "width"
            },
            {
              "kind": "field",
              "name": "x",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "x"
            },
            {
              "kind": "field"
            }
          ],
          "attributes": [
            {
              "name": "track-index",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "fieldName": "trackIndex"
            },
            {
              "name": "scale",
              "type": {
                "text": "number"
              },
              "default": "1.0",
              "fieldName": "scale"
            },
            {
              "name": "width",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "width"
            },
            {
              "name": "max-width",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "maxWidth"
            },
            {
              "name": "x",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "x"
            }
          ],
          "superclass": {
            "name": "WithDropTargetMixin",
            "module": "src/composer/composer-track.ts"
          },
          "tagName": "movie-masher-composer-track",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ComposerTrackElement",
          "declaration": {
            "name": "ComposerTrackElement",
            "module": "src/composer/composer-track.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-composer-track",
          "declaration": {
            "name": "ComposerTrackElement",
            "module": "src/composer/composer-track.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/composer/composer-zoom.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ComposerZoomElement",
          "members": [
            {
              "kind": "field",
              "name": "zoom",
              "privacy": "protected",
              "type": {
                "text": "number"
              },
              "default": "1.0"
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            }
          ],
          "superclass": {
            "name": "WithDisablable",
            "module": "src/composer/composer-zoom.ts"
          },
          "tagName": "movie-masher-composer-zoom",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ComposerZoomElement",
          "declaration": {
            "name": "ComposerZoomElement",
            "module": "src/composer/composer-zoom.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-composer-zoom",
          "declaration": {
            "name": "ComposerZoomElement",
            "module": "src/composer/composer-zoom.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/composer/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./composer-content.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./composer-div.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./composer-footer.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./composer-header.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./composer-icon.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./composer-section.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./composer-track.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./composer-zoom.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/asset.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "AssetControlElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-control-asset'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "AssetControlElement",
          "members": [
            {
              "kind": "field",
              "name": "acceptsClip",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_icon",
              "type": {
                "text": "SVGSVGElement | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "SVGSVGElement | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_iconPromise",
              "type": {
                "text": "Promise<void> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "iconPromise",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "iconPromiseInitialize",
              "type": {
                "text": "Promise<void>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "iconSize",
              "type": {
                "text": "Size | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "iconUpdate",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "dropValid",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "dataTransfer",
                  "type": {
                    "text": "DataTransfer | null"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleDropped",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "DragEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setInputValue",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Scalar"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "timeout",
              "type": {
                "text": "Timeout | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "EventControlDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleNode",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventControl"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "attribute": ""
            }
          ],
          "superclass": {
            "name": "WithDropTarget",
            "module": "src/control/asset.ts"
          },
          "tagName": "AssetControlElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AssetControlElement",
          "declaration": {
            "name": "AssetControlElement",
            "module": "src/control/asset.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "AssetControlElementName",
          "declaration": {
            "name": "AssetControlElement",
            "module": "src/control/asset.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/boolean.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "BooleanControlElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-control-boolean'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "BooleanControlElement",
          "members": [
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "inputValue",
              "type": {
                "text": "Scalar | undefined"
              }
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "EventControlDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleNode",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventControl"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            }
          ],
          "superclass": {
            "name": "WithControl",
            "module": "src/control/boolean.ts"
          },
          "tagName": "BooleanControlElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BooleanControlElement",
          "declaration": {
            "name": "BooleanControlElement",
            "module": "src/control/boolean.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "BooleanControlElementName",
          "declaration": {
            "name": "BooleanControlElement",
            "module": "src/control/boolean.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/control-input.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ControlInputElement",
          "members": [
            {
              "kind": "field",
              "name": "_control",
              "type": {
                "text": "Node | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "control",
              "type": {
                "text": "Node | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "controlInitialize",
              "type": {
                "text": "Node | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "dataType",
              "type": {
                "text": "DataType | undefined"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "propertyDataType",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "DataType | undefined"
                }
              },
              "parameters": [
                {
                  "name": "propertyId",
                  "type": {
                    "text": "PropertyId"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "dataTypeDeclaration",
              "type": {
                "text": "PropertyDeclarations"
              },
              "static": true,
              "default": "{\n    dataType: { type: String, attribute: 'data-type' },\n  }"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "attribute": ""
            }
          ],
          "superclass": {
            "name": "WithControlProperty",
            "module": "src/control/control-input.ts"
          },
          "tagName": "movie-masher-control-input",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ControlInputElement",
          "declaration": {
            "name": "ControlInputElement",
            "module": "src/control/control-input.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-control-input",
          "declaration": {
            "name": "ControlInputElement",
            "module": "src/control/control-input.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/control-row.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ControlRowElement",
          "members": [
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataType",
              "type": {
                "text": "DataType | undefined"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "DataType | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "propertyId",
              "privacy": "public",
              "type": {
                "text": "PropertyId | undefined"
              },
              "attribute": "property-id"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "property-id",
              "type": {
                "text": "PropertyId | undefined"
              },
              "fieldName": "propertyId"
            },
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "ImporterComponent",
            "module": "/src/Base/ImporterComponent.js"
          },
          "tagName": "movie-masher-control-row",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ControlRowElement",
          "declaration": {
            "name": "ControlRowElement",
            "module": "src/control/control-row.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-control-row",
          "declaration": {
            "name": "ControlRowElement",
            "module": "src/control/control-row.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./boolean.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./control-input.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./control-row.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./group/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./numeric.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./rgb.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./string.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asset.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/numeric.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "NumericControlElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-control-numeric'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "NumericControlElement",
          "members": [
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "inputValue",
              "type": {
                "text": "Scalar | undefined"
              }
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "detail",
                  "type": {
                    "text": "EventControlDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleNode",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventControl"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "types",
              "type": {
                "text": "array"
              },
              "privacy": "private",
              "static": true,
              "default": "[DataTypeFrame, DataTypeNumber, DataTypePercent]"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            }
          ],
          "superclass": {
            "name": "WithControl",
            "module": "src/control/numeric.ts"
          },
          "tagName": "NumericControlElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NumericControlElement",
          "declaration": {
            "name": "NumericControlElement",
            "module": "src/control/numeric.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "NumericControlElementName",
          "declaration": {
            "name": "NumericControlElement",
            "module": "src/control/numeric.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/rgb.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "RgbControlElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-control-rgb'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "RgbControlElement",
          "members": [
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "detail",
                  "type": {
                    "text": "EventControlDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleNode",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventControl"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            }
          ],
          "superclass": {
            "name": "WithControl",
            "module": "src/control/rgb.ts"
          },
          "tagName": "RgbControlElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RgbControlElement",
          "declaration": {
            "name": "RgbControlElement",
            "module": "src/control/rgb.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "RgbControlElementName",
          "declaration": {
            "name": "RgbControlElement",
            "module": "src/control/rgb.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/string.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "StringControlElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-control-string'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "StringControlElement",
          "members": [
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "detail",
                  "type": {
                    "text": "EventControlDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleNode",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventControl"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            }
          ],
          "superclass": {
            "name": "WithControl",
            "module": "src/control/string.ts"
          },
          "tagName": "StringControlElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "StringControlElement",
          "declaration": {
            "name": "StringControlElement",
            "module": "src/control/string.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "StringControlElementName",
          "declaration": {
            "name": "StringControlElement",
            "module": "src/control/string.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/icon/fetch.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/icon/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./fetch.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/importer/importer-div.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ImporterDivElement",
          "members": [
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleImporter",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "StringEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "importer",
              "type": {
                "text": "ClientImporter | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "importerId",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "importer-id"
            },
            {
              "kind": "field",
              "name": "_importers",
              "type": {
                "text": "ClientImporters | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "importers",
              "type": {
                "text": "ClientImporters"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "importersInitialize",
              "type": {
                "text": "ClientImporters"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_importerElements",
              "type": {
                "text": "Htmls | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "importerElements",
              "type": {
                "text": "Htmls"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "importerElementsInitialize",
              "type": {
                "text": "Htmls"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            },
            {
              "kind": "field",
              "name": "cssDivHostBackground",
              "static": true,
              "default": "css`\n    :host {\n      background-color: var(--div-back);\n      color: var(--div-fore);\n    }\n  `",
              "inheritedFrom": {
                "name": "Div",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "importer-id",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "importerId"
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Div",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-importer-div",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ImporterDivElement",
          "declaration": {
            "name": "ImporterDivElement",
            "module": "src/importer/importer-div.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-importer-div",
          "declaration": {
            "name": "ImporterDivElement",
            "module": "src/importer/importer-div.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/importer/importer-footer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ImporterFooterElement",
          "members": [
            {
              "kind": "field",
              "name": "assetObjects",
              "privacy": "public",
              "type": {
                "text": "AssetObjects"
              },
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "handleImporterComplete",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleImporterChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventImporterChange"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Footer",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-importer-footer",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ImporterFooterElement",
          "declaration": {
            "name": "ImporterFooterElement",
            "module": "src/importer/importer-footer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-importer-footer",
          "declaration": {
            "name": "ImporterFooterElement",
            "module": "src/importer/importer-footer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/importer/importer-header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ImporterHeaderElement",
          "superclass": {
            "name": "Header",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-importer-header",
          "customElement": true,
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ImporterHeaderElement",
          "declaration": {
            "name": "ImporterHeaderElement",
            "module": "src/importer/importer-header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-importer-header",
          "declaration": {
            "name": "ImporterHeaderElement",
            "module": "src/importer/importer-header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/importer/importer-section.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ImporterSectionElement",
          "members": [
            {
              "kind": "method",
              "name": "divContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "footerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "headerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "styleHost",
              "static": true,
              "default": "css`\n    :host {\n      flex-grow: 1;\n      display: flex;\n    }\n  `",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "styleSection",
              "static": true,
              "default": "css`\n    section {\n      flex-grow: 1;\n      overflow: hidden;\n      display: grid;\n      grid-template-rows: var(--header-height) 1fr var(--footer-height);\n      grid-template-columns: 1fr;\n      border: var(--border);\n      border-color: var(--section-back);\n      border-radius: var(--border-radius);\n    }\n  `",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Section",
            "module": "/src/Base/Section.js"
          },
          "tagName": "movie-masher-importer-section",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ImporterSectionElement",
          "declaration": {
            "name": "ImporterSectionElement",
            "module": "src/importer/importer-section.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-importer-section",
          "declaration": {
            "name": "ImporterSectionElement",
            "module": "src/importer/importer-section.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/importer/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./importer-div.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./importer-footer.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./importer-header.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./importer-section.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/inspector/SelectConstants.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "selectorTypeBest",
          "return": {
            "type": {
              "text": "SelectorType"
            }
          },
          "parameters": [
            {
              "name": "selectorType",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "selectorTypes",
              "type": {
                "text": "Strings"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "selectorTypeBest",
          "declaration": {
            "name": "selectorTypeBest",
            "module": "src/inspector/SelectConstants.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/inspector/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./inspector-chooser.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./inspector-content.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./inspector-div.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./inspector-footer.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./inspector-header.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./inspector-section.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./inspector-target.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./SelectConstants.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/inspector/inspector-chooser.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "InspectorChooserName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-inspector-chooser'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "InspectorChooserElement",
          "members": [
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "dispatchChangedInspectorSelectors",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleInspectorChooser",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "StringEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleInspectorSelectors",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventInspectorSelectors"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "partSelectorTypes",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "SelectorTypes"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "selectedPart",
              "privacy": "protected",
              "type": {
                "text": "string"
              },
              "default": "TypeMash"
            },
            {
              "kind": "field",
              "name": "selectors",
              "privacy": "public",
              "type": {
                "text": "Strings"
              },
              "default": "[]",
              "attribute": "selectors"
            },
            {
              "kind": "field",
              "name": "parts"
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "selectors",
              "type": {
                "text": "Strings"
              },
              "default": "[]",
              "fieldName": "selectors"
            }
          ],
          "superclass": {
            "name": "WithDisablable",
            "module": "src/inspector/inspector-chooser.ts"
          },
          "tagName": "InspectorChooserName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectorChooserElement",
          "declaration": {
            "name": "InspectorChooserElement",
            "module": "src/inspector/inspector-chooser.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "InspectorChooserName",
          "declaration": {
            "name": "InspectorChooserElement",
            "module": "src/inspector/inspector-chooser.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/inspector/inspector-content.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "InspectorContentElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-inspector-content'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "InspectorContentElement",
          "members": [
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "filter",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "filter"
            },
            {
              "kind": "method",
              "name": "handleChangedInspectorSelectors",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedInspectorSelectors"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChangedMashAsset",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedMashAsset"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "selectors",
              "privacy": "public",
              "type": {
                "text": "SelectorTypes"
              },
              "default": "[]",
              "attribute": "selectors"
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "selectors",
              "type": {
                "text": "SelectorTypes"
              },
              "default": "[]",
              "fieldName": "selectors"
            },
            {
              "name": "filter",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "filter"
            }
          ],
          "superclass": {
            "name": "WithDisablable",
            "module": "src/inspector/inspector-content.ts"
          },
          "tagName": "InspectorContentElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectorContentElementName",
          "declaration": {
            "name": "InspectorContentElementName",
            "module": "src/inspector/inspector-content.ts"
          }
        },
        {
          "kind": "js",
          "name": "InspectorContentElement",
          "declaration": {
            "name": "InspectorContentElement",
            "module": "src/inspector/inspector-content.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "InspectorContentElementName",
          "declaration": {
            "name": "InspectorContentElement",
            "module": "src/inspector/inspector-content.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/inspector/inspector-div.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "InspectorDivElement",
          "members": [
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssDivHostBackground",
              "static": true,
              "default": "css`\n    :host {\n      background-color: var(--div-back);\n      color: var(--div-fore);\n    }\n  `",
              "inheritedFrom": {
                "name": "Div",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Div",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-inspector-div",
          "customElement": true,
          "attributes": [
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectorDivElement",
          "declaration": {
            "name": "InspectorDivElement",
            "module": "src/inspector/inspector-div.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-inspector-div",
          "declaration": {
            "name": "InspectorDivElement",
            "module": "src/inspector/inspector-div.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/inspector/inspector-footer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "InspectorFooterElement",
          "members": [
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Footer",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-inspector-footer",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectorFooterElement",
          "declaration": {
            "name": "InspectorFooterElement",
            "module": "src/inspector/inspector-footer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-inspector-footer",
          "declaration": {
            "name": "InspectorFooterElement",
            "module": "src/inspector/inspector-footer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/inspector/inspector-header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "InspectorHeaderElement",
          "members": [
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Header",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-inspector-header",
          "customElement": true,
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectorHeaderElement",
          "declaration": {
            "name": "InspectorHeaderElement",
            "module": "src/inspector/inspector-header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-inspector-header",
          "declaration": {
            "name": "InspectorHeaderElement",
            "module": "src/inspector/inspector-header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/inspector/inspector-section.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "InspectorSectionElement",
          "members": [
            {
              "kind": "method",
              "name": "divContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "footerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "headerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "styleHost",
              "static": true,
              "default": "css`\n    :host {\n      flex-grow: 1;\n      display: flex;\n    }\n  `",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "styleSection",
              "static": true,
              "default": "css`\n    section {\n      flex-grow: 1;\n      overflow: hidden;\n      display: grid;\n      grid-template-rows: var(--header-height) 1fr var(--footer-height);\n      grid-template-columns: 1fr;\n      border: var(--border);\n      border-color: var(--section-back);\n      border-radius: var(--border-radius);\n    }\n  `",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Section",
            "module": "/src/Base/Section.js"
          },
          "tagName": "movie-masher-inspector-section",
          "customElement": true,
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectorSectionElement",
          "declaration": {
            "name": "InspectorSectionElement",
            "module": "src/inspector/inspector-section.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-inspector-section",
          "declaration": {
            "name": "InspectorSectionElement",
            "module": "src/inspector/inspector-section.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/inspector/inspector-target.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "InspectorTargetElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-inspector-target'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "InspectorTargetElement",
          "members": [
            {
              "kind": "method",
              "name": "resetListeners",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "selectedPropertyIds",
              "type": {
                "text": "PropertyIds"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "targetId",
              "privacy": "public",
              "type": {
                "text": "TargetId | undefined"
              },
              "attribute": "target-id"
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "target-id",
              "type": {
                "text": "TargetId | undefined"
              },
              "fieldName": "targetId"
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "ImporterComponent",
            "module": "/src/Base/ImporterComponent.js"
          },
          "tagName": "InspectorTargetElementName",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectorTargetElementName",
          "declaration": {
            "name": "InspectorTargetElementName",
            "module": "src/inspector/inspector-target.ts"
          }
        },
        {
          "kind": "js",
          "name": "InspectorTargetElement",
          "declaration": {
            "name": "InspectorTargetElement",
            "module": "src/inspector/inspector-target.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "InspectorTargetElementName",
          "declaration": {
            "name": "InspectorTargetElement",
            "module": "src/inspector/inspector-target.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/instance/ClientInstanceClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClientInstanceClass",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "ClientAsset"
              }
            },
            {
              "kind": "method",
              "name": "changeScalar",
              "return": {
                "type": {
                  "text": "ChangeActionObject"
                }
              },
              "parameters": [
                {
                  "name": "propertyId",
                  "type": {
                    "text": "PropertyId"
                  }
                },
                {
                  "name": "scalar",
                  "optional": true,
                  "type": {
                    "text": "Scalar"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "clip",
              "type": {
                "text": "ClientClip"
              }
            },
            {
              "kind": "method",
              "name": "initializeProperties",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "InstanceArgs"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "targetId",
              "type": {
                "text": "TargetId"
              },
              "default": "TypeContent"
            },
            {
              "kind": "method",
              "name": "unload",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "value",
              "return": {
                "type": {
                  "text": "Scalar | undefined"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "InstanceClass",
            "package": "@moviemasher/lib-shared"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientInstanceClass",
          "declaration": {
            "name": "ClientInstanceClass",
            "module": "src/instance/ClientInstanceClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/instance/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ClientInstanceClass.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/media/client-audio.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "requestAudioPromise",
          "return": {
            "type": {
              "text": "Promise<ClientAudioDataOrError>"
            }
          },
          "parameters": [
            {
              "name": "request",
              "type": {
                "text": "MediaRequest"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "requestAudioPromise",
          "declaration": {
            "name": "requestAudioPromise",
            "module": "src/media/client-audio.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/media/client-font.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "requestFontPromise",
          "return": {
            "type": {
              "text": "Promise<ClientFontDataOrError>"
            }
          },
          "parameters": [
            {
              "name": "request",
              "type": {
                "text": "MediaRequest"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "requestFontPromise",
          "declaration": {
            "name": "requestFontPromise",
            "module": "src/media/client-font.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/media/client-image.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "requestImagePromise",
          "return": {
            "type": {
              "text": "Promise<ClientImageDataOrError>"
            }
          },
          "parameters": [
            {
              "name": "request",
              "type": {
                "text": "MediaRequest"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "requestImagePromise",
          "declaration": {
            "name": "requestImagePromise",
            "module": "src/media/client-image.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/media/client-video.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "requestVideoPromise",
          "return": {
            "type": {
              "text": "Promise<ClientVideoDataOrError>"
            }
          },
          "parameters": [
            {
              "name": "request",
              "type": {
                "text": "MediaRequest"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "requestVideoPromise",
          "declaration": {
            "name": "requestVideoPromise",
            "module": "src/media/client-video.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/media/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./client-audio.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./client-font.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./client-image.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./client-video.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/selector/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./selector-div.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./selector-footer.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./selector-header.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./selector-section.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./selector-content.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/selector/selector-content.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "SelectorContentElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-selector-content'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "SelectorContentElement",
          "members": [
            {
              "kind": "field",
              "name": "acceptsClip",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "assetObjectsFetched",
              "type": {
                "text": "AssetObjects"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "assetObjectsImported",
              "privacy": "protected",
              "type": {
                "text": "AssetObjects"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "assetObjectsCombined",
              "type": {
                "text": "AssetObjects"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "assetObjectsPromise",
              "type": {
                "text": "Promise<DataOrError<AssetObjects>> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "assetObjectsPromiseRefresh",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "assetType",
              "privacy": "public",
              "type": {
                "text": "AssetType | undefined"
              },
              "attribute": "assetType"
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "elementsById",
              "type": {
                "text": "Record<string, Element>"
              },
              "privacy": "private",
              "default": "{}"
            },
            {
              "kind": "method",
              "name": "dropValid",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "dataTransfer",
                  "type": {
                    "text": "DataTransfer | null"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleDropped",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "DragEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleAssetType",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<AssetType>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleImportAssetObjects",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "ImportAssetObjectsEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSourceType",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<Source>"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "iconSize",
              "type": {
                "text": "Size | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "sourceType",
              "privacy": "public",
              "type": {
                "text": "Source | undefined"
              },
              "attribute": "sourceType"
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "attribute": ""
            },
            {
              "name": "assetType",
              "type": {
                "text": "AssetType | undefined"
              },
              "fieldName": "assetType"
            },
            {
              "name": "sourceType",
              "type": {
                "text": "Source | undefined"
              },
              "fieldName": "sourceType"
            }
          ],
          "superclass": {
            "name": "WithDropTarget",
            "module": "src/selector/selector-content.ts"
          },
          "tagName": "SelectorContentElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SelectorContentElement",
          "declaration": {
            "name": "SelectorContentElement",
            "module": "src/selector/selector-content.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "SelectorContentElementName",
          "declaration": {
            "name": "SelectorContentElement",
            "module": "src/selector/selector-content.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/selector/selector-div.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SelectorDivElement",
          "members": [
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssDivHostBackground",
              "static": true,
              "default": "css`\n    :host {\n      background-color: var(--div-back);\n      color: var(--div-fore);\n    }\n  `",
              "inheritedFrom": {
                "name": "Div",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Div",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-selector-div",
          "customElement": true,
          "attributes": [
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SelectorDivElement",
          "declaration": {
            "name": "SelectorDivElement",
            "module": "src/selector/selector-div.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-selector-div",
          "declaration": {
            "name": "SelectorDivElement",
            "module": "src/selector/selector-div.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/selector/selector-footer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SelectorFooterElement",
          "members": [
            {
              "kind": "field",
              "name": "assetType",
              "privacy": "public",
              "type": {
                "text": "AssetType | undefined"
              },
              "attribute": "assetType"
            },
            {
              "kind": "method",
              "name": "handleAssetType",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<AssetType>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            },
            {
              "name": "assetType",
              "type": {
                "text": "AssetType | undefined"
              },
              "fieldName": "assetType"
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Footer",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-selector-footer",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SelectorFooterElement",
          "declaration": {
            "name": "SelectorFooterElement",
            "module": "src/selector/selector-footer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-selector-footer",
          "declaration": {
            "name": "SelectorFooterElement",
            "module": "src/selector/selector-footer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/selector/selector-header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SelectorHeaderElement",
          "superclass": {
            "name": "Header",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-selector-header",
          "customElement": true,
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SelectorHeaderElement",
          "declaration": {
            "name": "SelectorHeaderElement",
            "module": "src/selector/selector-header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-selector-header",
          "declaration": {
            "name": "SelectorHeaderElement",
            "module": "src/selector/selector-header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/selector/selector-section.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SelectorSectionElement",
          "members": [
            {
              "kind": "method",
              "name": "divContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "footerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "headerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "styleHost",
              "static": true,
              "default": "css`\n    :host {\n      flex-grow: 1;\n      display: flex;\n    }\n  `",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "styleSection",
              "static": true,
              "default": "css`\n    section {\n      flex-grow: 1;\n      overflow: hidden;\n      display: grid;\n      grid-template-rows: var(--header-height) 1fr var(--footer-height);\n      grid-template-columns: 1fr;\n      border: var(--border);\n      border-color: var(--section-back);\n      border-radius: var(--border-radius);\n    }\n  `",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Section",
            "module": "/src/Base/Section.js"
          },
          "tagName": "movie-masher-selector-section",
          "customElement": true,
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SelectorSectionElement",
          "declaration": {
            "name": "SelectorSectionElement",
            "module": "src/selector/selector-section.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-selector-section",
          "declaration": {
            "name": "SelectorSectionElement",
            "module": "src/selector/selector-section.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utility/ClientAssetManagerClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClientAssetManagerClass",
          "members": [
            {
              "kind": "method",
              "name": "asset",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "ClientAsset"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "AssetObject"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "assets",
              "type": {
                "text": "ClientAssets"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "byType",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "ClientAssets"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "AssetType"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "context",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "'client'"
            },
            {
              "kind": "method",
              "name": "define",
              "return": {
                "type": {
                  "text": "ClientAsset"
                }
              },
              "parameters": [
                {
                  "name": "media",
                  "type": {
                    "text": "string | AssetObject"
                  }
                },
                {
                  "name": "manageType",
                  "optional": true,
                  "type": {
                    "text": "ManageType"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "fromId",
              "return": {
                "type": {
                  "text": "ClientAsset"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "install",
              "return": {
                "type": {
                  "text": "ClientAssets"
                }
              },
              "parameters": [
                {
                  "name": "media",
                  "type": {
                    "text": "ClientAsset | ClientAssets"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateDefinitionId",
              "parameters": [
                {
                  "name": "oldId",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "newId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleActionEnabled",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventActionEnabled"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleAction",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAction"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleManagedAsset",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventManagedAsset"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleManagedAssetIcon",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventManagedAssetIcon"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleManagedAssetId",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventManagedAssetId"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleManagedAssetScalar",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventManagedAssetScalar"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleReleaseAssets",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventReleaseManagedAssets"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_instance",
              "type": {
                "text": "ClientAssetManagerClass | undefined"
              },
              "privacy": "private",
              "static": true
            },
            {
              "kind": "field",
              "name": "instance",
              "type": {
                "text": "ClientAssetManagerClass"
              },
              "static": true
            },
            {
              "kind": "field",
              "name": "_saving",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "static": true,
              "default": "false"
            },
            {
              "kind": "field",
              "name": "saving",
              "privacy": "private",
              "static": true
            },
            {
              "kind": "field",
              "name": "saving",
              "privacy": "private",
              "static": true
            }
          ],
          "superclass": {
            "name": "AssetManagerClass",
            "package": "@moviemasher/runtime-shared"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientAssetManagerClass",
          "declaration": {
            "name": "ClientAssetManagerClass",
            "module": "src/utility/ClientAssetManagerClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utility/draganddrop.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "TransferTypeFiles",
          "type": {
            "text": "string"
          },
          "default": "'Files'"
        },
        {
          "kind": "function",
          "name": "isDragDefinitionObject",
          "return": {
            "type": {
              "text": "value is DragDefinitionObject"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isTransferType",
          "return": {
            "type": {
              "text": "value is TransferType"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "dropType",
          "return": {
            "type": {
              "text": "TransferType | undefined"
            }
          },
          "parameters": [
            {
              "name": "dataTransfer",
              "optional": true,
              "type": {
                "text": "DataTransfer | null"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "dragType",
          "return": {
            "type": {
              "text": "AssetType | undefined"
            }
          },
          "parameters": [
            {
              "name": "dataTransfer",
              "optional": true,
              "type": {
                "text": "DataTransfer | null"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "dragTypes",
          "return": {
            "type": {
              "text": "Strings"
            }
          },
          "parameters": [
            {
              "name": "dataTransfer",
              "optional": true,
              "type": {
                "text": "DataTransfer | null"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "dragTypeValid",
          "return": {
            "type": {
              "text": "dataTransfer is DataTransfer"
            }
          },
          "parameters": [
            {
              "name": "dataTransfer",
              "optional": true,
              "type": {
                "text": "DataTransfer | null"
              }
            },
            {
              "name": "allowClip",
              "default": "false"
            }
          ]
        },
        {
          "kind": "function",
          "name": "dragData",
          "parameters": [
            {
              "name": "dataTransfer",
              "optional": true,
              "type": {
                "text": "DataTransfer"
              }
            },
            {
              "name": "type",
              "optional": true,
              "type": {
                "text": "TransferType"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "DragElementRect",
          "return": {
            "type": {
              "text": "Rect"
            }
          },
          "parameters": [
            {
              "name": "current",
              "type": {
                "text": "Element"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "DragElementPoint",
          "return": {
            "type": {
              "text": "Point"
            }
          },
          "parameters": [
            {
              "name": "event",
              "type": {
                "text": "DragEvent"
              }
            },
            {
              "name": "current",
              "type": {
                "text": "Element | Rect"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "dropRawFiles",
          "parameters": [
            {
              "name": "fileList",
              "type": {
                "text": "FileList"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "dropDraggable",
          "parameters": [
            {
              "name": "draggable",
              "type": {
                "text": "Draggable"
              }
            },
            {
              "name": "editorIndex",
              "optional": true,
              "type": {
                "text": "MashIndex"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "droppingFiles",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "dataTransfer",
              "type": {
                "text": "DataTransfer | null | undefined"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "droppedMashIndex",
          "return": {
            "type": {
              "text": "MashIndex"
            }
          },
          "parameters": [
            {
              "name": "dataTransfer",
              "type": {
                "text": "DataTransfer"
              }
            },
            {
              "name": "trackIndex",
              "default": "-1"
            },
            {
              "name": "scale",
              "default": "0"
            },
            {
              "name": "offsetDrop",
              "default": "0"
            },
            {
              "name": "clipId",
              "default": "''"
            }
          ]
        },
        {
          "kind": "function",
          "name": "dropped",
          "parameters": [
            {
              "name": "event",
              "type": {
                "text": "DragEvent"
              }
            },
            {
              "name": "mashIndex",
              "optional": true,
              "type": {
                "text": "MashIndex"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TransferTypeFiles",
          "declaration": {
            "name": "TransferTypeFiles",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "isDragDefinitionObject",
          "declaration": {
            "name": "isDragDefinitionObject",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "isTransferType",
          "declaration": {
            "name": "isTransferType",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "dropType",
          "declaration": {
            "name": "dropType",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "dragType",
          "declaration": {
            "name": "dragType",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "dragTypes",
          "declaration": {
            "name": "dragTypes",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "dragTypeValid",
          "declaration": {
            "name": "dragTypeValid",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "dragData",
          "declaration": {
            "name": "dragData",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "DragElementRect",
          "declaration": {
            "name": "DragElementRect",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "DragElementPoint",
          "declaration": {
            "name": "DragElementPoint",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "dropRawFiles",
          "declaration": {
            "name": "dropRawFiles",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "dropDraggable",
          "declaration": {
            "name": "dropDraggable",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "droppingFiles",
          "declaration": {
            "name": "droppingFiles",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "droppedMashIndex",
          "declaration": {
            "name": "droppedMashIndex",
            "module": "src/utility/draganddrop.ts"
          }
        },
        {
          "kind": "js",
          "name": "dropped",
          "declaration": {
            "name": "dropped",
            "module": "src/utility/draganddrop.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utility/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./pixel.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./request.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./draganddrop.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ClientAssetManagerClass.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utility/pixel.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "pixelPerFrame",
          "return": {
            "type": {
              "text": "number"
            }
          },
          "parameters": [
            {
              "name": "frames",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "width",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "zoom",
              "default": "1"
            }
          ]
        },
        {
          "kind": "function",
          "name": "pixelFromFrame",
          "return": {
            "type": {
              "text": "number"
            }
          },
          "parameters": [
            {
              "name": "frame",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "perFrame",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "rounding",
              "default": "'ceil'"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pixelPerFrame",
          "declaration": {
            "name": "pixelPerFrame",
            "module": "src/utility/pixel.ts"
          }
        },
        {
          "kind": "js",
          "name": "pixelFromFrame",
          "declaration": {
            "name": "pixelFromFrame",
            "module": "src/utility/pixel.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utility/request.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "requestPopulate",
          "return": {
            "type": {
              "text": "EndpointRequest"
            }
          },
          "parameters": [
            {
              "name": "request",
              "type": {
                "text": "EndpointRequest"
              }
            },
            {
              "name": "params",
              "optional": true,
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "requestJsonRecordPromise",
          "return": {
            "type": {
              "text": "Promise<JsonRecordDataOrError>"
            }
          },
          "parameters": [
            {
              "name": "request",
              "type": {
                "text": "EndpointRequest"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "requestJsonRecordsPromise",
          "return": {
            "type": {
              "text": "Promise<JsonRecordsDataOrError>"
            }
          },
          "parameters": [
            {
              "name": "request",
              "type": {
                "text": "EndpointRequest"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "requestPopulate",
          "declaration": {
            "name": "requestPopulate",
            "module": "src/utility/request.ts"
          }
        },
        {
          "kind": "js",
          "name": "requestJsonRecordPromise",
          "declaration": {
            "name": "requestJsonRecordPromise",
            "module": "src/utility/request.ts"
          }
        },
        {
          "kind": "js",
          "name": "requestJsonRecordsPromise",
          "declaration": {
            "name": "requestJsonRecordsPromise",
            "module": "src/utility/request.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/viewer/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./viewer-div.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./viewer-footer.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./viewer-header.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./viewer-content.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./viewer-section.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./viewer-slider.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/viewer/viewer-content.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ViewerContentElement",
          "members": [
            {
              "kind": "field",
              "name": "acceptsClip",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "handleChangedPreviewItems",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handlePointerDown",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleRect",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventRect"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleResize"
            },
            {
              "kind": "field",
              "name": "point",
              "privacy": "public",
              "type": {
                "text": "Point | undefined"
              }
            },
            {
              "kind": "method",
              "name": "requestItemsPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "field",
              "name": "watchingRedraw",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "watchingTimeout",
              "type": {
                "text": "Timeout | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "attribute": ""
            }
          ],
          "superclass": {
            "name": "WithSizeReactive",
            "module": "src/viewer/viewer-content.ts"
          },
          "tagName": "movie-masher-viewer-content",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ViewerContentElement",
          "declaration": {
            "name": "ViewerContentElement",
            "module": "src/viewer/viewer-content.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-viewer-content",
          "declaration": {
            "name": "ViewerContentElement",
            "module": "src/viewer/viewer-content.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/viewer/viewer-div.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ViewerDivElement",
          "members": [
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssDivHostBackground",
              "static": true,
              "default": "css`\n    :host {\n      background-color: var(--div-back);\n      color: var(--div-fore);\n    }\n  `",
              "inheritedFrom": {
                "name": "Div",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Div",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-viewer-div",
          "customElement": true,
          "attributes": [
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ViewerDivElement",
          "declaration": {
            "name": "ViewerDivElement",
            "module": "src/viewer/viewer-div.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-viewer-div",
          "declaration": {
            "name": "ViewerDivElement",
            "module": "src/viewer/viewer-div.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/viewer/viewer-footer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ViewerFooterElement",
          "members": [
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Footer",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-viewer-footer",
          "customElement": true,
          "attributes": [
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ViewerFooterElement",
          "declaration": {
            "name": "ViewerFooterElement",
            "module": "src/viewer/viewer-footer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-viewer-footer",
          "declaration": {
            "name": "ViewerFooterElement",
            "module": "src/viewer/viewer-footer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/viewer/viewer-header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ViewerHeaderElement",
          "members": [
            {
              "kind": "method",
              "name": "leftContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "rightContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "centerContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHeaderFooter",
              "static": true,
              "default": "css`\n    header, footer {\n      padding: 0;\n      display: flex; \n      flex-grow: 1; \n      background-color: var(--section-back);\n      color: var(--section-fore);\n      gap: var(--spacing);\n      line-height: var(--icon-size);\n      font-size: var(--icon-size);\n    }\n    .center, .left, .right {\n      white-space: nowrap;\n      gap: var(--section-spacing);\n      padding: var(--section-padding);\n    }\n    .center > *, .left > *, .right > * {\n      margin: auto;\n    }\n  \n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssShared",
              "static": true,
              "default": "css`\n    :host {\n      --flex-direction: column;\n    }\n    .center, .left, .right {\n      display: flex;\n    }\n    .center {\n      flex-grow: 1;\n    }\n    .left, .right {\n      flex-grow: 0;\n    }\n  `",
              "inheritedFrom": {
                "name": "LeftCenterRight",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Header",
            "module": "/src/Base/LeftCenterRight.js"
          },
          "tagName": "movie-masher-viewer-header",
          "customElement": true,
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "Header",
                "module": "src/Base/LeftCenterRight.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ViewerHeaderElement",
          "declaration": {
            "name": "ViewerHeaderElement",
            "module": "src/viewer/viewer-header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-viewer-header",
          "declaration": {
            "name": "ViewerHeaderElement",
            "module": "src/viewer/viewer-header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/viewer/viewer-section.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ViewerSectionElement",
          "members": [
            {
              "kind": "method",
              "name": "divContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "footerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "headerContent",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "htmls",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "method",
              "name": "partContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "part",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "slots",
                  "type": {
                    "text": "Htmls"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "attribute": "icon",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "parts",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "styleHost",
              "static": true,
              "default": "css`\n    :host {\n      flex-grow: 1;\n      display: flex;\n    }\n  `",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "styleSection",
              "static": true,
              "default": "css`\n    section {\n      flex-grow: 1;\n      overflow: hidden;\n      display: grid;\n      grid-template-rows: var(--header-height) 1fr var(--footer-height);\n      grid-template-columns: 1fr;\n      border: var(--border);\n      border-color: var(--section-back);\n      border-radius: var(--border-radius);\n    }\n  `",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": "",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotChildren",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "slotChangeHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "type": {
                "text": "Strings"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "partSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'|'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "field",
              "name": "slotSeparator",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'-'",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "kind": "method",
              "name": "elementNames",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "optional": true,
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "Elements"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTags",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "importFinished",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "importTag",
              "privacy": "protected",
              "static": true,
              "parameters": [
                {
                  "name": "names",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "promises",
              "type": {
                "text": "Map<string, Promise<string>>"
              },
              "privacy": "private",
              "static": true,
              "default": "new Map()",
              "inheritedFrom": {
                "name": "ImporterComponent",
                "module": "src/Base/ImporterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Section",
            "module": "/src/Base/Section.js"
          },
          "tagName": "movie-masher-viewer-section",
          "customElement": true,
          "attributes": [
            {
              "name": "",
              "fieldName": "",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "'app'",
              "fieldName": "icon",
              "inheritedFrom": {
                "name": "Section",
                "module": "src/Base/Section.ts"
              }
            },
            {
              "name": "parts",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "parts",
              "inheritedFrom": {
                "name": "Slotted",
                "module": "src/Base/Slotted.ts"
              }
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ViewerSectionElement",
          "declaration": {
            "name": "ViewerSectionElement",
            "module": "src/viewer/viewer-section.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-viewer-section",
          "declaration": {
            "name": "ViewerSectionElement",
            "module": "src/viewer/viewer-section.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/viewer/viewer-slider.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ViewerSliderElement",
          "members": [
            {
              "kind": "field",
              "name": "frame",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "frame"
            },
            {
              "kind": "field",
              "name": "frames",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "frames"
            },
            {
              "kind": "method",
              "name": "handleDuration",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "NumberEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleFrame",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangedFrame"
                  }
                }
              ]
            },
            {
              "kind": "field"
            },
            {
              "kind": "method",
              "name": "content",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Content"
                }
              },
              "parameters": [
                {
                  "name": "contents",
                  "type": {
                    "text": "Contents"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "contents",
              "type": {
                "text": "Contents"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchExportParts",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "element",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "selector",
                  "default": "'div.root'"
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_exportParts",
              "type": {
                "text": "string | undefined | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportParts",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "exportParts",
              "reflects": true,
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "exportPathsInitialize",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleExportParts",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "unslottedNodes",
              "type": {
                "text": "Nodes"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "method",
              "name": "variable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssBorderBoxSizing",
              "static": true,
              "default": "css`\n    * {\n      box-sizing: border-box;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostDropping",
              "static": true,
              "default": "css`\n    :host(.dropping) {\n      box-shadow: var()\n        0 var(--drop-size) 0 0 var(--color-drop),\n        0 calc(-1 * var(--drop-size)) 0 0 var(--color-drop)\n      ;\n    }\n  `",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cssHostFlex",
              "static": true,
              "default": "css`:host { display: flex; flex-grow: 1; }`",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "frame",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "frame"
            },
            {
              "name": "frames",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "frames"
            },
            {
              "name": "exportParts",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "exportParts",
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ],
          "superclass": {
            "name": "Component",
            "module": "/src/Base/Component"
          },
          "tagName": "movie-masher-viewer-slider",
          "customElement": true,
          "events": [
            {
              "name": "EventTypeExportParts",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "ErrorEvent"
              },
              "inheritedFrom": {
                "name": "Component",
                "module": "src/Base/Component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ViewerSliderElement",
          "declaration": {
            "name": "ViewerSliderElement",
            "module": "src/viewer/viewer-slider.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "movie-masher-viewer-slider",
          "declaration": {
            "name": "ViewerSliderElement",
            "module": "src/viewer/viewer-slider.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/Audible/ClientAudibleAssetMixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "ClientAudibleAssetMixin",
          "members": [
            {
              "kind": "method",
              "name": "audibleSource",
              "return": {
                "type": {
                  "text": "ClientAudioNode | undefined"
                }
              }
            },
            {
              "kind": "field",
              "name": "loadedAudio",
              "type": {
                "text": "ClientAudio | undefined"
              }
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientAudibleAssetMixin",
          "declaration": {
            "name": "ClientAudibleAssetMixin",
            "module": "src/asset/Audible/ClientAudibleAssetMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/Audible/ClientAudibleInstanceGuards.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isClientAudibleInstance",
          "return": {
            "type": {
              "text": "value is ClientAudibleInstance"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isClientAudibleInstance",
          "declaration": {
            "name": "isClientAudibleInstance",
            "module": "src/asset/Audible/ClientAudibleInstanceGuards.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/Audible/ClientAudibleInstanceMixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "ClientAudibleInstanceMixin",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "ClientAudibleAsset"
              }
            },
            {
              "kind": "method",
              "name": "startOptions",
              "return": {
                "type": {
                  "text": "StartOptions"
                }
              },
              "parameters": [
                {
                  "name": "seconds",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "timeRange",
                  "type": {
                    "text": "TimeRange"
                  }
                }
              ]
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientAudibleInstanceMixin",
          "declaration": {
            "name": "ClientAudibleInstanceMixin",
            "module": "src/asset/Audible/ClientAudibleInstanceMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/Audible/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ClientAudibleAssetMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ClientAudibleInstanceMixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/color/image.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClientColorAssetClass",
          "members": [
            {
              "kind": "method",
              "name": "definitionIcon",
              "return": {
                "type": {
                  "text": "Promise<SVGSVGElement> | undefined"
                }
              },
              "parameters": [
                {
                  "name": "size",
                  "type": {
                    "text": "Size"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instanceFromObject",
              "return": {
                "type": {
                  "text": "ColorInstance"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "optional": true,
                  "type": {
                    "text": "ColorInstanceObject"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_defaultAsset",
              "type": {
                "text": "ClientColorAsset | undefined"
              },
              "privacy": "private",
              "static": true
            },
            {
              "kind": "field",
              "name": "defaultAsset",
              "type": {
                "text": "ClientColorAsset"
              },
              "privacy": "private",
              "static": true
            },
            {
              "kind": "method",
              "name": "handleAsset",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAsset"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "WithColorAsset",
            "module": "src/asset/color/image.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "ClientColorInstanceClass",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "ColorAsset & ClientAsset"
              }
            },
            {
              "kind": "method",
              "name": "contentPreviewItemPromise",
              "return": {
                "type": {
                  "text": "Promise<SvgItem>"
                }
              },
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "_shortest",
                  "type": {
                    "text": "PropertySize"
                  }
                },
                {
                  "name": "time",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "_component",
                  "type": {
                    "text": "Panel"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "pathElement",
              "return": {
                "type": {
                  "text": "SvgItem"
                }
              },
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "forecolor",
                  "default": "'none'"
                }
              ]
            }
          ],
          "superclass": {
            "name": "WithColorInstance",
            "module": "src/asset/color/image.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientColorAssetClass",
          "declaration": {
            "name": "ClientColorAssetClass",
            "module": "src/asset/color/image.ts"
          }
        },
        {
          "kind": "js",
          "name": "ClientColorInstanceClass",
          "declaration": {
            "name": "ClientColorInstanceClass",
            "module": "src/asset/color/image.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/color/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./image.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/mash/ClientMashAssetClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClientMashAssetClass",
          "members": [
            {
              "kind": "field",
              "name": "actions",
              "type": {
                "text": "Actions"
              },
              "default": "new ActionsClass(this)"
            },
            {
              "kind": "method",
              "name": "assetCachePromise",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "type": {
                    "text": "CacheOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "addClipToTrack",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "clip",
                  "type": {
                    "text": "ClientClip | ClientClips"
                  }
                },
                {
                  "name": "trackIndex",
                  "default": "0"
                },
                {
                  "name": "insertIndex",
                  "default": "0"
                },
                {
                  "name": "frame",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "addTrack",
              "return": {
                "type": {
                  "text": "Track"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "default": "{}",
                  "type": {
                    "text": "TrackObject"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "buffer"
            },
            {
              "kind": "method",
              "name": "bufferStart",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "bufferStop",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_bufferTimer",
              "type": {
                "text": "Interval | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "changeTiming",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "propertied",
                  "type": {
                    "text": "Propertied"
                  }
                },
                {
                  "name": "property",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "clearDrawInterval",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "clearPreview"
            },
            {
              "kind": "method",
              "name": "clipInstance",
              "return": {
                "type": {
                  "text": "ClientClip"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "ClipObject"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "clips",
              "type": {
                "text": "ClientClips"
              }
            },
            {
              "kind": "method",
              "name": "clipsInTimeOfType",
              "return": {
                "type": {
                  "text": "ClientClips"
                }
              },
              "parameters": [
                {
                  "name": "time",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "avType",
                  "optional": true,
                  "type": {
                    "text": "AVType"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_composition",
              "type": {
                "text": "AudioPreview | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "composition",
              "type": {
                "text": "AudioPreview"
              }
            },
            {
              "kind": "method",
              "name": "compositeVisible",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "time",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "definitionIcon",
              "return": {
                "type": {
                  "text": "Promise<SVGSVGElement> | undefined"
                }
              },
              "parameters": [
                {
                  "name": "_size",
                  "type": {
                    "text": "Size"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "destroy",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "dispatchChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "action",
                  "type": {
                    "text": "Action"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "draw",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "drawInterval",
              "type": {
                "text": "Interval | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "drawRequest",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "drawTime",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "time",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "drawingTime",
              "type": {
                "text": "Time | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "drawnTime",
              "type": {
                "text": "Time | undefined"
              }
            },
            {
              "kind": "method",
              "name": "emitIfFramesChange",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "method",
                  "type": {
                    "text": "() => void"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "encodings",
              "type": {
                "text": "Encodings"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_frame",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "frame",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "method",
              "name": "cacheOptions",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "CacheOptions"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "default": "{}",
                  "type": {
                    "text": "CacheOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleDrawInterval",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleSize",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventSize"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "initializeProperties",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "ClientMashAssetObject"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "loading",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "loadingPromises",
              "type": {
                "text": "Promise<void>[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "protected",
              "default": "{}"
            },
            {
              "kind": "method",
              "name": "putPromise",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "field",
              "name": "_paused",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "paused",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "_playing",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "playing",
              "type": {
                "text": "boolean"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_preview",
              "type": {
                "text": "MashPreview | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "preview",
              "privacy": "private",
              "parameters": [
                {
                  "name": "options",
                  "type": {
                    "text": "MashPreviewOptions"
                  }
                },
                {
                  "name": "selectedClip",
                  "optional": true,
                  "type": {
                    "text": "ClientClip"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "previewInitialize",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "MashPreview"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "type": {
                    "text": "MashPreviewOptions"
                  }
                },
                {
                  "name": "selectedClip",
                  "optional": true,
                  "type": {
                    "text": "ClientClip"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "previewArgs",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "MashPreviewArgs"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "default": "{}",
                  "type": {
                    "text": "MashPreviewOptions"
                  }
                },
                {
                  "name": "selectedClip",
                  "optional": true,
                  "type": {
                    "text": "ClientClip"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "mashPreviewsPromise",
              "return": {
                "type": {
                  "text": "Promise<Previews>"
                }
              },
              "parameters": [
                {
                  "name": "size",
                  "optional": true,
                  "type": {
                    "text": "Size"
                  }
                },
                {
                  "name": "selectedClip",
                  "optional": true,
                  "type": {
                    "text": "ClientClip"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "reload",
              "return": {
                "type": {
                  "text": "Promise<void> | undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "removeClipFromTrack",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "clip",
                  "type": {
                    "text": "ClientClip | ClientClips"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeTrack",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "index",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "restartAfterStop",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "time",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "paused",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "seeking",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "saveNeeded",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "savePromise",
              "type": {
                "text": "Promise<StringDataOrError>"
              }
            },
            {
              "kind": "field",
              "name": "saveAndWipeActions",
              "type": {
                "text": "Promise<StringDataOrError>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "seekTime",
              "type": {
                "text": "Time | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "seekToTime",
              "return": {
                "type": {
                  "text": "Promise<void> | undefined"
                }
              },
              "parameters": [
                {
                  "name": "time",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setDrawInterval",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "setValue",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Scalar"
                  }
                },
                {
                  "name": "property",
                  "optional": true,
                  "type": {
                    "text": "Property"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "stopLoadAndDraw",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void> | undefined"
                }
              },
              "parameters": [
                {
                  "name": "seeking",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "targetId",
              "type": {
                "text": "TargetId"
              },
              "default": "TypeMash"
            },
            {
              "kind": "field",
              "name": "time",
              "type": {
                "text": "Time"
              }
            },
            {
              "kind": "field",
              "name": "timeRange",
              "type": {
                "text": "TimeRange"
              }
            },
            {
              "kind": "field",
              "name": "timeToBuffer",
              "type": {
                "text": "Time"
              }
            },
            {
              "kind": "method",
              "name": "toJSON",
              "return": {
                "type": {
                  "text": "UnknownRecord"
                }
              }
            },
            {
              "kind": "method",
              "name": "trackInstance",
              "return": {
                "type": {
                  "text": "ClientTrack"
                }
              },
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "TrackArgs"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "tracks",
              "type": {
                "text": "ClientTracks"
              }
            },
            {
              "kind": "method",
              "name": "updateAssetId",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "oldId",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "newId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field"
            }
          ],
          "superclass": {
            "name": "WithMashAsset",
            "module": "src/asset/mash/ClientMashAssetClass.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientMashAssetClass",
          "declaration": {
            "name": "ClientMashAssetClass",
            "module": "src/asset/mash/ClientMashAssetClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/mash/MasherClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MasherClass",
          "members": [
            {
              "kind": "field",
              "name": "actions",
              "type": {
                "text": "Actions"
              }
            },
            {
              "kind": "method",
              "name": "add",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "addAssets",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<ClientAssets>"
                }
              },
              "parameters": [
                {
                  "name": "asset",
                  "type": {
                    "text": "ClientAsset | ClientAssets"
                  }
                },
                {
                  "name": "mashIndex",
                  "optional": true,
                  "type": {
                    "text": "MashIndex"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "addTrack",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "_asset",
              "type": {
                "text": "ClientAsset | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "ClientAsset | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_assetId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "assetId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "assureMash",
              "privacy": "private",
              "parameters": [
                {
                  "name": "media",
                  "type": {
                    "text": "ClientAssets"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "autoplay"
            },
            {
              "kind": "field",
              "name": "_buffer",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "buffer",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "method",
              "name": "can",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "clientAction",
                  "type": {
                    "text": "ClientAction"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "clipFromId",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "ClientClip | undefined"
                }
              },
              "parameters": [
                {
                  "name": "clipId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "clipIndex",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "frameOrIndex",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "clips",
                  "type": {
                    "text": "ClientClips"
                  }
                },
                {
                  "name": "dense",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "clips",
              "type": {
                "text": "ClientClips"
              }
            },
            {
              "kind": "method",
              "name": "create"
            },
            {
              "kind": "field",
              "name": "currentTime",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "definitions",
              "type": {
                "text": "ClientAssets"
              }
            },
            {
              "kind": "field",
              "name": "definitionsUnsaved",
              "type": {
                "text": "ClientAssets"
              }
            },
            {
              "kind": "method",
              "name": "destroy"
            },
            {
              "kind": "method",
              "name": "destroyMash",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "dragging",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "drawTimeout",
              "type": {
                "text": "Timeout | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "duration",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "_mashingType",
              "type": {
                "text": "AssetType | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "mashingType",
              "type": {
                "text": "AssetType"
              }
            },
            {
              "kind": "field",
              "name": "editing",
              "type": {
                "text": "boolean"
              },
              "default": "!this.readOnly"
            },
            {
              "kind": "field",
              "name": "endTime",
              "type": {
                "text": "Time"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_fps",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "fps",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "frame",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "frames",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "method",
              "name": "goToTime",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "dispatchDrawLater",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleAddAssets",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAddAssets"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChangeDragging",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangeDragging"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChangeFrame",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangeFrame"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClipId",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventClipId"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleDataType",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventDataType"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleDragging",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventDragging"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleFrame",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventFrame"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMashAsset",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventMashAsset"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePropertyIds",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventPropertyIds"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleValue",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventScalar"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "backgroundNode",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "clipSize",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "frameWidth",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleIconFromFrame",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "IconFromFrameEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMoveClip",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MashMoveClipEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleAction",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAction"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "actionIsHandled",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "action",
                  "type": {
                    "text": "ClientAction"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleAssetId",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAssetId"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChangeAssetId",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangeAssetId"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleActionEnabled",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventActionEnabled"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChangeScalar",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangeScalar"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChangeScalars",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangeScalars"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePreviewItems",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventPreviews"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleRemoveClip",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "StringEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleRemoveTrack",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MashRemoveTrackEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSelectClipId",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventChangeClipId"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSelectedProperties",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "SelectedPropertiesEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTimeRange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventTimeRange"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTargetIds",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventTargetIds"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTrackClips",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "TrackClipsEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "load",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "AssetObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "loadMashAndDraw",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "EventDispatcherListenerRecord"
              },
              "privacy": "private",
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "_loop",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "loop",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "_mashAsset",
              "type": {
                "text": "ClientMashAsset | undefined"
              }
            },
            {
              "kind": "field",
              "name": "mashAsset",
              "type": {
                "text": "ClientMashAsset | undefined"
              }
            },
            {
              "kind": "method",
              "name": "mashAssetObject",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "MashAssetObject"
                }
              },
              "parameters": [
                {
                  "name": "assetObject",
                  "type": {
                    "text": "AssetObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "mashAssetObjectLoadPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "MashAssetObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "move",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "clip",
                  "type": {
                    "text": "ClientClip"
                  }
                },
                {
                  "name": "editorIndex",
                  "default": "{}",
                  "type": {
                    "text": "MashIndex"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "moveTrack",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "_muted",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "muted",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "method",
              "name": "pause",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "paused",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "method",
              "name": "play",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "position",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "positionStep",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "precision"
            },
            {
              "kind": "method",
              "name": "previewsPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<Previews>"
                }
              },
              "parameters": [
                {
                  "name": "maxDimension",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "selectedPropertyIds",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "PropertyIds"
                }
              },
              "parameters": [
                {
                  "name": "targetIds",
                  "type": {
                    "text": "TargetIds"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "readOnly",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "method",
              "name": "redo",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "redraw",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "removeClip",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "clientClip",
                  "optional": true,
                  "type": {
                    "text": "ClientClip"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeTrack",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_track",
                  "type": {
                    "text": "Track"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "flip",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "saved",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "temporaryIdLookup",
                  "optional": true,
                  "type": {
                    "text": "StringRecord"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_selection",
              "type": {
                "text": "ClientClip | false"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "selection",
              "type": {
                "text": "ClientClip | false"
              }
            },
            {
              "kind": "method",
              "name": "selectable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Selectable | false"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "TargetId | PropertyId"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "selectedTargetIds",
              "type": {
                "text": "TargetIds"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "time",
              "type": {
                "text": "Time"
              }
            },
            {
              "kind": "field",
              "name": "timeRange",
              "type": {
                "text": "TimeRange"
              }
            },
            {
              "kind": "method",
              "name": "togglePaused",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "undo",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "unload",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "_volume",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "volume",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MasherClass",
          "declaration": {
            "name": "MasherClass",
            "module": "src/asset/mash/MasherClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/mash/MasherFactory.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "editorArgs",
          "return": {
            "type": {
              "text": "MasherArgs"
            }
          },
          "parameters": [
            {
              "name": "options",
              "default": "{}",
              "type": {
                "text": "MasherOptions"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "masherInstance",
          "return": {
            "type": {
              "text": "Masher"
            }
          },
          "parameters": [
            {
              "name": "options",
              "default": "{}",
              "type": {
                "text": "MasherOptions"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "editorArgs",
          "declaration": {
            "name": "editorArgs",
            "module": "src/asset/mash/MasherFactory.ts"
          }
        },
        {
          "kind": "js",
          "name": "masherInstance",
          "declaration": {
            "name": "masherInstance",
            "module": "src/asset/mash/MasherFactory.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/mash/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./video.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./MasherFactory.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./MasherClass.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ClientMashAssetClass.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/mash/video.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClientMashVideoAssetClass",
          "members": [
            {
              "kind": "method",
              "name": "initializeProperties",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "MashAssetObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleAsset",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAsset"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "WithVideoAsset",
            "module": "src/asset/mash/video.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "ClientMashVideoInstanceClass",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "ClientMashVideoAsset"
              }
            }
          ],
          "superclass": {
            "name": "WithVideoInstance",
            "module": "src/asset/mash/video.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientMashVideoAssetClass",
          "declaration": {
            "name": "ClientMashVideoAssetClass",
            "module": "src/asset/mash/video.ts"
          }
        },
        {
          "kind": "js",
          "name": "ClientMashVideoInstanceClass",
          "declaration": {
            "name": "ClientMashVideoInstanceClass",
            "module": "src/asset/mash/video.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/object/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./video.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/object/video.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/raw/ClientRawAssetClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClientRawAssetClass",
          "members": [
            {
              "kind": "field",
              "name": "assetObject",
              "type": {
                "text": "ClientRawAssetObject"
              }
            },
            {
              "kind": "method",
              "name": "definitionIcon",
              "return": {
                "type": {
                  "text": "Promise<SVGSVGElement> | undefined"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "Size"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ClientAssetClass",
                "module": "src/asset/ClientAssetClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "initializeProperties",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "ClientRawAssetObject"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "request",
              "type": {
                "text": "MediaRequest"
              },
              "default": "request"
            },
            {
              "kind": "method",
              "name": "findTranscoding",
              "return": {
                "type": {
                  "text": "Transcoding | undefined"
                }
              },
              "parameters": [
                {
                  "name": "transcodingType",
                  "type": {
                    "text": "TranscodingType"
                  }
                },
                {
                  "name": "kinds",
                  "type": {
                    "text": "Strings"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ClientAssetClass",
                "module": "src/asset/ClientAssetClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "instanceArgs",
              "return": {
                "type": {
                  "text": "InstanceArgs"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "optional": true,
                  "type": {
                    "text": "InstanceObject"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ClientAssetClass",
                "module": "src/asset/ClientAssetClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "preferredTranscoding",
              "return": {
                "type": {
                  "text": "Transcoding | undefined"
                }
              },
              "parameters": [
                {
                  "name": "types",
                  "type": {
                    "text": "TranscodingTypes"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ClientAssetClass",
                "module": "src/asset/ClientAssetClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "saveNeeded",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "ClientAssetClass",
                "module": "src/asset/ClientAssetClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "savePromise",
              "type": {
                "text": "Promise<StringDataOrError>"
              },
              "inheritedFrom": {
                "name": "ClientAssetClass",
                "module": "src/asset/ClientAssetClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "targetId",
              "type": {
                "text": "TargetId"
              },
              "default": "TypeAsset",
              "inheritedFrom": {
                "name": "ClientAssetClass",
                "module": "src/asset/ClientAssetClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "transcodings",
              "type": {
                "text": "Transcodings"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "ClientAssetClass",
                "module": "src/asset/ClientAssetClass.ts"
              }
            }
          ],
          "superclass": {
            "name": "ClientAssetClass",
            "module": "/src/asset/ClientAssetClass.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientRawAssetClass",
          "declaration": {
            "name": "ClientRawAssetClass",
            "module": "src/asset/raw/ClientRawAssetClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/raw/audio.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClientRawAudioAssetClass",
          "members": [
            {
              "kind": "method",
              "name": "assetCachePromise",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "AssetCacheArgs"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "initializeProperties",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "ClientRawAudioAssetObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instanceFromObject",
              "return": {
                "type": {
                  "text": "AudioInstance"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "optional": true,
                  "type": {
                    "text": "AudioInstanceObject | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instanceArgs",
              "return": {
                "type": {
                  "text": "AudioInstanceArgs"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "default": "{}",
                  "type": {
                    "text": "AudioInstanceObject"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "loadedAudio",
              "type": {
                "text": "ClientAudio | undefined"
              }
            },
            {
              "kind": "method",
              "name": "handleAsset",
              "static": true,
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAsset"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "WithAudioAsset",
            "module": "src/asset/raw/audio.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "ClientRawAudioInstanceClass",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "ClientRawAudioAsset"
              }
            }
          ],
          "superclass": {
            "name": "WithAudioInstance",
            "module": "src/asset/raw/audio.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientRawAudioAssetClass",
          "declaration": {
            "name": "ClientRawAudioAssetClass",
            "module": "src/asset/raw/audio.ts"
          }
        },
        {
          "kind": "js",
          "name": "ClientRawAudioInstanceClass",
          "declaration": {
            "name": "ClientRawAudioInstanceClass",
            "module": "src/asset/raw/audio.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/raw/image.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClientRawImageAssetClass",
          "members": [
            {
              "kind": "method",
              "name": "assetCachePromise",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "AssetCacheArgs"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "definitionIcon",
              "return": {
                "type": {
                  "text": "Promise<SVGSVGElement> | undefined"
                }
              },
              "parameters": [
                {
                  "name": "size",
                  "type": {
                    "text": "Size"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "initializeProperties",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "ClientRawImageAssetObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instanceFromObject",
              "return": {
                "type": {
                  "text": "ImageInstance"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "optional": true,
                  "type": {
                    "text": "ImageInstanceObject | undefined"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "loadedImage",
              "type": {
                "text": "ClientImage | undefined"
              }
            },
            {
              "kind": "method",
              "name": "handleAsset",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAsset"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "WithImageAsset",
            "module": "src/asset/raw/image.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "ClientRawImageInstanceClass",
          "members": [
            {
              "kind": "method",
              "name": "svgItemForTimelinePromise",
              "return": {
                "type": {
                  "text": "Promise<SvgItem>"
                }
              },
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "_time",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "ClientRawImageAsset"
              }
            }
          ],
          "superclass": {
            "name": "WithImageInstance",
            "module": "src/asset/raw/image.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientRawImageAssetClass",
          "declaration": {
            "name": "ClientRawImageAssetClass",
            "module": "src/asset/raw/image.ts"
          }
        },
        {
          "kind": "js",
          "name": "ClientRawImageInstanceClass",
          "declaration": {
            "name": "ClientRawImageInstanceClass",
            "module": "src/asset/raw/image.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/raw/importer.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "ClientRawElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-client-raw'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "ClientRawElement",
          "members": [
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "changeEvent",
                  "type": {
                    "text": "DragEvent"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit-element/lit-element.js"
          },
          "tagName": "ClientRawElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientRawElement",
          "declaration": {
            "name": "ClientRawElement",
            "module": "src/asset/raw/importer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "ClientRawElementName",
          "declaration": {
            "name": "ClientRawElement",
            "module": "src/asset/raw/importer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/raw/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./importer.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./audio.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./image.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./video.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ClientRawAssetClass.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/raw/video.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClientRawVideoAssetClass",
          "members": [
            {
              "kind": "method",
              "name": "assetCachePromise",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "AssetCacheArgs"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "audibleSource",
              "return": {
                "type": {
                  "text": "AudioBufferSourceNode | undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "definitionIcon",
              "return": {
                "type": {
                  "text": "Promise<SVGSVGElement> | undefined"
                }
              },
              "parameters": [
                {
                  "name": "size",
                  "type": {
                    "text": "Size"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "imageFromTranscodingPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<ClientImage>"
                }
              },
              "parameters": [
                {
                  "name": "transcoding",
                  "type": {
                    "text": "Transcoding | undefined"
                  }
                },
                {
                  "name": "definitionTime",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "outSize",
                  "optional": true,
                  "type": {
                    "text": "Size"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "imageFromVideoTranscodingPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<ClientImage>"
                }
              },
              "parameters": [
                {
                  "name": "previewTranscoding",
                  "type": {
                    "text": "Transcoding | undefined"
                  }
                },
                {
                  "name": "definitionTime",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "outSize",
                  "optional": true,
                  "type": {
                    "text": "Size"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "initializeProperties",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "ClientRawVideoAssetObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instanceFromObject",
              "return": {
                "type": {
                  "text": "VideoInstance"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "optional": true,
                  "type": {
                    "text": "VideoInstanceObject | undefined"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "loadedImages",
              "privacy": "private",
              "default": "new Map<string, ClientImage>()"
            },
            {
              "kind": "method",
              "name": "loadedImage",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "ClientImage | undefined"
                }
              },
              "parameters": [
                {
                  "name": "definitionTime",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "outSize",
                  "optional": true,
                  "type": {
                    "text": "Size"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "loadedImageKey",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "definitionTime",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "outSize",
                  "optional": true,
                  "type": {
                    "text": "Size"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "loadedImagePromise",
              "return": {
                "type": {
                  "text": "Promise<ClientImage>"
                }
              },
              "parameters": [
                {
                  "name": "definitionTime",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "outSize",
                  "optional": true,
                  "type": {
                    "text": "Size"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "preloadAudiblePromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "_args",
                  "type": {
                    "text": "AssetCacheArgs"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "request",
              "type": {
                "text": "MediaRequest"
              }
            },
            {
              "kind": "method",
              "name": "preloadVisiblePromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "AssetCacheArgs"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "previewTranscoding",
              "type": {
                "text": "Transcoding | undefined"
              }
            },
            {
              "kind": "method",
              "name": "sequenceImagesPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "AssetCacheArgs"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleAsset",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAsset"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "WithVideoAsset",
            "module": "src/asset/raw/video.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "ClientRawVideoInstanceClass",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "ClientRawVideoAsset"
              }
            },
            {
              "kind": "method",
              "name": "containedPreviewPromise",
              "return": {
                "type": {
                  "text": "Promise<Preview>"
                }
              },
              "parameters": [
                {
                  "name": "video",
                  "type": {
                    "text": "ClientVideo"
                  }
                },
                {
                  "name": "_content",
                  "type": {
                    "text": "ClientInstance"
                  }
                },
                {
                  "name": "containerRect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "_size",
                  "type": {
                    "text": "Size"
                  }
                },
                {
                  "name": "time",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "_component",
                  "type": {
                    "text": "Panel"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_div",
              "type": {
                "text": "HTMLDivElement | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "div",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_foreignElement",
              "type": {
                "text": "SVGForeignObjectElement | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "foreignElement"
            },
            {
              "kind": "field",
              "name": "loadedVideo",
              "type": {
                "text": "ClientVideo | undefined"
              }
            },
            {
              "kind": "method",
              "name": "previewVideoPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<ClientVideo>"
                }
              },
              "parameters": [
                {
                  "name": "previewTranscoding",
                  "type": {
                    "text": "Transcoding | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "sequenceItemPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<SvgItem>"
                }
              },
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "definitionTime",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "stylesPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<string[]>"
                }
              },
              "parameters": [
                {
                  "name": "zeroRect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "definitionTime",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "stylesSrcPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<string>"
                }
              },
              "parameters": [
                {
                  "name": "_zeroRect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "_definitionTime",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "svgItemForPlayerPromise",
              "return": {
                "type": {
                  "text": "Promise<SvgItem>"
                }
              },
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "time",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "svgItemForTimelinePromise",
              "return": {
                "type": {
                  "text": "Promise<SvgItem>"
                }
              },
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "time",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "unload"
            },
            {
              "kind": "method",
              "name": "videoForPlayerPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "SvgItem"
                }
              },
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "definitionTime",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "videoItemForPlayerPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<SvgItem>"
                }
              },
              "parameters": [
                {
                  "name": "previewTranscoding",
                  "type": {
                    "text": "Transcoding | undefined"
                  }
                },
                {
                  "name": "rect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "definitionTime",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_clientCanMaskVideo",
              "type": {
                "text": "boolean | undefined"
              },
              "static": true
            },
            {
              "kind": "field",
              "name": "clientCanMaskVideo",
              "type": {
                "text": "boolean"
              },
              "static": true
            }
          ],
          "superclass": {
            "name": "WithVideoInstance",
            "module": "src/asset/raw/video.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientRawVideoAssetClass",
          "declaration": {
            "name": "ClientRawVideoAssetClass",
            "module": "src/asset/raw/video.ts"
          }
        },
        {
          "kind": "js",
          "name": "ClientRawVideoInstanceClass",
          "declaration": {
            "name": "ClientRawVideoInstanceClass",
            "module": "src/asset/raw/video.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/objects/fetch.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/objects/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./fetch.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/shape/image.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClientShapeAssetClass",
          "members": [
            {
              "kind": "method",
              "name": "definitionIcon",
              "return": {
                "type": {
                  "text": "Promise<SVGSVGElement> | undefined"
                }
              },
              "parameters": [
                {
                  "name": "size",
                  "type": {
                    "text": "Size"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instanceFromObject",
              "return": {
                "type": {
                  "text": "ShapeInstance"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "optional": true,
                  "type": {
                    "text": "ShapeInstanceObject"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_defaultAsset",
              "type": {
                "text": "ClientShapeAsset | undefined"
              },
              "privacy": "private",
              "static": true
            },
            {
              "kind": "field",
              "name": "defaultAsset",
              "type": {
                "text": "ClientShapeAsset"
              },
              "privacy": "private",
              "static": true
            },
            {
              "kind": "method",
              "name": "handleAsset",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAsset"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "WithShapeAsset",
            "module": "src/asset/shape/image.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "ClientShapeInstanceClass",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "ClientShapeAsset"
              }
            },
            {
              "kind": "method",
              "name": "containerSvgItemPromise",
              "return": {
                "type": {
                  "text": "Promise<SvgItem>"
                }
              },
              "parameters": [
                {
                  "name": "containerRect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "_time",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "_component",
                  "type": {
                    "text": "Panel"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instanceCachePromise",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "_args",
                  "type": {
                    "text": "InstanceCacheArgs"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "pathElement",
              "return": {
                "type": {
                  "text": "SvgItem"
                }
              },
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "forecolor",
                  "default": "''"
                }
              ]
            }
          ],
          "superclass": {
            "name": "WithShapeInstance",
            "module": "src/asset/shape/image.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientShapeAssetClass",
          "declaration": {
            "name": "ClientShapeAssetClass",
            "module": "src/asset/shape/image.ts"
          }
        },
        {
          "kind": "js",
          "name": "ClientShapeInstanceClass",
          "declaration": {
            "name": "ClientShapeInstanceClass",
            "module": "src/asset/shape/image.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/shape/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./image.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/text/image.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClientTextAssetClass",
          "members": [
            {
              "kind": "method",
              "name": "assetCachePromise",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "AssetCacheArgs"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "definitionIcon",
              "return": {
                "type": {
                  "text": "Promise<SVGSVGElement> | undefined"
                }
              },
              "parameters": [
                {
                  "name": "size",
                  "type": {
                    "text": "Size"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "family",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "initializeProperties",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "ClientTextAssetObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instanceFromObject",
              "return": {
                "type": {
                  "text": "TextInstance"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "optional": true,
                  "type": {
                    "text": "TextInstanceObject"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_intrinsicRect",
              "type": {
                "text": "Rect | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "intrinsicRect",
              "type": {
                "text": "Rect"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "intrinsicRectInitialize",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Rect"
                }
              }
            },
            {
              "kind": "method",
              "name": "loadFontPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<ClientFontDataOrError>"
                }
              },
              "parameters": [
                {
                  "name": "transcoding",
                  "optional": true,
                  "type": {
                    "text": "Transcoding"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "loadedFont",
              "type": {
                "text": "ClientFont | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleAsset",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventAsset"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "WithTextAsset",
            "module": "src/asset/text/image.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "ClientTextInstanceClass",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "ClientTextAsset"
              }
            },
            {
              "kind": "method",
              "name": "containerSvgItemPromise",
              "return": {
                "type": {
                  "text": "Promise<SvgItem>"
                }
              },
              "parameters": [
                {
                  "name": "containerRect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "_time",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "_component",
                  "type": {
                    "text": "Panel"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "intrinsicRect",
              "return": {
                "type": {
                  "text": "Rect"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "intrinsicRectInitialize",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Rect"
                }
              }
            },
            {
              "kind": "method",
              "name": "pathElement",
              "return": {
                "type": {
                  "text": "SvgItem"
                }
              },
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "Rect"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setValue",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Scalar"
                  }
                },
                {
                  "name": "property",
                  "optional": true,
                  "type": {
                    "text": "Property"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "WithTextInstance",
            "module": "src/asset/text/image.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientTextAssetClass",
          "declaration": {
            "name": "ClientTextAssetClass",
            "module": "src/asset/text/image.ts"
          }
        },
        {
          "kind": "js",
          "name": "ClientTextInstanceClass",
          "declaration": {
            "name": "ClientTextInstanceClass",
            "module": "src/asset/text/image.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/text/importer.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/asset/text/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./importer.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./image.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Mash/ClientClipClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClientClipClass",
          "members": [
            {
              "kind": "field",
              "name": "backgroundNode"
            },
            {
              "kind": "method",
              "name": "clipIcon",
              "return": {
                "type": {
                  "text": "Promise<SvgOrImageDataOrError>"
                }
              },
              "parameters": [
                {
                  "name": "frameSize",
                  "type": {
                    "text": "Size"
                  }
                },
                {
                  "name": "size",
                  "type": {
                    "text": "Size"
                  }
                },
                {
                  "name": "scale",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "gap",
                  "default": "1"
                }
              ]
            },
            {
              "kind": "field",
              "name": "container",
              "type": {
                "text": "ClientVisibleInstance"
              }
            },
            {
              "kind": "field",
              "name": "content",
              "type": {
                "text": "ClientInstance"
              }
            },
            {
              "kind": "method",
              "name": "clipPreviewPromise",
              "return": {
                "type": {
                  "text": "Promise<Preview>"
                }
              },
              "parameters": [
                {
                  "name": "size",
                  "type": {
                    "text": "Size"
                  }
                },
                {
                  "name": "time",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "component",
                  "type": {
                    "text": "Panel"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "changeScalar",
              "return": {
                "type": {
                  "text": "ChangeActionObject"
                }
              },
              "parameters": [
                {
                  "name": "propertyId",
                  "type": {
                    "text": "PropertyId"
                  }
                },
                {
                  "name": "scalar",
                  "optional": true,
                  "type": {
                    "text": "Scalar"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "shouldSelectProperty",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "targetId",
              "type": {
                "text": "TargetId"
              },
              "default": "TypeClip"
            },
            {
              "kind": "field",
              "name": "track",
              "type": {
                "text": "ClientTrack"
              }
            },
            {
              "kind": "method",
              "name": "updateAssetId",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "oldId",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "newId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "ClipClass",
            "package": "@moviemasher/lib-shared"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientClipClass",
          "declaration": {
            "name": "ClientClipClass",
            "module": "src/Client/Mash/ClientClipClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Mash/ClientMashGuards.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isClientMashAsset",
          "return": {
            "type": {
              "text": "value is ClientMashAsset"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "assertClientMashAsset",
          "return": {
            "type": {
              "text": "asserts value is ClientMashAsset"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            },
            {
              "name": "name",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isClientMashInstance",
          "return": {
            "type": {
              "text": "value is ClientMashInstance"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "assertClientMashInstance",
          "return": {
            "type": {
              "text": "asserts value is ClientMashInstance"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            },
            {
              "name": "name",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isClientClip",
          "return": {
            "type": {
              "text": "value is ClientClip"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "assertClientClip",
          "return": {
            "type": {
              "text": "asserts value is ClientClip"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            },
            {
              "name": "name",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isClientTrack",
          "return": {
            "type": {
              "text": "value is ClientTrack"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isClientMashAsset",
          "declaration": {
            "name": "isClientMashAsset",
            "module": "src/Client/Mash/ClientMashGuards.ts"
          }
        },
        {
          "kind": "js",
          "name": "assertClientMashAsset",
          "declaration": {
            "name": "assertClientMashAsset",
            "module": "src/Client/Mash/ClientMashGuards.ts"
          }
        },
        {
          "kind": "js",
          "name": "isClientMashInstance",
          "declaration": {
            "name": "isClientMashInstance",
            "module": "src/Client/Mash/ClientMashGuards.ts"
          }
        },
        {
          "kind": "js",
          "name": "assertClientMashInstance",
          "declaration": {
            "name": "assertClientMashInstance",
            "module": "src/Client/Mash/ClientMashGuards.ts"
          }
        },
        {
          "kind": "js",
          "name": "isClientClip",
          "declaration": {
            "name": "isClientClip",
            "module": "src/Client/Mash/ClientMashGuards.ts"
          }
        },
        {
          "kind": "js",
          "name": "assertClientClip",
          "declaration": {
            "name": "assertClientClip",
            "module": "src/Client/Mash/ClientMashGuards.ts"
          }
        },
        {
          "kind": "js",
          "name": "isClientTrack",
          "declaration": {
            "name": "isClientTrack",
            "module": "src/Client/Mash/ClientMashGuards.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Mash/ClientTrackClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClientTrackClass",
          "members": [
            {
              "kind": "method",
              "name": "addClips",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "clips",
                  "type": {
                    "text": "ClientClips"
                  }
                },
                {
                  "name": "insertIndex",
                  "default": "0"
                }
              ]
            },
            {
              "kind": "field",
              "name": "clips",
              "type": {
                "text": "ClientClips"
              }
            },
            {
              "kind": "method",
              "name": "frameForClipNearFrame",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "clip",
                  "type": {
                    "text": "ClientClip"
                  }
                },
                {
                  "name": "insertFrame",
                  "default": "0"
                }
              ]
            },
            {
              "kind": "field",
              "name": "mash",
              "type": {
                "text": "ClientMashAsset"
              }
            },
            {
              "kind": "method",
              "name": "removeClips",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "clips",
                  "type": {
                    "text": "ClientClips"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "TrackClass",
            "package": "@moviemasher/lib-shared"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientTrackClass",
          "declaration": {
            "name": "ClientTrackClass",
            "module": "src/Client/Mash/ClientTrackClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Mash/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ClientMashGuards.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ClientTrackClass.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ClientClipClass.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Context/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Actions/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./MashPreview/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Select/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Visible/ClientVisibleAssetMixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "ClientVisibleAssetMixin",
          "members": [
            {
              "kind": "field",
              "name": "previewSize",
              "type": {
                "text": "Size | undefined"
              }
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientVisibleAssetMixin",
          "declaration": {
            "name": "ClientVisibleAssetMixin",
            "module": "src/Client/Visible/ClientVisibleAssetMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Visible/ClientVisibleInstanceMixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "ClientVisibleInstanceMixin",
          "members": [
            {
              "kind": "field",
              "name": "asset",
              "type": {
                "text": "ClientVisibleAsset"
              }
            },
            {
              "kind": "method",
              "name": "clipperElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "SVGClipPathElement | SVGMaskElement"
                }
              },
              "parameters": [
                {
                  "name": "group",
                  "type": {
                    "text": "SVGGElement"
                  }
                },
                {
                  "name": "luminance",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "containedPreviewPromise",
              "return": {
                "type": {
                  "text": "Promise<Preview>"
                }
              },
              "parameters": [
                {
                  "name": "contentItem",
                  "type": {
                    "text": "SvgItem"
                  }
                },
                {
                  "name": "content",
                  "type": {
                    "text": "ClientInstance"
                  }
                },
                {
                  "name": "containerRect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "size",
                  "type": {
                    "text": "Size"
                  }
                },
                {
                  "name": "time",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "component",
                  "type": {
                    "text": "Panel"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "clippedPreviewPromise",
              "return": {
                "type": {
                  "text": "Promise<Preview>"
                }
              },
              "parameters": [
                {
                  "name": "content",
                  "type": {
                    "text": "ClientVisibleInstance"
                  }
                },
                {
                  "name": "containerRect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "previewSize",
                  "type": {
                    "text": "Size"
                  }
                },
                {
                  "name": "time",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "component",
                  "type": {
                    "text": "Panel"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "containerSvgFilter",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "SVGFilterElement | undefined"
                }
              },
              "parameters": [
                {
                  "name": "_svgItem",
                  "type": {
                    "text": "SvgItem"
                  }
                },
                {
                  "name": "_outputSize",
                  "type": {
                    "text": "Size"
                  }
                },
                {
                  "name": "_containerRect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "_time",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "_clipTime",
                  "type": {
                    "text": "TimeRange"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "containerSvgItemPromise",
              "return": {
                "type": {
                  "text": "Promise<SvgItem>"
                }
              },
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "time",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "component",
                  "type": {
                    "text": "Panel"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "contentPreviewItemPromise",
              "return": {
                "type": {
                  "text": "Promise<SvgItem>"
                }
              },
              "parameters": [
                {
                  "name": "containerRect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "shortest",
                  "type": {
                    "text": "PropertySize"
                  }
                },
                {
                  "name": "time",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "component",
                  "type": {
                    "text": "Panel"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "contentSvgFilter",
              "return": {
                "type": {
                  "text": "SVGFilterElement | undefined"
                }
              },
              "parameters": [
                {
                  "name": "container",
                  "type": {
                    "text": "ContainerInstance"
                  }
                },
                {
                  "name": "svgItem",
                  "type": {
                    "text": "SvgItem"
                  }
                },
                {
                  "name": "_outputSize",
                  "type": {
                    "text": "Size"
                  }
                },
                {
                  "name": "_containerRect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "time",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "clipTime",
                  "type": {
                    "text": "TimeRange"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "intrinsicRect",
              "return": {
                "type": {
                  "text": "Rect"
                }
              },
              "parameters": [
                {
                  "name": "editing",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "intrinsicsKnown",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "type": {
                    "text": "IntrinsicOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "pathElement",
              "return": {
                "type": {
                  "text": "SvgItem"
                }
              },
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "forecolor",
                  "default": "'none'"
                }
              ]
            },
            {
              "kind": "field",
              "name": "_svgElement",
              "type": {
                "text": "SVGSVGElement | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "svgElement",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "svgItemForPlayerPromise",
              "return": {
                "type": {
                  "text": "Promise<SvgItem>"
                }
              },
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "time",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "svgItemForTimelinePromise",
              "return": {
                "type": {
                  "text": "Promise<SvgItem>"
                }
              },
              "parameters": [
                {
                  "name": "_rect",
                  "type": {
                    "text": "Rect"
                  }
                },
                {
                  "name": "_time",
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClientVisibleInstanceMixin",
          "declaration": {
            "name": "ClientVisibleInstanceMixin",
            "module": "src/Client/Visible/ClientVisibleInstanceMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Visible/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ClientVisibleAssetMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ClientVisibleInstanceMixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/request/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./request.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/request/request.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "urlIsBlob",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "url",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "requestUrl",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "request",
              "type": {
                "text": "MediaRequest"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "urlIsBlob",
          "declaration": {
            "name": "urlIsBlob",
            "module": "src/Client/request/request.ts"
          }
        },
        {
          "kind": "js",
          "name": "requestUrl",
          "declaration": {
            "name": "requestUrl",
            "module": "src/Client/request/request.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/group/aspect.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "AspectControlGroupElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-control-group-aspect'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "AspectControlGroupElement",
          "members": [
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "handleControlGroup",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventControlGroup"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "propertyIds",
                  "type": {
                    "text": "PropertyIds"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "names",
              "type": {
                "text": "Strings"
              },
              "privacy": "private",
              "static": true,
              "default": "[\n    'aspectWidth', 'aspectHeight', 'aspectShortest',\n  ]"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            }
          ],
          "superclass": {
            "name": "WithControlGroup",
            "module": "src/control/group/aspect.ts"
          },
          "tagName": "AspectControlGroupElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AspectControlGroupElement",
          "declaration": {
            "name": "AspectControlGroupElement",
            "module": "src/control/group/aspect.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "AspectControlGroupElementName",
          "declaration": {
            "name": "AspectControlGroupElement",
            "module": "src/control/group/aspect.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/group/dimensions.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "DimenstionsControlGroupElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-control-group-dimensions'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "DimenstionsControlGroupElement",
          "members": [
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "dimensionsContent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Contents"
                }
              },
              "parameters": [
                {
                  "name": "aspectFlip",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "portrait",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleHeight",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "StringEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleWidth",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "StringEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleControlGroup",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventControlGroup"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "propertyIds",
                  "type": {
                    "text": "PropertyIds"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "names",
              "type": {
                "text": "Strings"
              },
              "privacy": "private",
              "static": true,
              "default": "[\n    ...SIZE_KEYS.flatMap(key => [key, `${key}${End}`]),\n    'lock',\n    `size${Aspect}`,\n  ]"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            }
          ],
          "superclass": {
            "name": "WithSizeReactive",
            "module": "src/control/group/dimensions.ts"
          },
          "tagName": "DimenstionsControlGroupElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DimenstionsControlGroupElement",
          "declaration": {
            "name": "DimenstionsControlGroupElement",
            "module": "src/control/group/dimensions.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "DimenstionsControlGroupElementName",
          "declaration": {
            "name": "DimenstionsControlGroupElement",
            "module": "src/control/group/dimensions.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/group/fill.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "FillControlGroupElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-control-group-fill'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "FillControlGroupElement",
          "members": [
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "handleColor",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "StringEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleOpacity",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "StringEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleControlGroup",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventControlGroup"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "propertyIds",
                  "type": {
                    "text": "PropertyIds"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "names",
              "type": {
                "text": "Strings"
              },
              "privacy": "private",
              "static": true,
              "default": "[\n    'color', 'colorEnd', 'opacity', 'opacityEnd'\n  ]"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            }
          ],
          "superclass": {
            "name": "WithControlGroup",
            "module": "src/control/group/fill.ts"
          },
          "tagName": "FillControlGroupElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FillControlGroupElement",
          "declaration": {
            "name": "FillControlGroupElement",
            "module": "src/control/group/fill.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "FillControlGroupElementName",
          "declaration": {
            "name": "FillControlGroupElement",
            "module": "src/control/group/fill.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/group/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./aspect.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./dimensions.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./fill.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./location.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./time.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/group/location.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "LocationControlGroupElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-control-group-location'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "LocationControlGroupElement",
          "members": [
            {
              "kind": "method",
              "name": "constrainedContent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "OptionalContent"
                }
              },
              "parameters": [
                {
                  "name": "flipped",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "handleDirection",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "StringEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleX",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "StringEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleY",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "StringEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleControlGroup",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventControlGroup"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "propertyIds",
                  "type": {
                    "text": "PropertyIds"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "names",
              "type": {
                "text": "Strings"
              },
              "privacy": "private",
              "static": true,
              "default": "[\n    ...DIRECTIONS_SIDE.map(direction => `${direction}${Crop}`),\n    ...POINT_KEYS.flatMap(key => ([key, `${key}${End}`])),\n    `point${Aspect}`,\n  ]"
            },
            {
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            }
          ],
          "superclass": {
            "name": "WithSizeReactive",
            "module": "src/control/group/location.ts"
          },
          "tagName": "LocationControlGroupElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LocationControlGroupElement",
          "declaration": {
            "name": "LocationControlGroupElement",
            "module": "src/control/group/location.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "LocationControlGroupElementName",
          "declaration": {
            "name": "LocationControlGroupElement",
            "module": "src/control/group/location.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/control/group/time.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "TimeControlGroupElementName",
          "type": {
            "text": "string"
          },
          "default": "'movie-masher-control-group-time'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "TimeControlGroupElement",
          "members": [
            {
              "kind": "field",
              "name": "framedContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "defaultContent",
              "type": {
                "text": "OptionalContent"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "handleControlGroup",
              "static": true,
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventControlGroup"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "instance",
              "static": true,
              "parameters": [
                {
                  "name": "propertyIds",
                  "type": {
                    "text": "PropertyIds"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "names",
              "type": {
                "text": "Strings"
              },
              "privacy": "private",
              "static": true,
              "default": "['frame', 'frames', 'timing']"
            },
            {
              "kind": "field",
              "name": "",
              "privacy": "public",
              "attribute": ""
            }
          ],
          "attributes": [
            {
              "name": "",
              "fieldName": ""
            }
          ],
          "superclass": {
            "name": "WithControlGroup",
            "module": "src/control/group/time.ts"
          },
          "tagName": "TimeControlGroupElementName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimeControlGroupElement",
          "declaration": {
            "name": "TimeControlGroupElement",
            "module": "src/control/group/time.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "TimeControlGroupElementName",
          "declaration": {
            "name": "TimeControlGroupElement",
            "module": "src/control/group/time.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Mash/Context/AudibleContext.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AudibleContext",
          "members": [
            {
              "kind": "method",
              "name": "addSource",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "source",
                  "type": {
                    "text": "AudibleContextSource"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_context",
              "type": {
                "text": "AudibleContextData | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "context",
              "type": {
                "text": "AudibleContextData"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "createBuffer",
              "return": {
                "type": {
                  "text": "AudioBuffer"
                }
              },
              "parameters": [
                {
                  "name": "seconds",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "createBufferSource",
              "return": {
                "type": {
                  "text": "ClientAudioNode"
                }
              },
              "parameters": [
                {
                  "name": "buffer",
                  "optional": true,
                  "type": {
                    "text": "AudioBuffer"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "createGain",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "GainNode"
                }
              }
            },
            {
              "kind": "field",
              "name": "currentTime",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "method",
              "name": "decode",
              "return": {
                "type": {
                  "text": "Promise<AudioBuffer>"
                }
              },
              "parameters": [
                {
                  "name": "buffer",
                  "type": {
                    "text": "ArrayBuffer"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "deleteSource",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "destination",
              "type": {
                "text": "AudioDestinationNode"
              }
            },
            {
              "kind": "method",
              "name": "getSource",
              "return": {
                "type": {
                  "text": "AudibleContextSource | undefined"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "hasSource",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "sourcesById",
              "privacy": "private",
              "default": "new Map<string, AudibleContextSource>()"
            },
            {
              "kind": "method",
              "name": "startAt",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "source",
                  "type": {
                    "text": "ClientAudioNode"
                  }
                },
                {
                  "name": "start",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "duration",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "offset",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "loops",
                  "default": "false"
                }
              ]
            }
          ]
        },
        {
          "kind": "variable",
          "name": "AudibleContextInstance",
          "default": "new AudibleContext()"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AudibleContext",
          "declaration": {
            "name": "AudibleContext",
            "module": "src/Client/Mash/Context/AudibleContext.ts"
          }
        },
        {
          "kind": "js",
          "name": "AudibleContextInstance",
          "declaration": {
            "name": "AudibleContextInstance",
            "module": "src/Client/Mash/Context/AudibleContext.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Mash/Context/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./AudibleContext.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/Actions/ActionsClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ActionsClass",
          "members": [
            {
              "kind": "method",
              "name": "add",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "action",
                  "type": {
                    "text": "Action"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "canRedo",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "canSave",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "canUndo",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "method",
              "name": "create",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "ActionObject"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "currentAction",
              "type": {
                "text": "Action | undefined"
              }
            },
            {
              "kind": "field",
              "name": "currentActionLast",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "method",
              "name": "destroy",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "dispatchChanged",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "action",
                  "type": {
                    "text": "Action"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "index",
              "type": {
                "text": "number"
              },
              "default": "-1"
            },
            {
              "kind": "field",
              "name": "instances",
              "type": {
                "text": "Action[]"
              },
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "redo",
              "return": {
                "type": {
                  "text": "Action"
                }
              }
            },
            {
              "kind": "method",
              "name": "save",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "undo",
              "return": {
                "type": {
                  "text": "Action"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ActionsClass",
          "declaration": {
            "name": "ActionsClass",
            "module": "src/Client/Masher/Actions/ActionsClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/Actions/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Action/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ActionsClass.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/MashPreview/MashPreview.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/MashPreview/MashPreviewClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "MashPreview of a single mash at a single frame",
          "name": "MashPreviewClass",
          "members": [
            {
              "kind": "field",
              "name": "audible",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "clip",
              "type": {
                "text": "ClientClip | undefined"
              },
              "default": "clip"
            },
            {
              "kind": "field",
              "name": "_clips",
              "type": {
                "text": "ClientClips | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "clips",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "clipsInitialize",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "combine",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "duration",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "intrinsicSizePromise",
              "type": {
                "text": "Promise<void>"
              }
            },
            {
              "kind": "field",
              "name": "mash",
              "type": {
                "text": "ClientMashAsset"
              },
              "default": "mash"
            },
            {
              "kind": "field",
              "name": "previewsPromise",
              "type": {
                "text": "Promise<Previews>"
              }
            },
            {
              "kind": "field",
              "name": "quantize",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "Size"
              }
            },
            {
              "kind": "field",
              "name": "selectedClip",
              "type": {
                "text": "ClientClip | undefined"
              },
              "default": "selectedClip"
            },
            {
              "kind": "field",
              "name": "streaming",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_previews",
              "type": {
                "text": "Previews | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "svgItemsPromise",
              "type": {
                "text": "Promise<SvgItems>"
              }
            },
            {
              "kind": "field",
              "name": "time",
              "type": {
                "text": "Time"
              },
              "default": "time"
            },
            {
              "kind": "field",
              "name": "_trackPreviews",
              "type": {
                "text": "TrackPreviews | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "trackPreviews",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "trackPreviewsInitialize",
              "type": {
                "text": "TrackPreviews"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "previews",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Previews"
                }
              },
              "parameters": [
                {
                  "name": "items",
                  "type": {
                    "text": "Previews"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "visible",
              "type": {
                "text": "boolean"
              },
              "default": "true"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MashPreviewClass",
          "declaration": {
            "name": "MashPreviewClass",
            "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/MashPreview/NonePreview.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "NonePreview",
          "members": [
            {
              "kind": "field",
              "name": "clips",
              "privacy": "protected",
              "type": {
                "text": "ClientClips"
              },
              "inheritedFrom": {
                "name": "MashPreviewClass",
                "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "audible",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MashPreviewClass",
                "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "clip",
              "type": {
                "text": "ClientClip | undefined"
              },
              "default": "clip",
              "inheritedFrom": {
                "name": "MashPreviewClass",
                "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "_clips",
              "type": {
                "text": "ClientClips | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "MashPreviewClass",
                "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "clipsInitialize",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MashPreviewClass",
                "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "combine",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MashPreviewClass",
                "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "duration",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "MashPreviewClass",
                "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "intrinsicSizePromise",
              "type": {
                "text": "Promise<void>"
              },
              "inheritedFrom": {
                "name": "MashPreviewClass",
                "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "mash",
              "type": {
                "text": "ClientMashAsset"
              },
              "default": "mash",
              "inheritedFrom": {
                "name": "MashPreviewClass",
                "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "previewsPromise",
              "type": {
                "text": "Promise<Previews>"
              },
              "inheritedFrom": {
                "name": "MashPreviewClass",
                "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "quantize",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "MashPreviewClass",
                "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "Size"
              },
              "inheritedFrom": {
                "name": "MashPreviewClass",
                "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "selectedClip",
              "type": {
                "text": "ClientClip | undefined"
              },
              "default": "selectedClip",
              "inheritedFrom": {
                "name": "MashPreviewClass",
                "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "streaming",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MashPreviewClass",
                "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "_previews",
              "type": {
                "text": "Previews | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "MashPreviewClass",
                "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "svgItemsPromise",
              "type": {
                "text": "Promise<SvgItems>"
              },
              "inheritedFrom": {
                "name": "MashPreviewClass",
                "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "time",
              "type": {
                "text": "Time"
              },
              "default": "time",
              "inheritedFrom": {
                "name": "MashPreviewClass",
                "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "_trackPreviews",
              "type": {
                "text": "TrackPreviews | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "MashPreviewClass",
                "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "trackPreviews",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MashPreviewClass",
                "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "trackPreviewsInitialize",
              "type": {
                "text": "TrackPreviews"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "MashPreviewClass",
                "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "previews",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Previews"
                }
              },
              "parameters": [
                {
                  "name": "items",
                  "type": {
                    "text": "Previews"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MashPreviewClass",
                "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "visible",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "inheritedFrom": {
                "name": "MashPreviewClass",
                "module": "src/Client/Masher/MashPreview/MashPreviewClass.ts"
              }
            }
          ],
          "superclass": {
            "name": "MashPreviewClass",
            "module": "/src/Client/Masher/MashPreview/MashPreviewClass.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NonePreview",
          "declaration": {
            "name": "NonePreview",
            "module": "src/Client/Masher/MashPreview/NonePreview.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/MashPreview/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./AudioPreview/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./NonePreview.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./MashPreview.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./MashPreviewClass.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./TrackPreview/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/Select/SelectedPropertyFunctions.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isSelectedProperty",
          "return": {
            "type": {
              "text": "value is SelectedProperty"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "selectedPropertiesScalarObject",
          "return": {
            "type": {
              "text": "ScalarRecord"
            }
          },
          "parameters": [
            {
              "name": "byName",
              "type": {
                "text": "SelectedPropertyRecord"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isSelectedProperty",
          "declaration": {
            "name": "isSelectedProperty",
            "module": "src/Client/Masher/Select/SelectedPropertyFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "selectedPropertiesScalarObject",
          "declaration": {
            "name": "selectedPropertiesScalarObject",
            "module": "src/Client/Masher/Select/SelectedPropertyFunctions.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/Select/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./SelectedPropertyFunctions.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/Actions/Action/ActionClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ActionClass",
          "members": [
            {
              "kind": "field",
              "name": "affects",
              "type": {
                "text": "PropertyIds"
              }
            },
            {
              "kind": "field",
              "name": "done",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "method",
              "name": "redo",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "redoAction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "undo",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "undoAction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "updateSelection",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ActionClass",
          "declaration": {
            "name": "ActionClass",
            "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/Actions/Action/ActionFactory.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "actionInstance",
          "return": {
            "type": {
              "text": "Action"
            }
          },
          "parameters": [
            {
              "name": "object",
              "type": {
                "text": "ActionArgs"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "actionInstance",
          "declaration": {
            "name": "actionInstance",
            "module": "src/Client/Masher/Actions/Action/ActionFactory.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/Actions/Action/ActionFunctions.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isAction",
          "return": {
            "type": {
              "text": "value is Action"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isChangeAction",
          "return": {
            "type": {
              "text": "value is ChangeAction"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isChangePropertyAction",
          "return": {
            "type": {
              "text": "value is ChangePropertyAction"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isChangePropertiesAction",
          "return": {
            "type": {
              "text": "value is ChangePropertiesAction"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isActionObject",
          "return": {
            "type": {
              "text": "value is ActionObject"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isChangeActionObject",
          "return": {
            "type": {
              "text": "value is ChangeActionObject"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isChangePropertyActionObject",
          "return": {
            "type": {
              "text": "value is ChangePropertyActionObject"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isChangePropertiesActionObject",
          "return": {
            "type": {
              "text": "value is ChangePropertiesActionObject"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isAction",
          "declaration": {
            "name": "isAction",
            "module": "src/Client/Masher/Actions/Action/ActionFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "isChangeAction",
          "declaration": {
            "name": "isChangeAction",
            "module": "src/Client/Masher/Actions/Action/ActionFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "isChangePropertyAction",
          "declaration": {
            "name": "isChangePropertyAction",
            "module": "src/Client/Masher/Actions/Action/ActionFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "isChangePropertiesAction",
          "declaration": {
            "name": "isChangePropertiesAction",
            "module": "src/Client/Masher/Actions/Action/ActionFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "isActionObject",
          "declaration": {
            "name": "isActionObject",
            "module": "src/Client/Masher/Actions/Action/ActionFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "isChangeActionObject",
          "declaration": {
            "name": "isChangeActionObject",
            "module": "src/Client/Masher/Actions/Action/ActionFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "isChangePropertyActionObject",
          "declaration": {
            "name": "isChangePropertyActionObject",
            "module": "src/Client/Masher/Actions/Action/ActionFunctions.ts"
          }
        },
        {
          "kind": "js",
          "name": "isChangePropertiesActionObject",
          "declaration": {
            "name": "isChangePropertiesActionObject",
            "module": "src/Client/Masher/Actions/Action/ActionFunctions.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/Actions/Action/AddClipsActionClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AddClipsActionClass",
          "members": [
            {
              "kind": "field",
              "name": "clips",
              "type": {
                "text": "ClientClips"
              },
              "default": "clips"
            },
            {
              "kind": "field",
              "name": "insertIndex",
              "type": {
                "text": "number | undefined"
              },
              "default": "insertIndex"
            },
            {
              "kind": "method",
              "name": "redoAction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "redoFrame",
              "type": {
                "text": "number | undefined"
              },
              "default": "redoFrame"
            },
            {
              "kind": "field",
              "name": "track",
              "type": {
                "text": "ClientTrack"
              }
            },
            {
              "kind": "field",
              "name": "trackIndex",
              "type": {
                "text": "number"
              },
              "default": "trackIndex"
            },
            {
              "kind": "method",
              "name": "undoAction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateSelection",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "createTracks",
              "type": {
                "text": "number"
              },
              "default": "createTracks",
              "inheritedFrom": {
                "name": "AddTrackActionClass",
                "module": "src/Client/Masher/Actions/Action/AddTrackActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "mashAsset",
              "type": {
                "text": "ClientMashAsset"
              },
              "default": "mashAsset",
              "inheritedFrom": {
                "name": "AddTrackActionClass",
                "module": "src/Client/Masher/Actions/Action/AddTrackActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "affects",
              "type": {
                "text": "PropertyIds"
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "done",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "redo",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "undo",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            }
          ],
          "superclass": {
            "name": "AddTrackActionClass",
            "module": "/src/Client/Masher/Actions/Action/AddTrackActionClass.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AddClipsActionClass",
          "declaration": {
            "name": "AddClipsActionClass",
            "module": "src/Client/Masher/Actions/Action/AddClipsActionClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/Actions/Action/AddTrackActionClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AddTrackActionClass",
          "members": [
            {
              "kind": "field",
              "name": "createTracks",
              "type": {
                "text": "number"
              },
              "default": "createTracks"
            },
            {
              "kind": "field",
              "name": "mashAsset",
              "type": {
                "text": "ClientMashAsset"
              },
              "default": "mashAsset"
            },
            {
              "kind": "method",
              "name": "redoAction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "undoAction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "affects",
              "type": {
                "text": "PropertyIds"
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "done",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "redo",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "undo",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateSelection",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            }
          ],
          "superclass": {
            "name": "ActionClass",
            "module": "/src/Client/Masher/Actions/Action/ActionClass.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AddTrackActionClass",
          "declaration": {
            "name": "AddTrackActionClass",
            "module": "src/Client/Masher/Actions/Action/AddTrackActionClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/Actions/Action/ChangeActionClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ChangeActionClass",
          "members": [
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "Propertied"
              },
              "default": "target"
            },
            {
              "kind": "method",
              "name": "updateAction",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_object",
                  "type": {
                    "text": "ChangeActionObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateSelection",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "affects",
              "type": {
                "text": "PropertyIds"
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "done",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "redo",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "redoAction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "undo",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "undoAction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            }
          ],
          "superclass": {
            "name": "ActionClass",
            "module": "/src/Client/Masher/Actions/Action/ActionClass.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ChangeActionClass",
          "declaration": {
            "name": "ChangeActionClass",
            "module": "src/Client/Masher/Actions/Action/ChangeActionClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/Actions/Action/ChangeFramesActionClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ChangeFramesActionClass",
          "members": [
            {
              "kind": "field",
              "name": "clip",
              "type": {
                "text": "ClientClip"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "mash",
              "type": {
                "text": "ClientMashAsset"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "redoAction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "undoAction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "affects",
              "type": {
                "text": "PropertyIds"
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "property",
              "type": {
                "text": "PropertyId"
              },
              "default": "property",
              "inheritedFrom": {
                "name": "ChangePropertyActionClass",
                "module": "src/Client/Masher/Actions/Action/ChangePropertyActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "redoValue",
              "type": {
                "text": "Scalar | undefined"
              },
              "default": "redoValue",
              "inheritedFrom": {
                "name": "ChangePropertyActionClass",
                "module": "src/Client/Masher/Actions/Action/ChangePropertyActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "redoValueNumber",
              "type": {
                "text": "number"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChangePropertyActionClass",
                "module": "src/Client/Masher/Actions/Action/ChangePropertyActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "undoValue",
              "type": {
                "text": "Scalar | undefined"
              },
              "default": "undoValue",
              "inheritedFrom": {
                "name": "ChangePropertyActionClass",
                "module": "src/Client/Masher/Actions/Action/ChangePropertyActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "undoValueNumber",
              "type": {
                "text": "number"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChangePropertyActionClass",
                "module": "src/Client/Masher/Actions/Action/ChangePropertyActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateAction",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "ChangePropertyActionObject"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChangeActionClass",
                "module": "src/Client/Masher/Actions/Action/ChangeActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "Scalar | undefined"
              },
              "inheritedFrom": {
                "name": "ChangePropertyActionClass",
                "module": "src/Client/Masher/Actions/Action/ChangePropertyActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "valueNumber",
              "type": {
                "text": "number | undefined"
              },
              "inheritedFrom": {
                "name": "ChangePropertyActionClass",
                "module": "src/Client/Masher/Actions/Action/ChangePropertyActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "Propertied"
              },
              "default": "target",
              "inheritedFrom": {
                "name": "ChangeActionClass",
                "module": "src/Client/Masher/Actions/Action/ChangeActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateSelection",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "done",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "redo",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "undo",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            }
          ],
          "superclass": {
            "name": "ChangePropertyActionClass",
            "module": "/src/Client/Masher/Actions/Action/ChangePropertyActionClass.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ChangeFramesActionClass",
          "declaration": {
            "name": "ChangeFramesActionClass",
            "module": "src/Client/Masher/Actions/Action/ChangeFramesActionClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/Actions/Action/ChangePropertiesActionClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ChangePropertiesActionClass",
          "members": [
            {
              "kind": "field",
              "name": "affects",
              "type": {
                "text": "PropertyIds"
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "redoAction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "redoValues",
              "type": {
                "text": "ScalarsById"
              },
              "default": "redoValues"
            },
            {
              "kind": "method",
              "name": "undoAction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "undoValues",
              "type": {
                "text": "ScalarsById"
              },
              "default": "undoValues"
            },
            {
              "kind": "method",
              "name": "updateAction",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "ChangePropertiesActionObject"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChangeActionClass",
                "module": "src/Client/Masher/Actions/Action/ChangeActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "Propertied"
              },
              "default": "target",
              "inheritedFrom": {
                "name": "ChangeActionClass",
                "module": "src/Client/Masher/Actions/Action/ChangeActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateSelection",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "done",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "redo",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "undo",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            }
          ],
          "superclass": {
            "name": "ChangeActionClass",
            "module": "/src/Client/Masher/Actions/Action/ChangeActionClass.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ChangePropertiesActionClass",
          "declaration": {
            "name": "ChangePropertiesActionClass",
            "module": "src/Client/Masher/Actions/Action/ChangePropertiesActionClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/Actions/Action/ChangePropertyActionClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ChangePropertyActionClass",
          "members": [
            {
              "kind": "field",
              "name": "affects",
              "type": {
                "text": "PropertyIds"
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "property",
              "type": {
                "text": "PropertyId"
              },
              "default": "property"
            },
            {
              "kind": "method",
              "name": "redoAction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "redoValue",
              "type": {
                "text": "Scalar | undefined"
              },
              "default": "redoValue"
            },
            {
              "kind": "field",
              "name": "redoValueNumber",
              "type": {
                "text": "number"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "undoAction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "undoValue",
              "type": {
                "text": "Scalar | undefined"
              },
              "default": "undoValue"
            },
            {
              "kind": "field",
              "name": "undoValueNumber",
              "type": {
                "text": "number"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "updateAction",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "ChangePropertyActionObject"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChangeActionClass",
                "module": "src/Client/Masher/Actions/Action/ChangeActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "Scalar | undefined"
              }
            },
            {
              "kind": "field",
              "name": "valueNumber",
              "type": {
                "text": "number | undefined"
              }
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "Propertied"
              },
              "default": "target",
              "inheritedFrom": {
                "name": "ChangeActionClass",
                "module": "src/Client/Masher/Actions/Action/ChangeActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateSelection",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "done",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "redo",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "undo",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            }
          ],
          "superclass": {
            "name": "ChangeActionClass",
            "module": "/src/Client/Masher/Actions/Action/ChangeActionClass.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ChangePropertyActionClass",
          "declaration": {
            "name": "ChangePropertyActionClass",
            "module": "src/Client/Masher/Actions/Action/ChangePropertyActionClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/Actions/Action/MoveClipActionClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MoveClipActionClass",
          "members": [
            {
              "kind": "field",
              "name": "affects",
              "type": {
                "text": "PropertyIds"
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "clip",
              "type": {
                "text": "ClientClip"
              },
              "default": "clip"
            },
            {
              "kind": "field",
              "name": "insertIndex",
              "type": {
                "text": "number | undefined"
              },
              "default": "insertIndex"
            },
            {
              "kind": "field",
              "name": "trackIndex",
              "type": {
                "text": "number"
              },
              "default": "trackIndex"
            },
            {
              "kind": "field",
              "name": "undoTrackIndex",
              "type": {
                "text": "number"
              },
              "default": "undoTrackIndex"
            },
            {
              "kind": "field",
              "name": "undoInsertIndex",
              "type": {
                "text": "number | undefined"
              },
              "default": "undoInsertIndex"
            },
            {
              "kind": "field",
              "name": "undoFrame",
              "type": {
                "text": "number | undefined"
              },
              "default": "undoFrame"
            },
            {
              "kind": "field",
              "name": "redoFrame",
              "type": {
                "text": "number | undefined"
              },
              "default": "redoFrame"
            },
            {
              "kind": "method",
              "name": "addClip",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "trackIndex",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "insertIndex",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "frame",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "redoAction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "undoAction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateSelection",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "createTracks",
              "type": {
                "text": "number"
              },
              "default": "createTracks",
              "inheritedFrom": {
                "name": "AddTrackActionClass",
                "module": "src/Client/Masher/Actions/Action/AddTrackActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "mashAsset",
              "type": {
                "text": "ClientMashAsset"
              },
              "default": "mashAsset",
              "inheritedFrom": {
                "name": "AddTrackActionClass",
                "module": "src/Client/Masher/Actions/Action/AddTrackActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "done",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "redo",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "undo",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            }
          ],
          "superclass": {
            "name": "AddTrackActionClass",
            "module": "/src/Client/Masher/Actions/Action/AddTrackActionClass.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MoveClipActionClass",
          "declaration": {
            "name": "MoveClipActionClass",
            "module": "src/Client/Masher/Actions/Action/MoveClipActionClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/Actions/Action/RemoveClipActionClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "RemoveClipActionClass",
          "members": [
            {
              "kind": "field",
              "name": "clip",
              "type": {
                "text": "ClientClip"
              },
              "default": "clip"
            },
            {
              "kind": "field",
              "name": "index",
              "type": {
                "text": "number"
              },
              "default": "index"
            },
            {
              "kind": "field",
              "name": "mash",
              "type": {
                "text": "ClientMashAsset"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "trackIndex",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "method",
              "name": "redoAction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "track",
              "type": {
                "text": "ClientTrack"
              },
              "default": "track"
            },
            {
              "kind": "method",
              "name": "undoAction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateSelection",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "affects",
              "type": {
                "text": "PropertyIds"
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "done",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "redo",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            },
            {
              "kind": "method",
              "name": "undo",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ActionClass",
                "module": "src/Client/Masher/Actions/Action/ActionClass.ts"
              }
            }
          ],
          "superclass": {
            "name": "ActionClass",
            "module": "/src/Client/Masher/Actions/Action/ActionClass.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RemoveClipActionClass",
          "declaration": {
            "name": "RemoveClipActionClass",
            "module": "src/Client/Masher/Actions/Action/RemoveClipActionClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/Actions/Action/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ActionClass.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ActionFactory.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ActionFunctions.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./AddClipsActionClass.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./AddTrackActionClass.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ChangeFramesActionClass.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ChangePropertiesActionClass.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ChangePropertyActionClass.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./MoveClipActionClass.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./RemoveClipActionClass.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/MashPreview/AudioPreview/AudioPreviewClass.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AudioPreviewClass",
          "members": [
            {
              "kind": "method",
              "name": "adjustClipGain",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "clip",
                  "type": {
                    "text": "Clip"
                  }
                },
                {
                  "name": "_quantize",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "adjustSourceGain",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "av",
                  "type": {
                    "text": "ClientAudibleInstance"
                  }
                },
                {
                  "name": "timeRange",
                  "type": {
                    "text": "TimeRange | StartOptions"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "buffer"
            },
            {
              "kind": "method",
              "name": "bufferClips",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "clips",
                  "type": {
                    "text": "Clip[]"
                  }
                },
                {
                  "name": "quantize",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "bufferSource",
              "type": {
                "text": "AudioBufferSourceNode | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "clear"
            },
            {
              "kind": "method",
              "name": "clipSources",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "ClientAudibleInstance[]"
                }
              },
              "parameters": [
                {
                  "name": "clip",
                  "type": {
                    "text": "Clip"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "createSources",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "clips",
                  "type": {
                    "text": "Clip[]"
                  }
                },
                {
                  "name": "_quantize",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "time",
                  "optional": true,
                  "type": {
                    "text": "Time"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "destroySources",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "clipsToKeep",
                  "default": "[]",
                  "type": {
                    "text": "Clip[]"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "gain"
            },
            {
              "kind": "method",
              "name": "setGain",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "quantize",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "playing",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "playingClips",
              "type": {
                "text": "Clip[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "seconds",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "method",
              "name": "startContext",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "startPlaying",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "time",
                  "type": {
                    "text": "Time"
                  }
                },
                {
                  "name": "clips",
                  "type": {
                    "text": "Clip[]"
                  }
                },
                {
                  "name": "quantize",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "startedMashAt",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "contextSecondsWhenStarted",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "method",
              "name": "stopContext",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "stopPlaying",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AudioPreviewClass",
          "declaration": {
            "name": "AudioPreviewClass",
            "module": "src/Client/Masher/MashPreview/AudioPreview/AudioPreviewClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/MashPreview/AudioPreview/AudioPreviewFactory.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "audioPreviewInstance",
          "return": {
            "type": {
              "text": "AudioPreview"
            }
          },
          "parameters": [
            {
              "name": "args",
              "type": {
                "text": "AudioPreviewArgs"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "audioPreviewInstance",
          "declaration": {
            "name": "audioPreviewInstance",
            "module": "src/Client/Masher/MashPreview/AudioPreview/AudioPreviewFactory.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/MashPreview/AudioPreview/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./AudioPreviewClass.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./AudioPreviewFactory.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/MashPreview/TrackPreview/TrackPreview.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/MashPreview/TrackPreview/TrackPreviewClass.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "TrackPreviewHandleSize",
          "type": {
            "text": "number"
          },
          "default": "8"
        },
        {
          "kind": "variable",
          "name": "TrackPreviewLineSize",
          "type": {
            "text": "number"
          },
          "default": "2"
        },
        {
          "kind": "class",
          "description": "MashPreview of a single track at a single frame, thus representing a single clip",
          "name": "TrackPreviewClass",
          "members": [
            {
              "kind": "field",
              "name": "clip",
              "type": {
                "text": "ClientClip"
              }
            },
            {
              "kind": "field",
              "name": "_timeRange",
              "type": {
                "text": "TimeRange | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "clipTimeRange",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "container",
              "type": {
                "text": "ClientVisibleInstance"
              }
            },
            {
              "kind": "method",
              "name": "editingSvgItem",
              "return": {
                "type": {
                  "text": "SvgItem"
                }
              },
              "parameters": [
                {
                  "name": "classes",
                  "type": {
                    "text": "string[]"
                  }
                },
                {
                  "name": "inactive",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "method",
              "name": "pointerDownHandler",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "preview",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_rect",
              "type": {
                "text": "Rect | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "rect",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "rectInitialize",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "Size"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "svgBoundsElement",
              "return": {
                "type": {
                  "text": "SvgItems"
                }
              },
              "parameters": [
                {
                  "name": "lineClasses",
                  "type": {
                    "text": "string[]"
                  }
                },
                {
                  "name": "handleClasses",
                  "type": {
                    "text": "string[]"
                  }
                },
                {
                  "name": "inactive",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "svgHandlePoint",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Point"
                }
              },
              "parameters": [
                {
                  "name": "dimensions",
                  "type": {
                    "text": "Size"
                  }
                },
                {
                  "name": "direction",
                  "type": {
                    "text": "Direction"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "time",
              "type": {
                "text": "Time"
              },
              "privacy": "private"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TrackPreviewHandleSize",
          "declaration": {
            "name": "TrackPreviewHandleSize",
            "module": "src/Client/Masher/MashPreview/TrackPreview/TrackPreviewClass.ts"
          }
        },
        {
          "kind": "js",
          "name": "TrackPreviewLineSize",
          "declaration": {
            "name": "TrackPreviewLineSize",
            "module": "src/Client/Masher/MashPreview/TrackPreview/TrackPreviewClass.ts"
          }
        },
        {
          "kind": "js",
          "name": "TrackPreviewClass",
          "declaration": {
            "name": "TrackPreviewClass",
            "module": "src/Client/Masher/MashPreview/TrackPreview/TrackPreviewClass.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Client/Masher/MashPreview/TrackPreview/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./TrackPreview.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./TrackPreviewClass.js"
          }
        }
      ]
    }
  ]
}
