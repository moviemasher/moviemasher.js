{
  "name": "@moviemasher/mono-repo",
  "description": "Movie Masher Mono Repository",
  "homepage": "https://moviemasher.com",
  "version": "5.1.2",
  "license": "MIT",
  "author": {
    "name": "Movie Masher",
    "email": "support@moviemasher.com"
  },
  "bugs": {
    "url": "https://github.com/moviemasher/moviemasher.js/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/moviemasher/moviemasher.js.git"
  },
  "scripts": {
    "build-and-test": "npm run build libs ; npm run test",
    "build-builder-component": "npm run build-builder --builder=component",
    "build-builder-core": "npm run build-builder --builder=core",
    "build-builder-documentation": "npm run build-builder --builder=documentation",
    "build-builder-plugin": "npm run build-builder --builder=plugin",
    "build-builder-test": "npm run build-builder --builder=test",
    "build-builder": "npm run docker-build --dir=packages/build/${npm_config_builder:=core}",
    "build-builders": "run-s build-builder-core build-builder-component build-builder-plugin build-builder-documentation",
    "build-component": "npm run docker-run-with --with=component",
    "build-core": "npm run docker-run-with --with=core",
    "build-docs": "typedoc --options ./typedoc.js",
    "build-documentation": "npm run docker-run-with --with=documentation",
    "build-image": "npm run docker-build --dir=images/${npm_config_image:=test-server}/dev",
    "build-package-json": "npm run cli packages",
    "build-plugin": "npm run docker-run-with --with=plugin",
    "build-space": "docker compose --env-file dev/local.env --file packages/builder/dev/docker-compose.yml run --rm service space --space=${npm_config_space:=test-server}",
    "build": "run-s build-package-json build-builders build-core build-component build-plugin build-documentation",
    "cli": "node dev/build/cli.mjs",
    "docker-build": "npm run docker-do --do='build' --dir=${npm_config_dir}",
    "docker-do": "docker compose --env-file dev/local.env --file ${npm_config_dir}/docker-compose.yml ${npm_config_do} service",
    "docker-down": "docker compose --env-file dev/local.env --file ${npm_config_dir:=packages}/${npm_config_space:=documentation}/dev/docker-compose.yml down -v",
    "docker-logs": "docker compose --env-file dev/local.env --file ${npm_config_dir:=packages}/${npm_config_space:=documentation}/dev/docker-compose.yml logs -f",
    "docker-run-non": "npm run docker-do --do='run -T --rm' --dir=${npm_config_dir}",
    "docker-run-with": "npm run docker-run-non --dir=packages/build/${npm_config_with}",
    "docker-run": "npm run docker-do --do='run -it --rm' --dir=${npm_config_dir}",
    "docker-up": "docker compose --env-file dev/local.env --file ${npm_config_dir:=packages}/${npm_config_space:=documentation}/dev/docker-compose.yml up -d ${npm_config_service:=service}",
    "frameworks": "npm run cli frameworks",
    "logs": "npm run docker-logs --dir=${npm_config_dir:=packages/example} --space=${npm_config_space:=standalone}",
    "publish": "npm publish --access public --workspace @moviemasher/${npm_config_space}",
    "start-documentation": "npm run start --dir=${npm_config_dir:=dev} --space=${npm_config_space:=documentation}",
    "start-example-component": "npm run start --dir=${npm_config_dir:=packages/client} --space=${npm_config_space:=component}",
    "start": "npm run docker-up --dir=${npm_config_dir:=packages/example} --space=${npm_config_space:=standalone}",
    "stop-documentation": "npm run stop --dir=${npm_config_dir:=dev} --space=${npm_config_space:=documentation}",
    "stop-example-component": "npm run stop --dir=${npm_config_dir:=packages/client} --space=${npm_config_space:=component}",
    "stop": "npm run docker-down --dir=${npm_config_dir:=packages/example} --space=${npm_config_space:=standalone}",
    "test-client-component": "npm run docker-run --dir=images/test-client/dev",
    "test-core-lib": "run-s docker-run --dir=images/test-shared/dev",
    "test-core-server": "npm run docker-run --dir=packages/core/server/dev/docker",
    "test-old": "npm run docker-run --dir=images --space=tester",
    "test": "run-s  test-client-component",

    "test-server": "npm run docker-run --dir=images/test-server/dev",

    "versions": "echo \"NodeJs: $(node -v)\" ; echo \"NPM: $(npm -v)\" ; echo \"TypeScript: $(tsc -v)\""
  },
  "devDependencies": {
    "@types/node": "18.13.0",
    "npm-run-all": "^4.1.5",
    "typescript": "4.9.5"
  },
  "workspaces": [
    "packages/runtime/*",
    "packages/example/*",
    "images/*",
    "packages/client/*",
    "packages/core/*",
    "packages/build/*",
    "plugin/protocol/*",
    "packages/server/*"
  ],
  "dependencies": {
    "@knodes/typedoc-plugin-code-blocks": "^0.23.4",
    "@lit-labs/observers": "^2.0.0"
  }
}
