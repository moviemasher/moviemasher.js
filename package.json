{
  "description": "JavaScript video editor and encoder - version 5.1.2",
  "homepage": "https://moviemasher.com",
  "version": "5.1.2",
  "license": "MIT",
  "author": {
    "name": "Movie Masher",
    "email": "support@moviemasher.com"
  },
  "bugs": {
    "url": "https://github.com/moviemasher/moviemasher.js/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/moviemasher/moviemasher.js.git"
  },
  "scripts": {
    "start": "npm run docker-up --dir=${npm_config_dir:=workspaces} --space=${npm_config_space:=standalone}",
    "stop": "npm run docker-down --dir=${npm_config_dir:=workspaces} --space=${npm_config_space:=standalone}",
    "logs": "npm run docker-logs --dir=${npm_config_dir:=workspaces} --space=${npm_config_space:=standalone}",
    "test": "npm run docker-run --dir=images --space=tester",
    "build-test": "npm run build libs ; npm run test",
    "build": "docker compose --env-file dev/local.env --file images/builder/dev/docker-compose.yml run --rm service",
    "build-space": "docker compose --env-file dev/local.env --file images/builder/dev/docker-compose.yml run --rm service space --space=${npm_config_space:=client-prebuild}",
    "docker-run": "docker compose --env-file dev/local.env --file ${npm_config_dir:=workspaces}/${npm_config_space:=example-supabase}/dev/docker-compose.yml run --rm -it ${npm_config_service:=service}",
    "docker-build": "docker compose --env-file dev/local.env --file ${npm_config_dir:=images}/${npm_config_space:=builder}/dev/docker-compose.yml build ${npm_config_service:=service}",
    "docker-up": "docker compose --env-file dev/local.env --file ${npm_config_dir:=workspaces}/${npm_config_space:=documentation}/dev/docker-compose.yml up -d ${npm_config_service:=service}",
    "docker-down": "docker compose --env-file dev/local.env --file ${npm_config_dir:=workspaces}/${npm_config_space:=documentation}/dev/docker-compose.yml down -v",
    "docker-logs": "docker compose --env-file dev/local.env --file ${npm_config_dir:=workspaces}/${npm_config_space:=documentation}/dev/docker-compose.yml logs -f",
    "publish": "npm publish --access public --workspace @moviemasher/${npm_config_space}"
  },
  "workspaces": [
    "images/*",
    "packages/*",
    "workspaces/*"
  ]
}
